{Modified: 2016-11-28T15:06:11.023000, Published: 2016-06-01T16:59:03.043000, access: {authentication: NONE, complexity: LOW, vector: NETWORK}, capec: [{id: 10, name: Buffer Overflow via Environment Variables, prerequisites: The application uses environment variables.
An environment variable exposed to the user is vulnerable to a buffer overflow.
The vulnerable environment variable uses untrusted data.
Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer., related_weakness: [120, 302, 118, 119, 74, 99, 20, 680, 733, 697], solutions: Do not expose environment variable to the user.
Do not use untrusted data in your environment variables.
Use a language or compiler that performs automatic bounds checking
There are tools such as Sharefuzz [R.10.3] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow., summary: This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.}, {id: 100, name: Overflow Buffers, prerequisites: Targeted software performs buffer operations.
Targeted software inadequately performs bounds-checking on buffer operations.
Attacker has the capability to influence the input to buffer operations., related_weakness: [120, 119, 131, 129, 805, 19, 680], solutions: Use a language or compiler that performs automatic bounds checking.
Use secure functions not vulnerable to buffer overflow.
If you have to use dangerous functions, make sure that you do boundary checking.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution.
Utilize static source code analysis tools to identify potential buffer overflow weaknesses in the software., summary: Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an attacker. As a consequence, an attacker is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the attackers' choice.}, {id: 14, name: Client-side Injection-induced Buffer Overflow, prerequisites: The targeted client software communicates with an external server.
The targeted client software has a buffer overflow vulnerability., related_weakness: [120, 353, 118, 119, 74, 20, 680, 697, 713], solutions: The client software should not install untrusted code from a non-authenticated server.
The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers.
Perform input validation for length of buffer inputs.
Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Ensure all buffer uses are consistently bounds-checked.
Use OS-level preventative functionality. Not a complete solution., summary: This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service.}, {id: 24, name: Filter Failure through Buffer Overflow, prerequisites: Ability to control the length of data passed to an active filter., related_weakness: [120, 119, 118, 74, 20, 680, 733, 697], solutions: Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs.
Pre-design: Use a language or compiler that performs automatic bounds checking.
Pre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Operational: Use OS-level preventative functionality. Not a complete solution.
Design: Use an abstraction library to abstract away risky APIs. Not a complete solution., summary: In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).}, {id: 42, name: MIME Conversion, prerequisites: The target system uses a mail server.
Mail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system., related_weakness: [120, 119, 74, 20], solutions: Stay up to date with third party vendor patches
From "Exploiting Software", please see reference below.
Use the sendmail restricted shell program (smrsh)
Use mail.local, summary: An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.}, {id: 44, name: Overflow Binary Resource File, prerequisites: Target software processes binary resource files.
Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file., related_weakness: [120, 119, 697, 713], solutions: Perform appropriate bounds checking on all buffers.
Design: Enforce principle of least privilege
Design: Static code analysis
Implementation: Execute program in less trusted process space environment, do not allow lower integrity processes to write to higher integrity processes
Implementation: Keep software patched to ensure that known vulnerabilities are not available for attackers to target on host., summary: An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the attacker access to the execution stack and execute arbitrary code in the target process. This attack pattern is a variant of standard buffer overflow attacks using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The attacker is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application, for the victim to download. The attacker then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow.}, {id: 45, name: Buffer Overflow via Symbolic Links, prerequisites: The attacker can create symbolic link on the target host.
The target host does not perform correct boundary checking while consuming data from a resources., related_weakness: [120, 285, 302, 118, 119, 74, 20, 680, 697], solutions: Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource.
Because Symlink can be modified by an attacker, make sure that the ones you read are located in protected directories.
Pay attention to the resource pointed to by your symlink links (See attack pattern named "Forced Symlink race"), they can be replaced by malicious resources.
Always check the size of the input data before copying to a buffer.
Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution., summary: This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.}, {id: 46, name: Overflow Variables and Tags, prerequisites: The target program consumes user-controllable data in the form of tags or variables.
The target program does not perform sufficient boundary checking., related_weakness: [120, 118, 119, 74, 20, 680, 733, 697], solutions: Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution.
Do not trust input data from user. Validate all user input., summary: This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.}, {id: 47, name: Buffer Overflow via Parameter Expansion, prerequisites: The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter.
The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is)., related_weakness: [120, 119, 118, 130, 131, 74, 20, 680, 697], solutions: Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system, summary: In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.}, {id: 8, name: Buffer Overflow in an API Call, prerequisites: The target host exposes an API to the user.
One or more API functions exposed by the target host has a buffer overflow vulnerability., related_weakness: [120, 119, 118, 74, 20, 680, 733, 697], solutions: Use a language or compiler that performs automatic bounds checking.
Use secure functions not vulnerable to buffer overflow.
If you have to use dangerous functions, make sure that you do boundary checking.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution., summary: This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An attacker who has access to an API may try to embed malicious code in the API function call and exploit a buffer overflow vulnerability in the function's implementation. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process.}, {id: 9, name: Buffer Overflow in Local Command-Line Utilities, prerequisites: The target host exposes a command-line utility to the user.
The command-line utility exposed by the target host has a buffer overflow vulnerability that can be exploited., related_weakness: [120, 118, 119, 74, 20, 680, 733, 697], solutions: Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow.
Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Operational: Use OS-level preventative functionality. Not a complete solution.
Apply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack.
Do not unnecessarily expose services., summary: This attack targets command-line utilities available in a number of shells. An attacker can leverage a vulnerability found in a command-line utility to escalate privilege to root.}], cvss: 5.0, cvss-time: 2016-06-14T10:07:15.530000, cwe: CWE-119, id: CVE-2016-3075, impact: {availability: PARTIAL, confidentiality: NONE, integrity: NONE}, last-modified: 2018-10-30T12:27:35.843000, nessus: [{NASL family: Ubuntu Local Security Checks, NASL id: UBUNTU_USN-2985-2.NASL, description: USN-2985-1 fixed vulnerabilities in the GNU C Library. The fix for CVE-2014-9761 introduced a regression which affected applications that use the libm library but were not fully restarted after the upgrade.
This update removes the fix for CVE-2014-9761 and a future update will be provided to address this issue.

We apologize for the inconvenience.

Martin Carpenter discovered that pt_chown in the GNU C Library did not properly check permissions for tty files. A local attacker could use this to gain administrative privileges or expose sensitive information. (CVE-2013-2207, CVE-2016-2856)

Robin Hack discovered that the Name Service Switch (NSS) implementation in the GNU C Library did not properly manage its file descriptors. An attacker could use this to cause a denial of service (infinite loop). (CVE-2014-8121)

Joseph Myers discovered that the GNU C Library did not properly handle long arguments to functions returning a representation of Not a Number (NaN). An attacker could use this to cause a denial of service (stack exhaustion leading to an application crash) or possibly execute arbitrary code.
(CVE-2014-9761)

Arjun Shankar discovered that in certain situations the nss_dns code in the GNU C Library did not properly account buffer sizes when passed an unaligned buffer. An attacker could use this to cause a denial of service or possibly execute arbitrary code. (CVE-2015-1781)

Sumit Bose and Lukas Slebodnik discovered that the Name Service Switch (NSS) implementation in the GNU C Library did not handle long lines in the files databases correctly. A local attacker could use this to cause a denial of service (application crash) or possibly execute arbitrary code.
(CVE-2015-5277)

Adam Nielsen discovered that the strftime function in the GNU C Library did not properly handle out-of-range argument data. An attacker could use this to cause a denial of service (application crash) or possibly expose sensitive information. (CVE-2015-8776)

Hector Marco and Ismael Ripoll discovered that the GNU C Library allowed the pointer-guarding protection mechanism to be disabled by honoring the LD_POINTER_GUARD environment variable across privilege boundaries. A local attacker could use this to exploit an existing vulnerability more easily.
(CVE-2015-8777)

Szabolcs Nagy discovered that the hcreate functions in the GNU C Library did not properly check its size argument, leading to an integer overflow. An attacker could use to cause a denial of service (application crash) or possibly execute arbitrary code. (CVE-2015-8778)

Maksymilian Arciemowicz discovered a stack-based buffer overflow in the catopen function in the GNU C Library when handling long catalog names. An attacker could use this to cause a denial of service (application crash) or possibly execute arbitrary code. (CVE-2015-8779)

Florian Weimer discovered that the getnetbyname implementation in the GNU C Library did not properly handle long names passed as arguments. An attacker could use to cause a denial of service (stack exhaustion leading to an application crash). (CVE-2016-3075).

Note that Tenable Network Security has extracted the preceding description block directly from the Ubuntu security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-12-01, plugin id: 91341, published: 2016-05-27, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=91341, title: Ubuntu 12.04 LTS / 14.04 LTS / 15.10 : eglibc, glibc regression (USN-2985-2)}, {NASL family: Ubuntu Local Security Checks, NASL id: UBUNTU_USN-2985-1.NASL, description: Martin Carpenter discovered that pt_chown in the GNU C Library did not properly check permissions for tty files. A local attacker could use this to gain administrative privileges or expose sensitive information. (CVE-2013-2207, CVE-2016-2856)

Robin Hack discovered that the Name Service Switch (NSS) implementation in the GNU C Library did not properly manage its file descriptors. An attacker could use this to cause a denial of service (infinite loop). (CVE-2014-8121)

Joseph Myers discovered that the GNU C Library did not properly handle long arguments to functions returning a representation of Not a Number (NaN). An attacker could use this to cause a denial of service (stack exhaustion leading to an application crash) or possibly execute arbitrary code. (CVE-2014-9761)

Arjun Shankar discovered that in certain situations the nss_dns code in the GNU C Library did not properly account buffer sizes when passed an unaligned buffer. An attacker could use this to cause a denial of service or possibly execute arbitrary code. (CVE-2015-1781)

Sumit Bose and Lukas Slebodnik discovered that the Name Service Switch (NSS) implementation in the GNU C Library did not handle long lines in the files databases correctly. A local attacker could use this to cause a denial of service (application crash) or possibly execute arbitrary code. (CVE-2015-5277)

Adam Nielsen discovered that the strftime function in the GNU C Library did not properly handle out-of-range argument data. An attacker could use this to cause a denial of service (application crash) or possibly expose sensitive information. (CVE-2015-8776)

Hector Marco and Ismael Ripoll discovered that the GNU C Library allowed the pointer-guarding protection mechanism to be disabled by honoring the LD_POINTER_GUARD environment variable across privilege boundaries. A local attacker could use this to exploit an existing vulnerability more easily. (CVE-2015-8777)

Szabolcs Nagy discovered that the hcreate functions in the GNU C Library did not properly check its size argument, leading to an integer overflow. An attacker could use to cause a denial of service (application crash) or possibly execute arbitrary code.
(CVE-2015-8778)

Maksymilian Arciemowicz discovered a stack-based buffer overflow in the catopen function in the GNU C Library when handling long catalog names. An attacker could use this to cause a denial of service (application crash) or possibly execute arbitrary code.
(CVE-2015-8779)

Florian Weimer discovered that the getnetbyname implementation in the GNU C Library did not properly handle long names passed as arguments.
An attacker could use to cause a denial of service (stack exhaustion leading to an application crash). (CVE-2016-3075).

Note that Tenable Network Security has extracted the preceding description block directly from the Ubuntu security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-12-01, plugin id: 91334, published: 2016-05-26, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=91334, title: Ubuntu 12.04 LTS / 14.04 LTS / 15.10 : eglibc, glibc vulnerabilities (USN-2985-1)}, {NASL family: Fedora Local Security Checks, NASL id: FEDORA_2016-68ABC0BE35.NASL, description: This update contains minor security fixes (for CVE-2016-3075, CVE-2016-1234, CVE-2015-8778, CVE-2015-8776, CVE-2014-9761, CVE-2015-8779) and collects fixes for bugs encountered by Fedora users.

Note that Tenable Network Security has extracted the preceding description block directly from the Fedora security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2016-10-18, plugin id: 91063, published: 2016-05-12, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=91063, title: Fedora 23 : glibc-2.22-15.fc23 (2016-68abc0be35)}, {NASL family: Gentoo Local Security Checks, NASL id: GENTOO_GLSA-201702-11.NASL, description: The remote host is affected by the vulnerability described in GLSA-201702-11 (GNU C Library: Multiple vulnerabilities)

    Multiple vulnerabilities have been discovered in the GNU C Library.
      Please review the CVE identifiers referenced below for details.
  Impact :

    A context-dependent attacker could possibly execute arbitrary code with       the privileges of the process, disclose sensitive information, or cause a       Denial of Service condition via multiple vectors.
  Workaround :

    There is no known workaround at this time., last seen: 2019-02-21, modified: 2017-02-21, plugin id: 97254, published: 2017-02-21, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=97254, title: GLSA-201702-11 : GNU C Library: Multiple vulnerabilities}, {NASL family: Oracle Linux Local Security Checks, NASL id: ORACLELINUX_ELSA-2016-2573.NASL, description: From Red Hat Security Advisory 2016:2573 :

An update for glibc is now available for Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Low. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

The glibc packages provide the standard C libraries (libc), POSIX thread libraries (libpthread), standard math libraries (libm), and the name service cache daemon (nscd) used by multiple programs on the system. Without these libraries, the Linux system cannot function correctly.

Security Fix(es) :

* A stack overflow vulnerability was found in _nss_dns_getnetbyname_r.
On systems with nsswitch configured to include 'networks: dns' with a privileged or network-facing service that would attempt to resolve user-provided network names, an attacker could provide an excessively long network name, resulting in stack corruption and code execution.
(CVE-2016-3075)

This issue was discovered by Florian Weimer (Red Hat).

Additional Changes :

For detailed information on changes in this release, see the Red Hat Enterprise Linux 7.3 Release Notes linked from the References section., last seen: 2019-02-21, modified: 2018-07-25, plugin id: 94696, published: 2016-11-11, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=94696, title: Oracle Linux 7 : glibc (ELSA-2016-2573)}, {NASL family: Huawei Local Security Checks, NASL id: EULEROS_SA-2016-1073.NASL, description: According to the version of the glibc packages installed, the EulerOS installation on the remote host is affected by the following vulnerability :

  - A stack overflow vulnerability was found in
    _nss_dns_getnetbyname_r.On systems with nsswitch     configured to include 'networks: dns' with a privileged     or network-facing service that would attempt to resolve     user-provided network names, an attacker could provide     an excessively long network name, resulting in stack     corruption and code execution.(CVE-2016-3075)

Note that Tenable Network Security has extracted the preceding description block directly from the EulerOS security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-14, plugin id: 99833, published: 2017-05-01, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=99833, title: EulerOS 2.0 SP1 : glibc (EulerOS-SA-2016-1073)}, {NASL family: SuSE Local Security Checks, NASL id: OPENSUSE-2016-699.NASL, description: This update for glibc fixes the following issues :

  - glob-altdirfunc.patch: Do not copy d_name field of     struct dirent (CVE-2016-1234, boo#969727, BZ #19779)

  - nss-dns-memleak-2.patch: fix memory leak in
    _nss_dns_gethostbyname4_r (boo#973010)

  - nss-dns-getnetbyname.patch: fix stack overflow in
    _nss_dns_getnetbyname_r (CVE-2016-3075, boo#973164, BZ     #19879)

  - getaddrinfo-hostent-conv-stack-overflow.patch:
    getaddrinfo stack overflow in hostent conversion     (CVE-2016-3706, boo#980483, BZ #20010)

  - clntudp-call-alloca.patch: do not use alloca in     clntudp_call (CVE-2016-4429, boo#980854, BZ #20112), last seen: 2019-02-21, modified: 2016-06-15, plugin id: 91534, published: 2016-06-09, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=91534, title: openSUSE Security Update : glibc (openSUSE-2016-699)}, {NASL family: Scientific Linux Local Security Checks, NASL id: SL_20161103_GLIBC_ON_SL7_X.NASL, description: Security Fix(es) :

  - A stack overflow vulnerability was found in
    _nss_dns_getnetbyname_r. On systems with nsswitch     configured to include 'networks: dns' with a privileged     or network-facing service that would attempt to resolve     user- provided network names, an attacker could provide     an excessively long network name, resulting in stack     corruption and code execution. (CVE-2016-3075)

This issue was discovered by Florian Weimer (Red Hat).

Additional Changes :, last seen: 2019-02-21, modified: 2018-12-28, plugin id: 95840, published: 2016-12-15, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=95840, title: Scientific Linux Security Update : glibc on SL7.x x86_64}, {NASL family: PhotonOS Local Security Checks, NASL id: PHOTONOS_PHSA-2017-0013_GLIBC.NASL, description: An update of the glibc package has been released., last seen: 2019-02-08, modified: 2019-02-07, plugin id: 121682, published: 2019-02-07, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=121682, title: Photon OS 1.0: Glibc PHSA-2017-0013}, {NASL family: PhotonOS Local Security Checks, NASL id: PHOTONOS_PHSA-2017-0013.NASL, description: An update of [cracklib,libevent,libgcrypt,httpd,glibc] packages for PhotonOS has been released., last seen: 2019-02-21, modified: 2019-02-07, plugin id: 111862, published: 2018-08-17, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=111862, title: Photon OS 1.0: Cracklib / Glibc / Httpd / Libevent / Libgcrypt PHSA-2017-0013 (deprecated)}, {NASL family: Amazon Linux Local Security Checks, NASL id: ALA_ALAS-2017-792.NASL, description: A stack overflow vulnerability was found in _nss_dns_getnetbyname_r.
On systems with nsswitch configured to include 'networks: dns' with a privileged or network-facing service that would attempt to resolve user-provided network names, an attacker could provide an excessively long network name, resulting in stack corruption and code execution., last seen: 2019-02-21, modified: 2018-04-18, plugin id: 97022, published: 2017-02-07, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=97022, title: Amazon Linux AMI : glibc (ALAS-2017-792)}, {NASL family: Fedora Local Security Checks, NASL id: FEDORA_2016-B321728D74.NASL, description: This update contains minor security fixes (for CVE-2016-3075, CVE-2016-3706, and CVE-2016-1234) and collects fixes for bugs encountered by Fedora users.

Note that Tenable Network Security has extracted the preceding description block directly from the Fedora update system website.
Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2016-10-18, plugin id: 92146, published: 2016-07-14, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=92146, title: Fedora 24 : glibc (2016-b321728d74)}, {NASL family: SuSE Local Security Checks, NASL id: SUSE_SU-2016-1733-1.NASL, description: This update for glibc provides the following fixes :

  - Increase DTV_SURPLUS limit. (bsc#968787)

  - Do not copy d_name field of struct dirent.
    (CVE-2016-1234, bsc#969727)

  - Fix memory leak in _nss_dns_gethostbyname4_r.
    (bsc#973010)

  - Fix stack overflow in _nss_dns_getnetbyname_r.
    (CVE-2016-3075, bsc#973164)

  - Fix malloc performance regression from SLE 11.
    (bsc#975930)

  - Fix getaddrinfo stack overflow in hostent conversion.
    (CVE-2016-3706, bsc#980483)

  - Do not use alloca in clntudp_call. (CVE-2016-4429,     bsc#980854)

  - Remove mtrace.1, now included in the man-pages package.
    (bsc#967190)

Note that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-29, plugin id: 93175, published: 2016-08-29, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=93175, title: SUSE SLED12 / SLES12 Security Update : glibc (SUSE-SU-2016:1733-1)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2016-2573.NASL, description: An update for glibc is now available for Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Low. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link (s) in the References section.

The glibc packages provide the standard C libraries (libc), POSIX thread libraries (libpthread), standard math libraries (libm), and the name service cache daemon (nscd) used by multiple programs on the system. Without these libraries, the Linux system cannot function correctly.

Security Fix(es) :

* A stack overflow vulnerability was found in _nss_dns_getnetbyname_r.
On systems with nsswitch configured to include 'networks: dns' with a privileged or network-facing service that would attempt to resolve user-provided network names, an attacker could provide an excessively long network name, resulting in stack corruption and code execution.
(CVE-2016-3075)

This issue was discovered by Florian Weimer (Red Hat).

Additional Changes :

For detailed information on changes in this release, see the Red Hat Enterprise Linux 7.3 Release Notes linked from the References section., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 94536, published: 2016-11-04, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=94536, title: RHEL 7 : glibc (RHSA-2016:2573)}, {NASL family: SuSE Local Security Checks, NASL id: OPENSUSE-2016-852.NASL, description: This update for glibc provides the following fixes :

  - Increase DTV_SURPLUS limit. (bsc#968787)

  - Do not copy d_name field of struct dirent.
    (CVE-2016-1234, bsc#969727)

  - Fix memory leak in _nss_dns_gethostbyname4_r.
    (bsc#973010)

  - Fix stack overflow in _nss_dns_getnetbyname_r.
    (CVE-2016-3075, bsc#973164)

  - Fix malloc performance regression from SLE 11.
    (bsc#975930)

  - Fix getaddrinfo stack overflow in hostent conversion.
    (CVE-2016-3706, bsc#980483)

  - Do not use alloca in clntudp_call. (CVE-2016-4429,     bsc#980854)

  - Remove mtrace.1, now included in the man-pages package.
    (bsc#967190)

This update was imported from the SUSE:SLE-12-SP1:Update update project., last seen: 2019-02-21, modified: 2016-10-13, plugin id: 91987, published: 2016-07-11, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=91987, title: openSUSE Security Update : glibc (openSUSE-2016-852)}, {NASL family: Huawei Local Security Checks, NASL id: EULEROS_SA-2018-1344.NASL, description: According to the versions of the glibc packages installed, the EulerOS Virtualization installation on the remote host is affected by the following vulnerabilities :

  - The nss_dns implementation of getnetbyname in GNU C     Library (aka glibc) before 2.21, when the DNS backend     in the Name Service Switch configuration is enabled,     allows remote attackers to cause a denial of service     (infinite loop) by sending a positive answer while a     network name is being process.(CVE-2014-9402)

  - A stack overflow vulnerability was found in
    _nss_dns_getnetbyname_r.On systems with nsswitch     configured to include 'networks: dns' with a privileged     or network-facing service that would attempt to resolve     user-provided network names, an attacker could provide     an excessively long network name, resulting in stack     corruption and code execution.(CVE-2016-3075)

  - stdlib/canonicalize.c in the GNU C Library (aka glibc     or libc6) 2.27 and earlier, when processing very long     pathname arguments to the realpath function, could     encounter an integer overflow on 32-bit architectures,     leading to a stack-based buffer overflow and,     potentially, arbitrary code execution.(CVE-2018-11236)

Note that Tenable Network Security has extracted the preceding description block directly from the EulerOS security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-13, plugin id: 118432, published: 2018-10-26, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=118432, title: EulerOS Virtualization 2.5.0 : glibc (EulerOS-SA-2018-1344)}, {NASL family: Debian Local Security Checks, NASL id: DEBIAN_DLA-494.NASL, description: Several vulnerabilities have been fixed in the Debian GNU C Library, eglibc :

CVE-2016-1234

Alexander Cherepanov discovered that the glibc's glob implementation suffered from a stack-based buffer overflow when it was called with the GLOB_ALTDIRFUNC flag and encountered a long file name.

CVE-2016-3075

The getnetbyname implementation in nss_dns was susceptible to a stack overflow and a crash if it was invoked on a very long name.

CVE-2016-3706

Michael Petlan reported that getaddrinfo copied large amounts of address data to the stack, possibly leading to a stack overflow. This complements the fix for CVE-2013-4458.

For Debian 7 'Wheezy', these problems have been fixed in version 2.13-38+deb7u11.

We recommend you to upgrade your eglibc packages.

NOTE: Tenable Network Security has extracted the preceding description block directly from the DLA security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-07-09, plugin id: 91361, published: 2016-05-31, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=91361, title: Debian DLA-494-1 : eglibc security update}, {NASL family: SuSE Local Security Checks, NASL id: SUSE_SU-2016-2156-1.NASL, description: This update for glibc fixes the following issues :

  - Drop old fix that could break services that start before     IPv6 is up. (bsc#931399)

  - Do not copy d_name field of struct dirent.
    (CVE-2016-1234, bsc#969727)

  - Fix memory leak in _nss_dns_gethostbyname4_r.
    (bsc#973010)

  - Relocate DSOs in dependency order, fixing a potential     crash during symbol relocation phase. (bsc#986302)

  - Fix nscd assertion failure in gc. (bsc#965699)

  - Fix stack overflow in _nss_dns_getnetbyname_r.
    (CVE-2016-3075, bsc#973164)

  - Fix getaddrinfo stack overflow in hostent conversion.
    (CVE-2016-3706, bsc#980483)

  - Do not use alloca in clntudp_call. (CVE-2016-4429,     bsc#980854)

Note that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-29, plugin id: 93309, published: 2016-09-02, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=93309, title: SUSE SLES11 Security Update : glibc (SUSE-SU-2016:2156-1)}, {NASL family: SuSE Local Security Checks, NASL id: SUSE_SU-2016-1721-1.NASL, description: This update for glibc provides the following fixes :

  - Increase DTV_SURPLUS limit. (bsc#968787)

  - Do not copy d_name field of struct dirent.
    (CVE-2016-1234, bsc#969727)

  - Fix memory leak in _nss_dns_gethostbyname4_r.
    (bsc#973010)

  - Fix stack overflow in _nss_dns_getnetbyname_r.
    (CVE-2016-3075, bsc#973164)

  - Fix malloc performance regression from SLE 11.
    (bsc#975930)

  - Fix getaddrinfo stack overflow in hostent conversion.
    (CVE-2016-3706, bsc#980483)

  - Do not use alloca in clntudp_call (CVE-2016-4429,     bsc#980854)

Note that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-29, plugin id: 93173, published: 2016-08-29, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=93173, title: SUSE SLED12 / SLES12 Security Update : glibc (SUSE-SU-2016:1721-1)}, {NASL family: CentOS Local Security Checks, NASL id: CENTOS_RHSA-2016-2573.NASL, description: An update for glibc is now available for Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Low. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link (s) in the References section.

The glibc packages provide the standard C libraries (libc), POSIX thread libraries (libpthread), standard math libraries (libm), and the name service cache daemon (nscd) used by multiple programs on the system. Without these libraries, the Linux system cannot function correctly.

Security Fix(es) :

* A stack overflow vulnerability was found in _nss_dns_getnetbyname_r.
On systems with nsswitch configured to include 'networks: dns' with a privileged or network-facing service that would attempt to resolve user-provided network names, an attacker could provide an excessively long network name, resulting in stack corruption and code execution.
(CVE-2016-3075)

This issue was discovered by Florian Weimer (Red Hat).

Additional Changes :

For detailed information on changes in this release, see the Red Hat Enterprise Linux 7.3 Release Notes linked from the References section., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 95320, published: 2016-11-28, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=95320, title: CentOS 7 : glibc (CESA-2016:2573)}], ranking: [[{circl: 3}]], redhat: {advisories: [{bugzilla: {id: 1346397, title: glibc: debug/tst-longjump_chk2 calls printf from a signal handler}, oval: {AND: [{OR: [{comment: Red Hat Enterprise Linux 7 Client is installed, oval: oval:com.redhat.rhba:tst:20150364001}, {comment: Red Hat Enterprise Linux 7 Server is installed, oval: oval:com.redhat.rhba:tst:20150364002}, {comment: Red Hat Enterprise Linux 7 Workstation is installed, oval: oval:com.redhat.rhba:tst:20150364003}, {comment: Red Hat Enterprise Linux 7 ComputeNode is installed, oval: oval:com.redhat.rhba:tst:20150364004}]}, {OR: [{AND: [{comment: glibc is earlier than 0:2.17-157.el7, oval: oval:com.redhat.rhsa:tst:20162573015}, {comment: glibc is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhba:tst:20120763006}]}, {AND: [{comment: glibc-common is earlier than 0:2.17-157.el7, oval: oval:com.redhat.rhsa:tst:20162573011}, {comment: glibc-common is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhba:tst:20120763008}]}, {AND: [{comment: glibc-devel is earlier than 0:2.17-157.el7, oval: oval:com.redhat.rhsa:tst:20162573007}, {comment: glibc-devel is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhba:tst:20120763012}]}, {AND: [{comment: glibc-headers is earlier than 0:2.17-157.el7, oval: oval:com.redhat.rhsa:tst:20162573017}, {comment: glibc-headers is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhba:tst:20120763010}]}, {AND: [{comment: glibc-static is earlier than 0:2.17-157.el7, oval: oval:com.redhat.rhsa:tst:20162573013}, {comment: glibc-static is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhba:tst:20120763016}]}, {AND: [{comment: glibc-utils is earlier than 0:2.17-157.el7, oval: oval:com.redhat.rhsa:tst:20162573005}, {comment: glibc-utils is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhba:tst:20120763018}]}, {AND: [{comment: nscd is earlier than 0:2.17-157.el7, oval: oval:com.redhat.rhsa:tst:20162573009}, {comment: nscd is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhba:tst:20120763014}]}]}]}, rhsa: {id: RHSA-2016:2573, released: 2016-11-03, severity: Low, title: RHSA-2016:2573: glibc security, bug fix, and enhancement update (Low)}}], rpms: [glibc-0:2.17-157.el7, glibc-common-0:2.17-157.el7, glibc-devel-0:2.17-157.el7, glibc-headers-0:2.17-157.el7, glibc-static-0:2.17-157.el7, glibc-utils-0:2.17-157.el7, nscd-0:2.17-157.el7]}, references: [http://lists.fedoraproject.org/pipermail/package-announce/2016-May/184626.html, http://lists.opensuse.org/opensuse-updates/2016-06/msg00030.html, http://lists.opensuse.org/opensuse-updates/2016-07/msg00039.html, http://rhn.redhat.com/errata/RHSA-2016-2573.html, http://www.securityfocus.com/bid/85732, http://www.ubuntu.com/usn/USN-2985-1, https://security.gentoo.org/glsa/201702-11, https://sourceware.org/bugzilla/show_bug.cgi?id=19879, https://sourceware.org/git/gitweb.cgi?p=glibc.git;h=317b199b4aff8cfa27f2302ab404d2bb5032b9a4], refmap: {bid: [85732], confirm: [https://sourceware.org/bugzilla/show_bug.cgi?id=19879, https://sourceware.org/git/gitweb.cgi?p=glibc.git;h=317b199b4aff8cfa27f2302ab404d2bb5032b9a4], fedora: [FEDORA-2016-68abc0be35], gentoo: [GLSA-201702-11], suse: [openSUSE-SU-2016:1527, openSUSE-SU-2016:1779], ubuntu: [USN-2985-1]}, summary: Stack-based buffer overflow in the nss_dns implementation of the getnetbyname function in GNU C Library (aka glibc) before 2.24 allows context-dependent attackers to cause a denial of service (stack consumption and application crash) via a long name., vulnerable_configuration: [{id: cpe:2.3:o:opensuse:opensuse:13.2, title: OpenSUSE 13.2}, {id: cpe:2.3:a:gnu:glibc:2.23, title: GNU glibc 2.23}, {id: cpe:2.3:o:fedoraproject:fedora:23, title: Fedora Project Fedora 23}, {id: cpe:2.3:o:canonical:ubuntu_linux:12.04:-:-:-:lts, title: Canonical Ubuntu Linux 12.04 LTS}, {id: cpe:2.3:o:canonical:ubuntu_linux:14.04:-:-:-:lts, title: Canonical Ubuntu Linux  14.04 LTS (Long-Term Support)}, {id: cpe:2.3:o:canonical:ubuntu_linux:15.10, title: Canonical Ubuntu Linux 15.10}], vulnerable_configuration_cpe_2_2: [cpe:/o:opensuse:opensuse:13.2, cpe:/a:gnu:glibc:2.23, cpe:/o:fedoraproject:fedora:23, cpe:/o:canonical:ubuntu_linux:12.04::~~lts~~~, cpe:/o:canonical:ubuntu_linux:14.04::~~lts~~~, cpe:/o:canonical:ubuntu_linux:15.10]}
