{Modified: 2016-11-28T14:09:23.437000, Published: 2013-08-09T18:55:03.747000, access: {authentication: NONE, complexity: LOW, vector: NETWORK}, capec: [{id: 10, name: Buffer Overflow via Environment Variables, prerequisites: The application uses environment variables.
An environment variable exposed to the user is vulnerable to a buffer overflow.
The vulnerable environment variable uses untrusted data.
Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer., related_weakness: [120, 302, 118, 119, 74, 99, 20, 680, 733, 697], solutions: Do not expose environment variable to the user.
Do not use untrusted data in your environment variables.
Use a language or compiler that performs automatic bounds checking
There are tools such as Sharefuzz [R.10.3] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow., summary: This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.}, {id: 100, name: Overflow Buffers, prerequisites: Targeted software performs buffer operations.
Targeted software inadequately performs bounds-checking on buffer operations.
Attacker has the capability to influence the input to buffer operations., related_weakness: [120, 119, 131, 129, 805, 19, 680], solutions: Use a language or compiler that performs automatic bounds checking.
Use secure functions not vulnerable to buffer overflow.
If you have to use dangerous functions, make sure that you do boundary checking.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution.
Utilize static source code analysis tools to identify potential buffer overflow weaknesses in the software., summary: Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an attacker. As a consequence, an attacker is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the attackers' choice.}, {id: 14, name: Client-side Injection-induced Buffer Overflow, prerequisites: The targeted client software communicates with an external server.
The targeted client software has a buffer overflow vulnerability., related_weakness: [120, 353, 118, 119, 74, 20, 680, 697, 713], solutions: The client software should not install untrusted code from a non-authenticated server.
The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers.
Perform input validation for length of buffer inputs.
Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Ensure all buffer uses are consistently bounds-checked.
Use OS-level preventative functionality. Not a complete solution., summary: This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service.}, {id: 24, name: Filter Failure through Buffer Overflow, prerequisites: Ability to control the length of data passed to an active filter., related_weakness: [120, 119, 118, 74, 20, 680, 733, 697], solutions: Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs.
Pre-design: Use a language or compiler that performs automatic bounds checking.
Pre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Operational: Use OS-level preventative functionality. Not a complete solution.
Design: Use an abstraction library to abstract away risky APIs. Not a complete solution., summary: In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).}, {id: 42, name: MIME Conversion, prerequisites: The target system uses a mail server.
Mail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system., related_weakness: [120, 119, 74, 20], solutions: Stay up to date with third party vendor patches
From "Exploiting Software", please see reference below.
Use the sendmail restricted shell program (smrsh)
Use mail.local, summary: An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.}, {id: 44, name: Overflow Binary Resource File, prerequisites: Target software processes binary resource files.
Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file., related_weakness: [120, 119, 697, 713], solutions: Perform appropriate bounds checking on all buffers.
Design: Enforce principle of least privilege
Design: Static code analysis
Implementation: Execute program in less trusted process space environment, do not allow lower integrity processes to write to higher integrity processes
Implementation: Keep software patched to ensure that known vulnerabilities are not available for attackers to target on host., summary: An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the attacker access to the execution stack and execute arbitrary code in the target process. This attack pattern is a variant of standard buffer overflow attacks using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The attacker is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application, for the victim to download. The attacker then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow.}, {id: 45, name: Buffer Overflow via Symbolic Links, prerequisites: The attacker can create symbolic link on the target host.
The target host does not perform correct boundary checking while consuming data from a resources., related_weakness: [120, 285, 302, 118, 119, 74, 20, 680, 697], solutions: Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource.
Because Symlink can be modified by an attacker, make sure that the ones you read are located in protected directories.
Pay attention to the resource pointed to by your symlink links (See attack pattern named "Forced Symlink race"), they can be replaced by malicious resources.
Always check the size of the input data before copying to a buffer.
Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution., summary: This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.}, {id: 46, name: Overflow Variables and Tags, prerequisites: The target program consumes user-controllable data in the form of tags or variables.
The target program does not perform sufficient boundary checking., related_weakness: [120, 118, 119, 74, 20, 680, 733, 697], solutions: Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution.
Do not trust input data from user. Validate all user input., summary: This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.}, {id: 47, name: Buffer Overflow via Parameter Expansion, prerequisites: The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter.
The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is)., related_weakness: [120, 119, 118, 130, 131, 74, 20, 680, 697], solutions: Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system, summary: In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.}, {id: 8, name: Buffer Overflow in an API Call, prerequisites: The target host exposes an API to the user.
One or more API functions exposed by the target host has a buffer overflow vulnerability., related_weakness: [120, 119, 118, 74, 20, 680, 733, 697], solutions: Use a language or compiler that performs automatic bounds checking.
Use secure functions not vulnerable to buffer overflow.
If you have to use dangerous functions, make sure that you do boundary checking.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution., summary: This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An attacker who has access to an API may try to embed malicious code in the API function call and exploit a buffer overflow vulnerability in the function's implementation. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process.}, {id: 9, name: Buffer Overflow in Local Command-Line Utilities, prerequisites: The target host exposes a command-line utility to the user.
The command-line utility exposed by the target host has a buffer overflow vulnerability that can be exploited., related_weakness: [120, 118, 119, 74, 20, 680, 733, 697], solutions: Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow.
Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Operational: Use OS-level preventative functionality. Not a complete solution.
Apply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack.
Do not unnecessarily expose services., summary: This attack targets command-line utilities available in a number of shells. An attacker can leverage a vulnerability found in a command-line utility to escalate privilege to root.}], cvss: 7.5, cvss-time: 2013-10-23T10:58:39.887000, cwe: CWE-119, id: CVE-2013-4115, impact: {availability: PARTIAL, confidentiality: PARTIAL, integrity: PARTIAL}, last-modified: 2018-10-30T12:27:34.373000, nessus: [{NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2014-1148.NASL, description: An updated squid package that fixes two security issues is now available for Red Hat Enterprise Linux 5 and 6.

Red Hat Product Security has rated this update as having Important security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.

Squid is a high-performance proxy caching server for web clients, supporting FTP, Gopher, and HTTP data objects.

A flaw was found in the way Squid handled malformed HTTP Range headers. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2014-3609)

A buffer overflow flaw was found in Squid's DNS lookup module. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2013-4115)

Red Hat would like to thank the Squid project for reporting the CVE-2014-3609 issue. Upstream acknowledges Matthew Daley as the original reporter.

All Squid users are advised to upgrade to this updated package, which contains backported patches to correct these issues. After installing this update, the squid service will be restarted automatically., last seen: 2019-02-21, modified: 2018-12-27, plugin id: 77523, published: 2014-09-04, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=77523, title: RHEL 5 / 6 : squid (RHSA-2014:1148)}, {NASL family: Amazon Linux Local Security Checks, NASL id: ALA_ALAS-2014-411.NASL, description: A flaw was found in the way Squid handled malformed HTTP Range headers. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2014-3609)

A buffer overflow flaw was found in Squid's DNS lookup module. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2013-4115), last seen: 2019-02-21, modified: 2018-04-18, plugin id: 78354, published: 2014-10-12, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=78354, title: Amazon Linux AMI : squid (ALAS-2014-411)}, {NASL family: SuSE Local Security Checks, NASL id: SUSE_SU-2016-2089-1.NASL, description: This update for squid3 fixes the following issues :

  - Multiple issues in pinger ICMP processing.
    (CVE-2014-7141, CVE-2014-7142)

  - CVE-2016-3947: Buffer overrun issue in pinger ICMPv6     processing. (bsc#973782)

  - CVE-2016-4554: fix header smuggling issue in HTTP     Request processing (bsc#979010)

  - Fix multiple Denial of Service issues in HTTP Response     processing. (CVE-2016-2569, CVE-2016-2570,     CVE-2016-2571, CVE-2016-2572, bsc#968392, bsc#968393,     bsc#968394, bsc#968395)

  - Regression caused by the DoS fixes above (bsc#993299)

  - CVE-2016-3948: Fix denial of service in HTTP Response     processing (bsc#973783)

  - CVE-2016-4051: fixes buffer overflow in cachemgr.cgi     (bsc#976553)

  - CVE-2016-4052, CVE-2016-4053, CVE-2016-4054 :

  - fixes multiple issues in ESI processing (bsc#976556)

  - CVE-2016-4556: fixes double free vulnerability in Esi.cc     (bsc#979008)

  - CVE-2015-5400: Improper Protection of Alternate Path     (bsc#938715)

  - CVE-2014-6270: fix off-by-one in snmp subsystem     (bsc#895773)

  - Memory leak in squid3 when using external_acl     (bsc#976708)

Note that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-29, plugin id: 93294, published: 2016-09-02, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=93294, title: SUSE SLES11 Security Update : squid3 (SUSE-SU-2016:2089-1)}, {NASL family: SuSE Local Security Checks, NASL id: OPENSUSE-2013-700.NASL, description: This squid3 update includes several security fixes and minor changes.

  -     squid-3.1.x-bnc829084-CVE-2013-4115-BO_request_handling.
    diff Squid advisory SQUID-2013_2, CVE-2013-4115,     [bnc#829084] Specially crafted http requests can trigger     a buffer overflow when squid attempts to resolve an     overly long hostname.

  - run logrotate as squid:nogroup [bnc#677335], last seen: 2019-02-21, modified: 2018-11-10, plugin id: 75142, published: 2014-06-13, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=75142, title: openSUSE Security Update : squid3 (openSUSE-SU-2013:1441-1)}, {NASL family: SuSE Local Security Checks, NASL id: SUSE_SU-2016-1996-1.NASL, description: This update for squid3 fixes the following issues :

  - Multiple issues in pinger ICMP processing.
    (CVE-2014-7141, CVE-2014-7142)

  - CVE-2016-3947: Buffer overrun issue in pinger ICMPv6     processing. (bsc#973782)

  - CVE-2016-4554: fix header smuggling issue in HTTP     Request processing (bsc#979010)

  - fix multiple Denial of Service issues in HTTP Response     processing. (CVE-2016-2569, CVE-2016-2570,     CVE-2016-2571, CVE-2016-2572, bsc#968392, bsc#968393,     bsc#968394, bsc#968395)

  - CVE-2016-3948: Fix denial of service in HTTP Response     processing (bsc#973783)

  - CVE-2016-4051: fixes buffer overflow in cachemgr.cgi     (bsc#976553)

  - CVE-2016-4052, CVE-2016-4053, CVE-2016-4054 :

  - fixes multiple issues in ESI processing (bsc#976556)

  - CVE-2016-4556: fixes double free vulnerability in Esi.cc     (bsc#979008)

  - CVE-2015-5400: Improper Protection of Alternate Path     (bsc#938715)

  - CVE-2014-6270: fix off-by-one in snmp subsystem     (bsc#895773)

  - Memory leak in squid3 when using external_acl     (bsc#976708)

Note that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-29, plugin id: 93271, published: 2016-09-02, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=93271, title: SUSE SLES11 Security Update : squid3 (SUSE-SU-2016:1996-1)}, {NASL family: Amazon Linux Local Security Checks, NASL id: ALA_ALAS-2014-433.NASL, description: A flaw was found in the way Squid handled malformed HTTP Range headers. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2014-3609)

A buffer overflow flaw was found in Squid's DNS lookup module. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2013-4115)

Squid 3.1 before 3.3.12 and 3.4 before 3.4.4, when SSL-Bump is enabled, allows remote attackers to cause a denial of service (assertion failure) via a crafted range request, related to state management. (CVE-2014-0128), last seen: 2019-02-21, modified: 2018-04-18, plugin id: 78658, published: 2014-10-24, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=78658, title: Amazon Linux AMI : squid (ALAS-2014-433)}, {NASL family: SuSE Local Security Checks, NASL id: OPENSUSE-2013-698.NASL, description: This squid update includes several security fixes and minor changes.

  -     squid-2.7.x-bnc829084-CVE-2013-4115-BO_request_handling.
    diff Squid advisory SQUID-2013_2, CVE-2013-4115,     [bnc#829084] Specially crafted http requests can trigger     a buffer overflow when squid attempts to resolve an     overly long hostname.

  -     squid-2.7.x-bnc796999-bnc794954-CVE-2012-5643-CVE-2013-0     188-cachemgr_cgi_dos.diff memory leak in cachemgr.cgi     known as CVE-2013-0189, which is the underfixed     CVE-2012-5643 problem. [bnc#796999] [bnc#794954]

  - run logrotate as squid:nogroup [bnc#677335], last seen: 2019-02-21, modified: 2018-11-10, plugin id: 75139, published: 2014-06-13, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=75139, title: openSUSE Security Update : squid (openSUSE-SU-2013:1436-1)}, {NASL family: Fedora Local Security Checks, NASL id: FEDORA_2013-13468.NASL, description: This is security update that fixes CVE-2013-4123 and CVE-2013-4115.

Note that Tenable Network Security has extracted the preceding description block directly from the Fedora security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-28, plugin id: 69201, published: 2013-08-05, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=69201, title: Fedora 19 : squid-3.2.13-1.fc19 (2013-13468)}, {NASL family: CentOS Local Security Checks, NASL id: CENTOS_RHSA-2014-1148.NASL, description: An updated squid package that fixes two security issues is now available for Red Hat Enterprise Linux 5 and 6.

Red Hat Product Security has rated this update as having Important security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.

Squid is a high-performance proxy caching server for web clients, supporting FTP, Gopher, and HTTP data objects.

A flaw was found in the way Squid handled malformed HTTP Range headers. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2014-3609)

A buffer overflow flaw was found in Squid's DNS lookup module. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2013-4115)

Red Hat would like to thank the Squid project for reporting the CVE-2014-3609 issue. Upstream acknowledges Matthew Daley as the original reporter.

All Squid users are advised to upgrade to this updated package, which contains backported patches to correct these issues. After installing this update, the squid service will be restarted automatically., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 77509, published: 2014-09-04, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=77509, title: CentOS 5 / 6 : squid (CESA-2014:1148)}, {NASL family: SuSE Local Security Checks, NASL id: SUSE_11_SQUID-130909.NASL, description: This squid update fixes a buffer overflow issue when squid attempts to resolve an overly long hostname. This can be triggered with specially crafted http requests. (bnc#829084, CVE-2013-4115)

This update also includes a correction to the last change for logrotate. (bnc#677335), last seen: 2019-02-21, modified: 2013-10-25, plugin id: 70021, published: 2013-09-20, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=70021, title: SuSE 11.2 / 11.3 Security Update : squid (SAT Patch Numbers 8309 / 8310)}, {NASL family: Mandriva Local Security Checks, NASL id: MANDRIVA_MDVSA-2013-199.NASL, description: Multiple vulnerabilities has been discovered and corrected in squid :

Due to incorrect data validation Squid is vulnerable to a buffer overflow attack when processing specially crafted HTTP requests. This problem allows any trusted client or client script who can generate HTTP requests to trigger a buffer overflow in Squid, resulting in a termination of the Squid service (CVE-2013-4115).

The updated packages have been patched to correct this issue., last seen: 2019-02-21, modified: 2018-07-19, plugin id: 69067, published: 2013-07-26, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=69067, title: Mandriva Linux Security Advisory : squid (MDVSA-2013:199)}, {NASL family: Gentoo Local Security Checks, NASL id: GENTOO_GLSA-201309-22.NASL, description: The remote host is affected by the vulnerability described in GLSA-201309-22 (Squid: Multiple vulnerabilities)

    Multiple vulnerabilities have been discovered in Squid. Please review       the CVE identifiers referenced below for details.
  Impact :

    A remote attacker may be able to bypass ACL restrictions or cause a       Denial of Service condition.
  Workaround :

    There is no known workaround at this time., last seen: 2019-02-21, modified: 2018-07-11, plugin id: 70182, published: 2013-09-28, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=70182, title: GLSA-201309-22 : Squid: Multiple vulnerabilities}, {NASL family: SuSE Local Security Checks, NASL id: OPENSUSE-2013-699.NASL, description: This squid update includes several security fixes and minor changes.

  - squid-3.2.x-11823-bnc829084-CVE-2013-4115.diff fixes a     buffer overflow involving very long hostnames.
    [bnc#829084] CVE-2013-4115

  - squid-3.2.x-11823-bnc830319-CVE-2013-4123.diff fixes     problems identifying a port number as specified by the     client. [bnc#830319] CVE-2013-4123

  - run logrotate as squid:nogroup [bnc#677335], last seen: 2019-02-21, modified: 2018-11-10, plugin id: 75140, published: 2014-06-13, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=75140, title: openSUSE Security Update : squid (openSUSE-SU-2013:1435-1)}, {NASL family: Fedora Local Security Checks, NASL id: FEDORA_2013-13493.NASL, description: This is security update that fixes CVE-2013-4123 and CVE-2013-4115.

Note that Tenable Network Security has extracted the preceding description block directly from the Fedora security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-28, plugin id: 69204, published: 2013-08-05, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=69204, title: Fedora 18 : squid-3.2.13-1.fc18 (2013-13493)}, {NASL family: Scientific Linux Local Security Checks, NASL id: SL_20140903_SQUID_ON_SL5_X.NASL, description: A flaw was found in the way Squid handled malformed HTTP Range headers. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2014-3609)

A buffer overflow flaw was found in Squid's DNS lookup module. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2013-4115)

After installing this update, the squid service will be restarted automatically., last seen: 2019-02-21, modified: 2018-12-28, plugin id: 77553, published: 2014-09-05, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=77553, title: Scientific Linux Security Update : squid on SL5.x, SL6.x i386/x86_64}, {NASL family: Firewalls, NASL id: SQUID_3_2_12.NASL, description: According to its banner, the version of Squid running on the remote host is 3.x prior to 3.2.12 or 3.3.x prior to 3.3.7 and is, therefore, affected by a denial of service vulnerability.  A buffer overflow exists in the 'idnsALookup' function in the file 'dns_internal.cc' that could allow specially crafted HTTP requests that could result in a denial of service.

Note that Nessus has relied only on the version in the proxy server's banner, which is not updated by the patch that the project has released to address this issue.  If this patch has been applied properly and the service has been restarted, consider this to be a false positive., last seen: 2019-02-21, modified: 2018-07-30, plugin id: 69041, published: 2013-07-24, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=69041, title: Squid 3.x < 3.2.12 / 3.3.x < 3.3.7 idnsALookup HTTP Request DoS}, {NASL family: Oracle Linux Local Security Checks, NASL id: ORACLELINUX_ELSA-2014-1148.NASL, description: From Red Hat Security Advisory 2014:1148 :

An updated squid package that fixes two security issues is now available for Red Hat Enterprise Linux 5 and 6.

Red Hat Product Security has rated this update as having Important security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.

Squid is a high-performance proxy caching server for web clients, supporting FTP, Gopher, and HTTP data objects.

A flaw was found in the way Squid handled malformed HTTP Range headers. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2014-3609)

A buffer overflow flaw was found in Squid's DNS lookup module. A remote attacker able to send HTTP requests to the Squid proxy could use this flaw to crash Squid. (CVE-2013-4115)

Red Hat would like to thank the Squid project for reporting the CVE-2014-3609 issue. Upstream acknowledges Matthew Daley as the original reporter.

All Squid users are advised to upgrade to this updated package, which contains backported patches to correct these issues. After installing this update, the squid service will be restarted automatically., last seen: 2019-02-21, modified: 2018-07-18, plugin id: 77517, published: 2014-09-04, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=77517, title: Oracle Linux 5 / 6 : squid (ELSA-2014-1148)}], ranking: [[{circl: 3}]], redhat: {rpms: [squid-7:2.6.STABLE21-7.el5_10, squid-7:3.1.10-22.el6_5]}, references: [http://lists.opensuse.org/opensuse-security-announce/2016-08/msg00010.html, http://lists.opensuse.org/opensuse-security-announce/2016-08/msg00040.html, http://lists.opensuse.org/opensuse-updates/2013-09/msg00024.html, http://lists.opensuse.org/opensuse-updates/2013-09/msg00025.html, http://lists.opensuse.org/opensuse-updates/2013-09/msg00030.html, http://lists.opensuse.org/opensuse-updates/2013-09/msg00032.html, http://lists.opensuse.org/opensuse-updates/2013-09/msg00033.html, http://www.openwall.com/lists/oss-security/2013/07/11/8, http://www.securityfocus.com/bid/61111, http://www.squid-cache.org/Advisories/SQUID-2013_2.txt, http://www.squid-cache.org/Versions/v3/3.0/changesets/squid-3.0-9200.patch, http://www.squid-cache.org/Versions/v3/3.1/changesets/squid-3.1-10487.patch, http://www.squid-cache.org/Versions/v3/3.2/changesets/squid-3.2-11823.patch, http://www.squid-cache.org/Versions/v3/3.3/changesets/squid-3.3-12587.patch, https://exchange.xforce.ibmcloud.com/vulnerabilities/85564], refmap: {bid: [61111], confirm: [http://www.squid-cache.org/Advisories/SQUID-2013_2.txt, http://www.squid-cache.org/Versions/v3/3.0/changesets/squid-3.0-9200.patch, http://www.squid-cache.org/Versions/v3/3.1/changesets/squid-3.1-10487.patch, http://www.squid-cache.org/Versions/v3/3.2/changesets/squid-3.2-11823.patch, http://www.squid-cache.org/Versions/v3/3.3/changesets/squid-3.3-12587.patch], mlist: [[oss-security] 20130711 Re: CVE request: SQUID-2013:2: buffer overflow in HTTP request handling], secunia: [54076, 54834, 54839], suse: [SUSE-SU-2016:1996, SUSE-SU-2016:2089, openSUSE-SU-2013:1435, openSUSE-SU-2013:1436, openSUSE-SU-2013:1441, openSUSE-SU-2013:1443, openSUSE-SU-2013:1444], xf: [squid-idnsalookup-bo(85564)]}, summary: Buffer overflow in the idnsALookup function in dns_internal.cc in Squid 3.2 through 3.2.11 and 3.3 through 3.3.6 allows remote attackers to cause a denial of service (memory corruption and server termination) via a long name in a DNS lookup request., vulnerable_configuration: [{id: cpe:2.3:o:opensuse:opensuse:11.4, title: OpenSUSE 11.4}, {id: cpe:2.3:o:opensuse:opensuse:12.2, title: OpenSUSE 12.2}, {id: cpe:2.3:o:opensuse:opensuse:12.3, title: OpenSUSE 12.3}, {id: cpe:2.3:a:squid-cache:squid:3.2.0.1, title: squid-cache.org Squid 3.2.0.1}, {id: cpe:2.3:a:squid-cache:squid:3.2.0.2, title: squid-cache.org Squid 3.2.0.2}, {id: cpe:2.3:a:squid-cache:squid:3.2.0.3, title: squid-cache.org Squid 3.2.0.3}, {id: cpe:2.3:a:squid-cache:squid:3.2.0.4, title: squid-cache.org Squid 3.2.0.4}, {id: cpe:2.3:a:squid-cache:squid:3.2.0.5, title: squid-cache.org Squid 3.2.0.5}, {id: cpe:2.3:a:squid-cache:squid:3.2.0.6, title: squid-cache.org Squid 3.2.0.6}, {id: cpe:2.3:a:squid-cache:squid:3.2.0.7, title: squid-cache.org Squid 3.2.0.7}, {id: cpe:2.3:a:squid-cache:squid:3.2.0.8, title: squid-cache.org Squid 3.2.0.8}, {id: cpe:2.3:a:squid-cache:squid:3.2.0.9, title: squid-cache.org Squid 3.2.0.9}, {id: cpe:2.3:a:squid-cache:squid:3.2.0.10, title: squid-cache.org Squid 3.2.0.10}, {id: cpe:2.3:a:squid-cache:squid:3.2.0.11, title: squid-cache.org Squid 3.2.0.11}, {id: cpe:2.3:a:squid-cache:squid:3.3.0, title: squid-cache.org Squid 3.3.0}, {id: cpe:2.3:a:squid-cache:squid:3.3.0.2, title: squid-cache.org Squid 3.3.0.2}, {id: cpe:2.3:a:squid-cache:squid:3.3.0.3, title: squid-cache.org Squid 3.3.0.3}, {id: cpe:2.3:a:squid-cache:squid:3.3.1, title: squid-cache.org Squid 3.3.1}, {id: cpe:2.3:a:squid-cache:squid:3.3.2, title: squid-cache.org Squid 3.3.2}, {id: cpe:2.3:a:squid-cache:squid:3.3.3, title: squid-cache.org Squid 3.3.3}, {id: cpe:2.3:a:squid-cache:squid:3.3.4, title: squid-cache.org Squid 3.3.4}, {id: cpe:2.3:a:squid-cache:squid:3.3.5, title: squid-cache.org Squid 3.3.5}, {id: cpe:2.3:a:squid-cache:squid:3.3.6, title: squid-cache.org Squid 3.3.6}], vulnerable_configuration_cpe_2_2: [cpe:/o:opensuse:opensuse:11.4, cpe:/o:opensuse:opensuse:12.2, cpe:/o:opensuse:opensuse:12.3, cpe:/a:squid-cache:squid:3.2.0.1, cpe:/a:squid-cache:squid:3.2.0.2, cpe:/a:squid-cache:squid:3.2.0.3, cpe:/a:squid-cache:squid:3.2.0.4, cpe:/a:squid-cache:squid:3.2.0.5, cpe:/a:squid-cache:squid:3.2.0.6, cpe:/a:squid-cache:squid:3.2.0.7, cpe:/a:squid-cache:squid:3.2.0.8, cpe:/a:squid-cache:squid:3.2.0.9, cpe:/a:squid-cache:squid:3.2.0.10, cpe:/a:squid-cache:squid:3.2.0.11, cpe:/a:squid-cache:squid:3.3.0, cpe:/a:squid-cache:squid:3.3.0.2, cpe:/a:squid-cache:squid:3.3.0.3, cpe:/a:squid-cache:squid:3.3.1, cpe:/a:squid-cache:squid:3.3.2, cpe:/a:squid-cache:squid:3.3.3, cpe:/a:squid-cache:squid:3.3.4, cpe:/a:squid-cache:squid:3.3.5, cpe:/a:squid-cache:squid:3.3.6]}
