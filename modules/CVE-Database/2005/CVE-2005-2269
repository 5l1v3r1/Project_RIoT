{Modified: 2011-03-07T21:24:00.830000, Published: 2005-07-13T00:00:00, access: {authentication: NONE, complexity: LOW, vector: NETWORK}, cvss: 7.5, cvss-time: 2005-07-13T21:33:00, cwe: Unknown, id: CVE-2005-2269, impact: {availability: PARTIAL, confidentiality: PARTIAL, integrity: PARTIAL}, last-modified: 2017-10-10T21:30:15.297000, nessus: [{NASL family: Debian Local Security Checks, NASL id: DEBIAN_DSA-781.NASL, description: Several problems have been discovered in Mozilla Thunderbird, the standalone mail client of the Mozilla suite. The Common Vulnerabilities and Exposures project identifies the following problems :

  - CAN-2005-0989     Remote attackers could read portions of heap memory into     a JavaScript string via the lambda replace method.

  - CAN-2005-1159

    The JavaScript interpreter could be tricked to continue     execution at the wrong memory address, which may allow     attackers to cause a denial of service (application     crash) and possibly execute arbitrary code.

  - CAN-2005-1160

    Remote attackers could override certain properties or     methods of DOM nodes and gain privileges.

  - CAN-2005-1532

    Remote attackers could override certain properties or     methods due to missing proper limitation of JavaScript     eval and Script objects and gain privileges.

  - CAN-2005-2261

    XML scripts ran even when JavaScript disabled.

  - CAN-2005-2265

    Missing input sanitising of InstallVersion.compareTo()     can cause the application to crash.

  - CAN-2005-2266

    Remote attackers could steal sensitive information such     as cookies and passwords from websites by accessing data     in alien frames.

  - CAN-2005-2269

    Remote attackers could modify certain tag properties of     DOM nodes that could lead to the execution of arbitrary     script or code.

  - CAN-2005-2270

    The Mozilla browser family does not properly clone base     objects, which allows remote attackers to execute     arbitrary code., last seen: 2019-02-21, modified: 2018-07-20, plugin id: 19478, published: 2005-08-23, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=19478, title: Debian DSA-781-1 : mozilla-thunderbird - several vulnerabilities}, {NASL family: Mandriva Local Security Checks, NASL id: MANDRAKE_MDKSA-2005-127.NASL, description: A number of vulnerabilities were reported and fixed in Thunderbird 1.0.5 and Mozilla 1.7.9. The following vulnerabilities have been backported and patched for this update:

The native implementations of InstallTrigger and other XPInstall- related javascript objects did not properly validate that they were called on instances of the correct type. By passing other objects, even raw numbers, the javascript interpreter would jump to the wrong place in memory. Although no proof of concept has been developed we believe this could be exploited (MFSA 2005-40).

moz_bug_r_a4 reported several exploits giving an attacker the ability to install malicious code or steal data, requiring only that the user do commonplace actions like clicking on a link or open the context menu. The common cause in each case was privileged UI code ('chrome') being overly trusting of DOM nodes from the content window. Scripts in the web page can override properties and methods of DOM nodes and shadow the native values, unless steps are taken to get the true underlying values (MFSA 2005-41).

Additional checks were added to make sure Javascript eval and Script objects are run with the privileges of the context that created them, not the potentially elevated privilege of the context calling them in order to protect against an additional variant of MFSA 2005-41 (MFSA 2005-44).

In several places the browser UI did not correctly distinguish between true user events, such as mouse clicks or keystrokes, and synthetic events genenerated by web content. The problems ranged from minor annoyances like switching tabs or entering full-screen mode, to a variant on MFSA 2005-34 Synthetic events are now prevented from reaching the browser UI entirely rather than depend on each potentially spoofed function to protect itself from untrusted events (MFSA 2005-45).

Scripts in XBL controls from web content continued to be run even when Javascript was disabled. By itself this causes no harm, but it could be combined with most script-based exploits to attack people running vulnerable versions who thought disabling javascript would protect them. In the Thunderbird and Mozilla Suite mail clients Javascript is disabled by default for protection against denial-of-service attacks and worms; this vulnerability could be used to bypass that protection (MFSA 2005-46).

When InstallVersion.compareTo() is passed an object rather than a string it assumed the object was another InstallVersion without verifying it. When passed a different kind of object the browser would generally crash with an access violation. shutdown has demonstrated that different javascript objects can be passed on some OS versions to get control over the instruction pointer. We assume this could be developed further to run arbitrary machine code if the attacker can get exploit code loaded at a predictable address (MFSA 2005-50).

A child frame can call top.focus() even if the framing page comes from a different origin and has overridden the focus() routine. The call is made in the context of the child frame. The attacker would look for a target site with a framed page that makes this call but doesn't verify that its parent comes from the same site. The attacker could steal cookies and passwords from the framed page, or take actions on behalf of a signed-in user. This attack would work only against sites that use frames in this manner (MFSA 2005-52).

Parts of the browser UI relied too much on DOM node names without taking different namespaces into account and verifying that nodes really were of the expected type. An XHTML document could be used to create fake elements, for example, with content-defined properties that the browser would access as if they were the trusted built-in properties of the expected HTML elements. The severity of the vulnerability would depend on what the attacker could convince the victim to do, but could result in executing user-supplied script with elevated 'chrome' privileges. This could be used to install malicious software on the victim's machine (MFSA 2005-55).

Improper cloning of base objects allowed web content scripts to walk up the prototype chain to get to a privileged object. This could be used to execute code with enhanced privileges (MFSA 2005-56).

The updated packages have been patched to address these issue.

Update:

There was a slight regression in the handling of 'right-click' menus in the packages previously released that is corrected with this new update., last seen: 2017-10-29, modified: 2012-09-07, plugin id: 20421, published: 2006-01-15, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=20421, title: MDKSA-2005:127-1 : mozilla-thunderbird}, {NASL family: Ubuntu Local Security Checks, NASL id: UBUNTU_USN-149-3.NASL, description: USN-149-1 fixed some vulnerabilities in the Ubuntu 5.04 (Hoary Hedgehog) version of Firefox. The version shipped with Ubuntu 4.10 (Warty Warthog) is also vulnerable to these flaws, so it needs to be upgraded as well. Please see

http://www.ubuntulinux.org/support/documentation/usn/usn-149-1

for the original advisory.

This update also fixes several older vulnerabilities; Some of them could be exploited to execute arbitrary code with full user privileges if the user visited a malicious website. (MFSA-2005-01 to MFSA-2005-44; please see the following website for details:
http://www.mozilla.org/projects/security/known-vulnerabilities.html)

Note that Tenable Network Security has extracted the preceding description block directly from the Ubuntu security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-07-19, plugin id: 20546, published: 2006-01-15, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=20546, title: Ubuntu 4.10 : mozilla-firefox vulnerabilities (USN-149-3)}, {NASL family: Windows, NASL id: MOZILLA_THUNDERBIRD_106.NASL, description: The installed version of Mozilla Thunderbird is affected by multiple vulnerabilities, at least one of which could allow a remote attacker to execute arbitrary code., last seen: 2019-02-21, modified: 2018-07-17, plugin id: 19269, published: 2005-07-21, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=19269, title: Mozilla Thunderbird < 1.0.6 Multiple Vulnerabilities}, {NASL family: CentOS Local Security Checks, NASL id: CENTOS_RHSA-2005-601.NASL, description: Updated thunderbird package that fixes various bugs is now available for Red Hat Enterprise Linux 4.

This update has been rated as having important security impact by the Red Hat Security Response Team.

Mozilla Thunderbird is a standalone mail and newsgroup client.

A bug was found in the way Thunderbird handled anonymous functions during regular expression string replacement. It is possible for a malicious HTML mail to capture a random block of client memory. The Common Vulnerabilities and Exposures project has assigned this bug the name CVE-2005-0989.

A bug was found in the way Thunderbird validated several XPInstall related JavaScript objects. A malicious HTML mail could pass other objects to the XPInstall objects, resulting in the JavaScript interpreter jumping to arbitrary locations in memory. (CVE-2005-1159)

A bug was found in the way the Thunderbird privileged UI code handled DOM nodes from the content window. An HTML message could install malicious JavaScript code or steal data when a user performs commonplace actions such as clicking a link or opening the context menu. (CVE-2005-1160)

A bug was found in the way Thunderbird executed JavaScript code.
JavaScript executed from HTML mail should run with a restricted access level, preventing dangerous actions. It is possible that a malicious HTML mail could execute JavaScript code with elevated privileges, allowing access to protected data and functions. (CVE-2005-1532)

A bug was found in the way Thunderbird executed JavaScript in XBL controls. It is possible for a malicious HTML mail to leverage this vulnerability to execute other JavaScript based attacks even when JavaScript is disabled. (CVE-2005-2261)

A bug was found in the way Thunderbird handled certain JavaScript functions. It is possible for a malicious HTML mail to crash the client by executing malformed JavaScript code. (CVE-2005-2265)

A bug was found in the way Thunderbird handled child frames. It is possible for a malicious framed HTML mail to steal sensitive information from its parent frame. (CVE-2005-2266)

A bug was found in the way Thunderbird handled DOM node names. It is possible for a malicious HTML mail to overwrite a DOM node name, allowing certain privileged chrome actions to execute the malicious JavaScript. (CVE-2005-2269)

A bug was found in the way Thunderbird cloned base objects. It is possible for HTML content to navigate up the prototype chain to gain access to privileged chrome objects. (CVE-2005-2270)

Users of Thunderbird are advised to upgrade to this updated package that contains Thunderbird version 1.0.6 and is not vulnerable to these issues., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 21952, published: 2006-07-05, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=21952, title: CentOS 4 : thunderbird (CESA-2005:601)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2005-601.NASL, description: Updated thunderbird package that fixes various bugs is now available for Red Hat Enterprise Linux 4.

This update has been rated as having important security impact by the Red Hat Security Response Team.

Mozilla Thunderbird is a standalone mail and newsgroup client.

A bug was found in the way Thunderbird handled anonymous functions during regular expression string replacement. It is possible for a malicious HTML mail to capture a random block of client memory. The Common Vulnerabilities and Exposures project has assigned this bug the name CVE-2005-0989.

A bug was found in the way Thunderbird validated several XPInstall related JavaScript objects. A malicious HTML mail could pass other objects to the XPInstall objects, resulting in the JavaScript interpreter jumping to arbitrary locations in memory. (CVE-2005-1159)

A bug was found in the way the Thunderbird privileged UI code handled DOM nodes from the content window. An HTML message could install malicious JavaScript code or steal data when a user performs commonplace actions such as clicking a link or opening the context menu. (CVE-2005-1160)

A bug was found in the way Thunderbird executed JavaScript code.
JavaScript executed from HTML mail should run with a restricted access level, preventing dangerous actions. It is possible that a malicious HTML mail could execute JavaScript code with elevated privileges, allowing access to protected data and functions. (CVE-2005-1532)

A bug was found in the way Thunderbird executed JavaScript in XBL controls. It is possible for a malicious HTML mail to leverage this vulnerability to execute other JavaScript based attacks even when JavaScript is disabled. (CVE-2005-2261)

A bug was found in the way Thunderbird handled certain JavaScript functions. It is possible for a malicious HTML mail to crash the client by executing malformed JavaScript code. (CVE-2005-2265)

A bug was found in the way Thunderbird handled child frames. It is possible for a malicious framed HTML mail to steal sensitive information from its parent frame. (CVE-2005-2266)

A bug was found in the way Thunderbird handled DOM node names. It is possible for a malicious HTML mail to overwrite a DOM node name, allowing certain privileged chrome actions to execute the malicious JavaScript. (CVE-2005-2269)

A bug was found in the way Thunderbird cloned base objects. It is possible for HTML content to navigate up the prototype chain to gain access to privileged chrome objects. (CVE-2005-2270)

Users of Thunderbird are advised to upgrade to this updated package that contains Thunderbird version 1.0.6 and is not vulnerable to these issues., last seen: 2019-02-21, modified: 2018-11-15, plugin id: 19277, published: 2005-07-22, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=19277, title: RHEL 4 : thunderbird (RHSA-2005:601)}, {NASL family: Ubuntu Local Security Checks, NASL id: UBUNTU_USN-157-1.NASL, description: Vladimir V. Perepelitsa discovered a bug in Thunderbird's handling of anonymous functions during regular expression string replacement. A malicious HTML email could exploit this to capture a random block of client memory. (CAN-2005-0989)

Georgi Guninski discovered that the types of certain XPInstall related JavaScript objects were not sufficiently validated when they were called. This could be exploited by malicious HTML email content to crash Thunderbird or even execute arbitrary code with the privileges of the user. (CAN-2005-1159) 

Thunderbird did not properly verify the values of XML DOM nodes. By tricking the user to perform a common action like clicking on a link or opening the context menu, a malicious HTML email could exploit this to execute arbitrary JavaScript code with the full privileges of the user. (CAN-2005-1160)

A variant of the attack described in CAN-2005-1160 (see USN-124-1) was discovered. Additional checks were added to make sure JavaScript eval and script objects are run with the privileges of the context that created them, not the potentially elevated privilege of the context calling them. (CAN-2005-1532)

Scripts in XBL controls from web content continued to be run even when JavaScript was disabled. This could be combined with most script-based exploits to attack people running vulnerable versions who thought disabling JavaScript would protect them. (CAN-2005-2261)

The function for version comparison in the addons installer did not properly verify the type of its argument. By passing specially crafted JavaScript objects to it, a malicious website could crash Thunderbird and possibly even execute arbitrary code with the privilege of the user account Thunderbird runs in. (CAN-2005-2265)

The XHTML DOM node handler did not take namespaces into account when verifying node types based on their names. For example, an XHTML email could contain an <IMG> tag with malicious contents, which would then be processed as the standard trusted HTML <img> tag. By tricking an user to view a malicious email, this could be exploited to execute attacker-specified code with the full privileges of the user.
(CAN-2005-2269) 

It was discovered that some objects were not created appropriately.
This allowed malicious web content scripts to trace back the creation chain until they found a privileged object and execute code with higher privileges than allowed by the current site. (CAN-2005-2270) 

Javier Fernandez-Sanguino Pena discovered that the run-mozilla.sh script created temporary files in an unsafe way when running with 'debugging' enabled. This could allow a symlink attack to create or overwrite arbitrary files with the privileges of the user invoking the program. (CAN-2005-2353)

The update for Ubuntu 4.10 (Warty Warthog) also fixes several less critical vulnerabilities which are not present in the Ubuntu 5.04 version. (MFSA-2005-02 to MFSA-2005-30; please see the following web site for details:
http://www.mozilla.org/projects/security/known-vulnerabilities.html).
We apologize for the huge delay of this update; we changed our update strategy for Mozilla products to make sure that such long delays will not happen again.

Note that Tenable Network Security has extracted the preceding description block directly from the Ubuntu security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-07-19, plugin id: 20560, published: 2006-01-15, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=20560, title: Ubuntu 4.10 / 5.04 : mozilla-thunderbird vulnerabilities (USN-157-1)}, {NASL family: Mandriva Local Security Checks, NASL id: MANDRAKE_MDKSA-2005-120.NASL, description: A number of vulnerabilities were reported and fixed in Firefox 1.0.5 and Mozilla 1.7.9. The following vulnerabilities have been backported and patched for this update:

In several places the browser UI did not correctly distinguish between true user events, such as mouse clicks or keystrokes, and synthetic events genenerated by web content. The problems ranged from minor annoyances like switching tabs or entering full-screen mode, to a variant on MFSA 2005-34 Synthetic events are now prevented from reaching the browser UI entirely rather than depend on each potentially spoofed function to protect itself from untrusted events (MFSA 2005-45; CVE-2005-2260).

Scripts in XBL controls from web content continued to be run even when Javascript was disabled. By itself this causes no harm, but it could be combined with most script-based exploits to attack people running vulnerable versions who thought disabling javascript would protect them. In the Thunderbird and Mozilla Suite mail clients Javascript is disabled by default for protection against denial-of-service attacks and worms; this vulnerability could be used to bypass that protection (MFSA 2005-46; CVE-2005-2261).

If an attacker can convince a victim to use the 'Set As Wallpaper' context menu item on a specially crafted image then they can run arbitary code on the user's computer. The image 'source' must be a javascript: url containing an eval() statement and such an image would get the 'broken image' icon, but with CSS it could be made transparent and placed on top of a real image. The attacker would have to convince the user to change their desktop background to the exploit image, and to do so by using the Firefox context menu rather than first saving the image locally and using the normal mechanism provided by their operating system. This affects only Firefox 1.0.3 and 1.0.4; earlier versions are unaffected. The implementation of this feature in the Mozilla Suite is also unaffected (MFSA 2005-47;
CVE-2005-2262).

The InstallTrigger.install() method for launching an install accepts a callback function that will be called with the final success or error status. By forcing a page navigation immediately after calling the install method this callback function can end up running in the context of the new page selected by the attacker. This is true even if the user cancels the unwanted install dialog: cancel is an error status. This callback script can steal data from the new page such as cookies or passwords, or perform actions on the user's behalf such as make a purchase if the user is already logged into the target site.
In Firefox the default settings allow only http://addons.mozilla.org to bring up this install dialog. This could only be exploited if users have added questionable sites to the install whitelist, and if a malicious site can convince you to install from their site that's a much more powerful attack vector. In the Mozilla Suite the whitelist feature is turned off by default, any site can prompt the user to install software and exploit this vulnerability. The browser has been fixed to clear any pending callback function when switching to a new site (MFSA 2005-48; CVE-2005-2263).

Sites can use the _search target to open links in the Firefox sidebar. A missing security check allows the sidebar to inject data:
urls containing scripts into any page open in the browser. This could be used to steal cookies, passwords or other sensitive data (MFSA 2005-49; CVE-2005-2264).

When InstallVersion.compareTo() is passed an object rather than a string it assumed the object was another InstallVersion without verifying it. When passed a different kind of object the browser would generally crash with an access violation. shutdown has demonstrated that different javascript objects can be passed on some OS versions to get control over the instruction pointer. We assume this could be developed further to run arbitrary machine code if the attacker can get exploit code loaded at a predictable address (MFSA 2005-50; CVE-2005-2265).

The original frame-injection spoofing bug was fixed in the Mozilla Suite 1.7 and Firefox 0.9 releases. This protection was accidentally bypassed by one of the fixes in the Firefox 1.0.3 and Mozilla Suite 1.7.7 releases (MFSA 2005-51; CVE-2005-1937).

A child frame can call top.focus() even if the framing page comes from a different origin and has overridden the focus() routine. The call is made in the context of the child frame. The attacker would look for a target site with a framed page that makes this call but doesn't verify that its parent comes from the same site. The attacker could steal cookies and passwords from the framed page, or take actions on behalf of a signed-in user. This attack would work only against sites that use frames in this manner (MFSA 2005-52;
CVE-2005-2266).

Several media players, for example Flash and QuickTime, support scripted content with the ability to open URLs in the default browser. The default behavior for Firefox was to replace the currently open browser window's content with the externally opened content. If the external URL was a javascript: url it would run as if it came from the site that served the previous content, which could be used to steal sensitive information such as login cookies or passwords. If the media player content first caused a privileged chrome: url to load then the subsequent javascript: url could execute arbitrary code. External javascript: urls will now run in a blank context regardless of what content it's replacing, and external apps will no longer be able to load privileged chrome: urls in a browser window. The -chrome command line option to load chrome applications is still supported (MFSA 2005-53; CVE-2005-2267).

Alerts and prompts created by scripts in web pages are presented with the generic title [JavaScript Application] which sometimes makes it difficult to know which site created them. A malicious page could attempt to cause a prompt to appear in front of a trusted site in an attempt to extract information such as passwords from the user. In the fixed version these prompts will contain the hostname from the page which created it (MFSA 2005-54; CVE-2005-2268).

Parts of the browser UI relied too much on DOM node names without taking different namespaces into account and verifying that nodes really were of the expected type. An XHTML document could be used to create fake elements, for example, with content-defined properties that the browser would access as if they were the trusted built-in properties of the expected HTML elements. The severity of the vulnerability would depend on what the attacker could convince the victim to do, but could result in executing user-supplied script with elevated 'chrome' privileges. This could be used to install malicious software on the victim's machine (MFSA 2005-55; CVE-2005-2269).

Improper cloning of base objects allowed web content scripts to walk up the prototype chain to get to a privileged object. This could be used to execute code with enhanced privileges (MFSA 2005-56;
CVE-2005-2270).

The updated packages have been patched to address these issue.

Update:

New packages are available that fix some regression errors that appeared in the Firefox 1.0.5 release that the patches were based on., last seen: 2017-10-29, modified: 2012-09-07, plugin id: 20420, published: 2006-01-15, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=20420, title: MDKSA-2005:120-1 : mozilla-firefox}, {NASL family: CentOS Local Security Checks, NASL id: CENTOS_RHSA-2005-586.NASL, description: An updated firefox package that fixes various security bugs is now available for Red Hat Enterprise Linux 4.

This update has been rated as having important security impact by the Red Hat Security Response Team.

Mozilla Firefox is an open source Web browser.

A bug was found in the way Firefox handled synthetic events. It is possible that Web content could generate events such as keystrokes or mouse clicks that could be used to steal data or execute malicious JavaScript code. The Common Vulnerabilities and Exposures project (cve.mitre.org) has assigned the name CVE-2005-2260 to this issue.

A bug was found in the way Firefox executed JavaScript in XBL controls. It is possible for a malicious webpage to leverage this vulnerability to execute other JavaScript based attacks even when JavaScript is disabled. (CVE-2005-2261)

A bug was found in the way Firefox set an image as the desktop wallpaper. If a user chooses the 'Set As Wallpaper...' context menu item on a specially crafted image, it is possible for an attacker to execute arbitrary code on a victim's machine. (CVE-2005-2262)

A bug was found in the way Firefox installed its extensions. If a user can be tricked into visiting a malicious webpage, it may be possible to obtain sensitive information such as cookies or passwords.
(CVE-2005-2263)

A bug was found in the way Firefox handled the _search target. It is possible for a malicious website to inject JavaScript into an already open webpage. (CVE-2005-2264)

A bug was found in the way Firefox handled certain JavaScript functions. It is possible for a malicious web page to crash the browser by executing malformed JavaScript code. (CVE-2005-2265)

A bug was found in the way Firefox handled multiple frame domains. It is possible for a frame as part of a malicious website to inject content into a frame that belongs to another domain. This issue was previously fixed as CVE-2004-0718 but was accidentally disabled.
(CVE-2005-1937)

A bug was found in the way Firefox handled child frames. It is possible for a malicious framed page to steal sensitive information from its parent page. (CVE-2005-2266)

A bug was found in the way Firefox opened URLs from media players. If a media player opens a URL that is JavaScript, JavaScript is executed with access to the currently open webpage. (CVE-2005-2267)

A design flaw was found in the way Firefox displayed alerts and prompts. Alerts and prompts were given the generic title [JavaScript Application] which prevented a user from knowing which site created them. (CVE-2005-2268)

A bug was found in the way Firefox handled DOM node names. It is possible for a malicious site to overwrite a DOM node name, allowing certain privileged chrome actions to execute the malicious JavaScript.
(CVE-2005-2269)

A bug was found in the way Firefox cloned base objects. It is possible for Web content to navigate up the prototype chain to gain access to privileged chrome objects. (CVE-2005-2270)

Users of Firefox are advised to upgrade to this updated package that contains Firefox version 1.0.6 and is not vulnerable to these issues., last seen: 2019-02-21, modified: 2018-12-07, plugin id: 21949, published: 2006-07-05, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=21949, title: CentOS 4 : firefox (CESA-2005:586)}, {NASL family: CentOS Local Security Checks, NASL id: CENTOS_RHSA-2005-587.NASL, description: Updated mozilla packages that fix various security issues are now available.

This update has been rated as having important security impact by the Red Hat Security Response Team.

Mozilla is an open source Web browser, advanced email and newsgroup client, IRC chat client, and HTML editor.

A bug was found in the way Mozilla handled synthetic events. It is possible that Web content could generate events such as keystrokes or mouse clicks that could be used to steal data or execute malicious JavaScript code. The Common Vulnerabilities and Exposures project (cve.mitre.org) has assigned the name CVE-2005-2260 to this issue.

A bug was found in the way Mozilla executed JavaScript in XBL controls. It is possible for a malicious webpage to leverage this vulnerability to execute other JavaScript based attacks even when JavaScript is disabled. (CVE-2005-2261)

A bug was found in the way Mozilla installed its extensions. If a user can be tricked into visiting a malicious webpage, it may be possible to obtain sensitive information such as cookies or passwords.
(CVE-2005-2263)

A bug was found in the way Mozilla handled certain JavaScript functions. It is possible for a malicious webpage to crash the browser by executing malformed JavaScript code. (CVE-2005-2265)

A bug was found in the way Mozilla handled multiple frame domains. It is possible for a frame as part of a malicious website to inject content into a frame that belongs to another domain. This issue was previously fixed as CVE-2004-0718 but was accidentally disabled.
(CVE-2005-1937)

A bug was found in the way Mozilla handled child frames. It is possible for a malicious framed page to steal sensitive information from its parent page. (CVE-2005-2266)

A bug was found in the way Mozilla opened URLs from media players. If a media player opens a URL which is JavaScript, the JavaScript executes with access to the currently open webpage. (CVE-2005-2267)

A design flaw was found in the way Mozilla displayed alerts and prompts. Alerts and prompts were given the generic title [JavaScript Application] which prevented a user from knowing which site created them. (CVE-2005-2268)

A bug was found in the way Mozilla handled DOM node names. It is possible for a malicious site to overwrite a DOM node name, allowing certain privileged chrome actions to execute the malicious JavaScript.
(CVE-2005-2269)

A bug was found in the way Mozilla cloned base objects. It is possible for Web content to traverse the prototype chain to gain access to privileged chrome objects. (CVE-2005-2270)

Users of Mozilla are advised to upgrade to these updated packages, which contain Mozilla version 1.7.10 and are not vulnerable to these issues., last seen: 2019-02-21, modified: 2018-12-07, plugin id: 21844, published: 2006-07-03, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=21844, title: CentOS 3 / 4 : mozilla (CESA-2005:587)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2005-587.NASL, description: Updated mozilla packages that fix various security issues are now available.

This update has been rated as having important security impact by the Red Hat Security Response Team.

Mozilla is an open source Web browser, advanced email and newsgroup client, IRC chat client, and HTML editor.

A bug was found in the way Mozilla handled synthetic events. It is possible that Web content could generate events such as keystrokes or mouse clicks that could be used to steal data or execute malicious JavaScript code. The Common Vulnerabilities and Exposures project (cve.mitre.org) has assigned the name CVE-2005-2260 to this issue.

A bug was found in the way Mozilla executed JavaScript in XBL controls. It is possible for a malicious webpage to leverage this vulnerability to execute other JavaScript based attacks even when JavaScript is disabled. (CVE-2005-2261)

A bug was found in the way Mozilla installed its extensions. If a user can be tricked into visiting a malicious webpage, it may be possible to obtain sensitive information such as cookies or passwords.
(CVE-2005-2263)

A bug was found in the way Mozilla handled certain JavaScript functions. It is possible for a malicious webpage to crash the browser by executing malformed JavaScript code. (CVE-2005-2265)

A bug was found in the way Mozilla handled multiple frame domains. It is possible for a frame as part of a malicious website to inject content into a frame that belongs to another domain. This issue was previously fixed as CVE-2004-0718 but was accidentally disabled.
(CVE-2005-1937)

A bug was found in the way Mozilla handled child frames. It is possible for a malicious framed page to steal sensitive information from its parent page. (CVE-2005-2266)

A bug was found in the way Mozilla opened URLs from media players. If a media player opens a URL which is JavaScript, the JavaScript executes with access to the currently open webpage. (CVE-2005-2267)

A design flaw was found in the way Mozilla displayed alerts and prompts. Alerts and prompts were given the generic title [JavaScript Application] which prevented a user from knowing which site created them. (CVE-2005-2268)

A bug was found in the way Mozilla handled DOM node names. It is possible for a malicious site to overwrite a DOM node name, allowing certain privileged chrome actions to execute the malicious JavaScript.
(CVE-2005-2269)

A bug was found in the way Mozilla cloned base objects. It is possible for Web content to traverse the prototype chain to gain access to privileged chrome objects. (CVE-2005-2270)

Users of Mozilla are advised to upgrade to these updated packages, which contain Mozilla version 1.7.10 and are not vulnerable to these issues., last seen: 2019-02-21, modified: 2018-12-07, plugin id: 19285, published: 2005-07-22, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=19285, title: RHEL 2.1 / 3 / 4 : mozilla (RHSA-2005:587)}, {NASL family: Windows, NASL id: MOZILLA_FIREFOX_105.NASL, description: The remote version of Firefox contains various security issues that may allow an attacker execute arbitrary code on the remote host., last seen: 2019-02-21, modified: 2018-07-17, plugin id: 18689, published: 2005-07-13, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=18689, title: Firefox < 1.0.6 Multiple Vulnerabilities}, {NASL family: Debian Local Security Checks, NASL id: DEBIAN_DSA-810.NASL, description: Several problems have been discovered in Mozilla, the web browser of the Mozilla suite. Since the usual praxis of backporting apparently does not work for this package, this update is basically version 1.7.10 with the version number rolled back, and hence still named 1.7.8. The Common Vulnerabilities and Exposures project identifies the following problems :

  - CAN-2004-0718, CAN-2005-1937     A vulnerability has been discovered in Mozilla that     allows remote attackers to inject arbitrary JavaScript     from one page into the frameset of another site.

  - CAN-2005-2260

    The browser user interface does not properly distinguish     between user-generated events and untrusted synthetic     events, which makes it easier for remote attackers to     perform dangerous actions that normally could only be     performed manually by the user.

  - CAN-2005-2261

    XML scripts ran even when JavaScript disabled.

  - CAN-2005-2263

    It is possible for a remote attacker to execute a     callback function in the context of another domain (i.e.
    frame).

  - CAN-2005-2265

    Missing input sanitising of InstallVersion.compareTo()     can cause the application to crash.

  - CAN-2005-2266

    Remote attackers could steal sensitive information such     as cookies and passwords from websites by accessing data     in alien frames.

  - CAN-2005-2268

    It is possible for a JavaScript dialog box to spoof a     dialog box from a trusted site and facilitates phishing     attacks.

  - CAN-2005-2269

    Remote attackers could modify certain tag properties of     DOM nodes that could lead to the execution of arbitrary     script or code.

  - CAN-2005-2270

    The Mozilla browser family does not properly clone base     objects, which allows remote attackers to execute     arbitrary code., last seen: 2019-02-21, modified: 2018-07-20, plugin id: 19685, published: 2005-09-13, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=19685, title: Debian DSA-810-1 : mozilla - several vulnerabilities}, {NASL family: Ubuntu Local Security Checks, NASL id: UBUNTU_USN-149-1.NASL, description: Secunia.com reported that one of the recent security patches in Firefox reintroduced the frame injection patch that was originally known as CAN-2004-0718. This allowed a malicious website to spoof the contents of other websites. (CAN-2005-1937)

In several places the browser user interface did not correctly distinguish between true user events, such as mouse clicks or keystrokes, and synthetic events genenerated by web content. This could be exploited by malicious websites to generate e. g. mouse clicks that install malicious plugins. Synthetic events are now prevented from reaching the browser UI entirely. (CAN-2005-2260)

Scripts in XBL controls from web content continued to be run even when JavaScript was disabled. This could be combined with most script-based exploits to attack people running vulnerable versions who thought disabling JavaScript would protect them. (CAN-2005-2261)

Matthew Mastracci discovered a flaw in the addons installation launcher. By forcing a page navigation immediately after calling the install method a callback function could end up running in the context of the new page selected by the attacker. This callback script could steal data from the new page such as cookies or passwords, or perform actions on the user's behalf such as make a purchase if the user is already logged into the target site. However, the default settings allow only http://addons.mozilla.org to bring up this install dialog.
This could only be exploited if users have added untrustworthy sites to the installation whitelist, and if a malicious site can convince you to install from their site. (CAN-2005-2263)

Kohei Yoshino discovered a JavaScript injection vulnerability in the sidebar. Sites can use the _search target to open links in the Firefox sidebar. A missing security check allowed the sidebar to inject 'data:' URLs containing scripts into any page open in the browser.
This could be used to steal cookies, passwords or other sensitive data. (CAN-2005-2264)

The function for version comparison in the addons installer did not properly verify the type of its argument. By passing specially crafted JavaScript objects to it, a malicious website could crash the browser and possibly even execute arbitrary code with the privilege of the user account Firefox runs in. (CAN-2005-2265)

A child frame can call top.focus() even if the framing page comes from a different origin and has overridden the focus() routine. Andreas Sandblad discovered that the call is made in the context of the child frame. This could be exploited to steal cookies and passwords from the framed page, or take actions on behalf of a signed-in user. However, websites with above properties are not very common. (CAN-2005-2266)

Several media players, for example Flash and QuickTime, support scripted content with the ability to open URLs in the default browser.
The default behavior for Firefox was to replace the currently open browser window's content with the externally opened content. Michael Krax discovered that if the external URL was a javascript: URL it would run as if it came from the site that served the previous content, which could be used to steal sensitive information such as login cookies or passwords. If the media player content first caused a privileged chrome: url to load then the subsequent javascript: url could execute arbitrary code. (CAN-2005-2267)

Alerts and prompts created by scripts in web pages were presented with the generic title [JavaScript Application] which sometimes made it difficult to know which site created them. A malicious page could exploit this by causing a prompt to appear in front of a trusted site in an attempt to extract information such as passwords from the user.
In the fixed version these prompts contain the hostname of the page which created it. (CAN-2005-2268)

The XHTML DOM node handler did not take namespaces into account when verifying node types based on their names. For example, an XHTML document could contain an <IMG> tag with malicious contents, which would then be processed as the standard trusted HTML <img> tag. By tricking an user to view malicious websites, this could be exploited to execute attacker-specified code with the full privileges of the user. (CAN-2005-2269)

It was discovered that some objects were not created appropriately.
This allowed malicious web content scripts to trace back the creation chain until they found a privileged object and execute code with higher privileges than allowed by the current site. (CAN-2005-2270).

Note that Tenable Network Security has extracted the preceding description block directly from the Ubuntu security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-07-19, plugin id: 20544, published: 2006-01-15, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=20544, title: Ubuntu 5.04 : mozilla-firefox vulnerabilities (USN-149-1)}, {NASL family: Ubuntu Local Security Checks, NASL id: UBUNTU_USN-155-1.NASL, description: Secunia.com reported that one of the recent security patches in Firefox reintroduced the frame injection patch that was originally known as CAN-2004-0718. This allowed a malicious website to spoof the contents of other websites. (CAN-2005-1937)

It was discovered that a malicious website could inject arbitrary scripts into a target site by loading it into a frame and navigating back to a previous JavaScript URL that contained an eval() call. This could be used to steal cookies or other confidential data from the target site. (MFSA 2005-42)

Michael Krax, Georgi Guninski, and L. David Baron found that the security checks that prevent script injection could be bypassed by wrapping a javascript: url in another pseudo-protocol like 'view-source:' or 'jar:'. (CAN-2005-1531)

A variant of the attack described in CAN-2005-1160 (see USN-124-1) was discovered. Additional checks were added to make sure JavaScript eval and script objects are run with the privileges of the context that created them, not the potentially elevated privilege of the context calling them. (CAN-2005-1532)

In several places the browser user interface did not correctly distinguish between true user events, such as mouse clicks or keystrokes, and synthetic events genenerated by web content. This could be exploited by malicious websites to generate e. g. mouse clicks that install malicious plugins. Synthetic events are now prevented from reaching the browser UI entirely. (CAN-2005-2260)

Scripts in XBL controls from web content continued to be run even when JavaScript was disabled. This could be combined with most script-based exploits to attack people running vulnerable versions who thought disabling JavaScript would protect them. (CAN-2005-2261)

Matthew Mastracci discovered a flaw in the addons installation launcher. By forcing a page navigation immediately after calling the install method a callback function could end up running in the context of the new page selected by the attacker. This callback script could steal data from the new page such as cookies or passwords, or perform actions on the user's behalf such as make a purchase if the user is already logged into the target site. However, the default settings allow only http://addons.mozilla.org to bring up this install dialog.
This could only be exploited if users have added untrustworthy sites to the installation whitelist, and if a malicious site can convince you to install from their site. (CAN-2005-2263)

The function for version comparison in the addons installer did not properly verify the type of its argument. By passing specially crafted JavaScript objects to it, a malicious website could crash the browser and possibly even execute arbitrary code with the privilege of the user account Firefox runs in. (CAN-2005-2265)

A child frame can call top.focus() even if the framing page comes from a different origin and has overridden the focus() routine. Andreas Sandblad discovered that the call is made in the context of the child frame. This could be exploited to steal cookies and passwords from the framed page, or take actions on behalf of a signed-in user. However, websites with above properties are not very common. (CAN-2005-2266)

Alerts and prompts created by scripts in web pages were presented with the generic title [Javascript Application] which sometimes made it difficult to know which site created them. A malicious page could exploit this by causing a prompt to appear in front of a trusted site in an attempt to extract information such as passwords from the user.
In the fixed version these prompts contain the hostname of the page which created it. (CAN-2005-2268)

The XHTML DOM node handler did not take namespaces into account when verifying node types based on their names. For example, an XHTML document could contain an <IMG> tag with malicious contents, which would then be processed as the standard trusted HTML <img> tag. By tricking an user to view malicious websites, this could be exploited to execute attacker-specified code with the full privileges of the user. (CAN-2005-2269)

It was discovered that some objects were not created appropriately.
This allowed malicious web content scripts to trace back the creation chain until they found a privileged object and execute code with higher privileges than allowed by the current site. (CAN-2005-2270)

The update for Ubuntu 4.10 (Warty Warthog) also fixes several vulnerabilities which are not present in the Ubuntu 5.04 version. Some of them could be exploited to execute arbitrary code with full user privileges if the user visited a malicious website. (MFSA-2005-01 to MFSA-2005-41; please see the following website for details:
http://www.mozilla.org/projects/security/known-vulnerabilities.html).
We apologize for the huge delay of this update; we changed our update strategy for Mozilla products to make sure that such long delays will not happen again.

Note that Tenable Network Security has extracted the preceding description block directly from the Ubuntu security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-06-29, plugin id: 20556, published: 2006-01-15, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=20556, title: Ubuntu 4.10 / 5.04 : mozilla vulnerabilities (USN-155-1)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2005-586.NASL, description: An updated firefox package that fixes various security bugs is now available for Red Hat Enterprise Linux 4.

This update has been rated as having important security impact by the Red Hat Security Response Team.

Mozilla Firefox is an open source Web browser.

A bug was found in the way Firefox handled synthetic events. It is possible that Web content could generate events such as keystrokes or mouse clicks that could be used to steal data or execute malicious JavaScript code. The Common Vulnerabilities and Exposures project (cve.mitre.org) has assigned the name CVE-2005-2260 to this issue.

A bug was found in the way Firefox executed JavaScript in XBL controls. It is possible for a malicious webpage to leverage this vulnerability to execute other JavaScript based attacks even when JavaScript is disabled. (CVE-2005-2261)

A bug was found in the way Firefox set an image as the desktop wallpaper. If a user chooses the 'Set As Wallpaper...' context menu item on a specially crafted image, it is possible for an attacker to execute arbitrary code on a victim's machine. (CVE-2005-2262)

A bug was found in the way Firefox installed its extensions. If a user can be tricked into visiting a malicious webpage, it may be possible to obtain sensitive information such as cookies or passwords.
(CVE-2005-2263)

A bug was found in the way Firefox handled the _search target. It is possible for a malicious website to inject JavaScript into an already open webpage. (CVE-2005-2264)

A bug was found in the way Firefox handled certain JavaScript functions. It is possible for a malicious web page to crash the browser by executing malformed JavaScript code. (CVE-2005-2265)

A bug was found in the way Firefox handled multiple frame domains. It is possible for a frame as part of a malicious website to inject content into a frame that belongs to another domain. This issue was previously fixed as CVE-2004-0718 but was accidentally disabled.
(CVE-2005-1937)

A bug was found in the way Firefox handled child frames. It is possible for a malicious framed page to steal sensitive information from its parent page. (CVE-2005-2266)

A bug was found in the way Firefox opened URLs from media players. If a media player opens a URL that is JavaScript, JavaScript is executed with access to the currently open webpage. (CVE-2005-2267)

A design flaw was found in the way Firefox displayed alerts and prompts. Alerts and prompts were given the generic title [JavaScript Application] which prevented a user from knowing which site created them. (CVE-2005-2268)

A bug was found in the way Firefox handled DOM node names. It is possible for a malicious site to overwrite a DOM node name, allowing certain privileged chrome actions to execute the malicious JavaScript.
(CVE-2005-2269)

A bug was found in the way Firefox cloned base objects. It is possible for Web content to navigate up the prototype chain to gain access to privileged chrome objects. (CVE-2005-2270)

Users of Firefox are advised to upgrade to this updated package that contains Firefox version 1.0.6 and is not vulnerable to these issues., last seen: 2019-02-21, modified: 2018-12-07, plugin id: 19268, published: 2005-07-21, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=19268, title: RHEL 4 : firefox (RHSA-2005:586)}, {NASL family: Windows, NASL id: MOZILLA_179.NASL, description: The remote version of this software contains various security issues, one of which may allow an attacker to execute arbitrary code on the remote host., last seen: 2019-02-21, modified: 2018-11-15, plugin id: 18813, published: 2005-07-13, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=18813, title: Mozilla Browser < 1.7.9 Multiple Vulnerabilities}, {NASL family: Debian Local Security Checks, NASL id: DEBIAN_DSA-779.NASL, description: We experienced that the update for Mozilla Firefox from DSA 779-1 unfortunately was a regression in several cases.  Since the usual praxis of backporting apparently does not work, this update is basically version 1.0.6 with the version number rolled back, and hence still named 1.0.4-*.  For completeness below is the original advisory text :

  Several problems have been discovered in Mozilla Firefox, a   lightweight web browser based on Mozilla. The Common Vulnerabilities   and Exposures project identifies the following problems :

    - CAN-2005-2260       The browser user interface does not properly       distinguish between user-generated events and       untrusted synthetic events, which makes it easier for       remote attackers to perform dangerous actions that       normally could only be performed manually by the user.

    - CAN-2005-2261

      XML scripts ran even when JavaScript disabled.

    - CAN-2005-2262

      The user can be tricked to executing arbitrary       JavaScript code by using a JavaScript URL as       wallpaper.

    - CAN-2005-2263

      It is possible for a remote attacker to execute a       callback function in the context of another domain       (i.e. frame).

    - CAN-2005-2264

      By opening a malicious link in the sidebar it is       possible for remote attackers to steal sensitive       information.

    - CAN-2005-2265

      Missing input sanitising of InstallVersion.compareTo()       can cause the application to crash.

    - CAN-2005-2266

      Remote attackers could steal sensitive information       such as cookies and passwords from websites by       accessing data in alien frames.

    - CAN-2005-2267

      By using standalone applications such as Flash and       QuickTime to open a javascript: URL, it is possible       for a remote attacker to steal sensitive information       and possibly execute arbitrary code.

    - CAN-2005-2268

      It is possible for a JavaScript dialog box to spoof a       dialog box from a trusted site and facilitates       phishing attacks.

    - CAN-2005-2269

      Remote attackers could modify certain tag properties       of DOM nodes that could lead to the execution of       arbitrary script or code.

    - CAN-2005-2270

      The Mozilla browser family does not properly clone       base objects, which allows remote attackers to execute       arbitrary code., last seen: 2019-02-21, modified: 2018-07-20, plugin id: 19476, published: 2005-08-23, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=19476, title: Debian DSA-779-2 : mozilla-firefox - several vulnerabilities}, {NASL family: Mandriva Local Security Checks, NASL id: MANDRAKE_MDKSA-2005-128.NASL, description: A number of vulnerabilities were reported and fixed in Mozilla 1.7.9.
The following vulnerabilities have been backported and patched for this update :

In several places the browser UI did not correctly distinguish between true user events, such as mouse clicks or keystrokes, and synthetic events genenerated by web content. The problems ranged from minor annoyances like switching tabs or entering full-screen mode, to a variant on MFSA 2005-34 Synthetic events are now prevented from reaching the browser UI entirely rather than depend on each potentially spoofed function to protect itself from untrusted events (MFSA 2005-45).

Scripts in XBL controls from web content continued to be run even when JavaScript was disabled. By itself this causes no harm, but it could be combined with most script-based exploits to attack people running vulnerable versions who thought disabling JavaScript would protect them. In the Thunderbird and Mozilla Suite mail clients JavaScript is disabled by default for protection against denial-of-service attacks and worms; this vulnerability could be used to bypass that protection (MFSA 2005-46).

The InstallTrigger.install() method for launching an install accepts a callback function that will be called with the final success or error status. By forcing a page navigation immediately after calling the install method this callback function can end up running in the context of the new page selected by the attacker. This is true even if the user cancels the unwanted install dialog: cancel is an error status. This callback script can steal data from the new page such as cookies or passwords, or perform actions on the user's behalf such as make a purchase if the user is already logged into the target site. In Firefox the default settings allow only http://addons.mozilla.org to bring up this install dialog. This could only be exploited if users have added questionable sites to the install whitelist, and if a malicious site can convince you to install from their site that's a much more powerful attack vector. In the Mozilla Suite the whitelist feature is turned off by default, any site can prompt the user to install software and exploit this vulnerability. The browser has been fixed to clear any pending callback function when switching to a new site (MFSA 2005-48).

When InstallVersion.compareTo() is passed an object rather than a string it assumed the object was another InstallVersion without verifying it. When passed a different kind of object the browser would generally crash with an access violation. shutdown has demonstrated that different JavaScript objects can be passed on some OS versions to get control over the instruction pointer. We assume this could be developed further to run arbitrary machine code if the attacker can get exploit code loaded at a predictable address (MFSA 2005-50).

The original frame-injection spoofing bug was fixed in the Mozilla Suite 1.7 and Firefox 0.9 releases. This protection was accidentally bypassed by one of the fixes in the Firefox 1.0.3 and Mozilla Suite 1.7.7 releases (MFSA 2005-51).

A child frame can call top.focus() even if the framing page comes from a different origin and has overridden the focus() routine. The call is made in the context of the child frame. The attacker would look for a target site with a framed page that makes this call but doesn't verify that its parent comes from the same site. The attacker could steal cookies and passwords from the framed page, or take actions on behalf of a signed-in user. This attack would work only against sites that use frames in this manner (MFSA 2005-52).

Alerts and prompts created by scripts in web pages are presented with the generic title [JavaScript Application] which sometimes makes it difficult to know which site created them. A malicious page could attempt to cause a prompt to appear in front of a trusted site in an attempt to extract information such as passwords from the user. In the fixed version these prompts will contain the hostname from the page which created it (MFSA 2005-54).

Parts of the browser UI relied too much on DOM node names without taking different namespaces into account and verifying that nodes really were of the expected type. An XHTML document could be used to create fake <IMG> elements, for example, with content-defined properties that the browser would access as if they were the trusted built-in properties of the expected HTML elements. The severity of the vulnerability would depend on what the attacker could convince the victim to do, but could result in executing user-supplied script with elevated 'chrome' privileges. This could be used to install malicious software on the victim's machine (MFSA 2005-55).

Improper cloning of base objects allowed web content scripts to walk up the prototype chain to get to a privileged object. This could be used to execute code with enhanced privileges (MFSA 2005-56).

The updated packages have been patched to address these issue. This update also brings the mozilla shipped in Mandriva Linux 10.1 to version 1.7.8 to ease maintenance. As a result, new galeon and epiphany packages are also available for 10.1, and community contribs packages that are built against mozilla have been rebuilt and are also available via contribs., last seen: 2019-02-21, modified: 2018-11-15, plugin id: 19888, published: 2005-10-05, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=19888, title: Mandrake Linux Security Advisory : mozilla (MDKSA-2005:128)}, {NASL family: FreeBSD Local Security Checks, NASL id: FREEBSD_PKG_5D72701AF60111D9BCD102061B08FC24.NASL, description: The Mozilla Foundation reports of multiple security vulnerabilities in Firefox and Mozilla :

- MFSA 2005-56 Code execution through shared function objects

- MFSA 2005-55 XHTML node spoofing

- MFSA 2005-54 JavaScript prompt origin spoofing

- MFSA 2005-53 Standalone applications can run arbitrary code through the browser

- MFSA 2005-52 Same origin violation: frame calling top.focus()

- MFSA 2005-51 The return of frame-injection spoofing

- MFSA 2005-50 Possibly exploitable crash in InstallVersion.compareTo()

- MFSA 2005-49 Script injection from Firefox sidebar panel using data :

- MFSA 2005-48 Same-origin violation with InstallTrigger callback

- MFSA 2005-47 Code execution via 'Set as Wallpaper'

- MFSA 2005-46 XBL scripts ran even when JavaScript disabled

- MFSA 2005-45 Content-generated event vulnerabilities, last seen: 2019-02-21, modified: 2018-12-19, plugin id: 19345, published: 2005-08-01, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=19345, title: FreeBSD : firefox & mozilla -- multiple vulnerabilities (5d72701a-f601-11d9-bcd1-02061b08fc24)}], oval: [{accepted: 2007-05-09T16:10:27.277-04:00, class: vulnerability, contributors: [{name: Robert L. Hollis, organization: ThreatGuard, Inc.}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Matthew Wojcik, organization: The MITRE Corporation}, {name: John Hoyland, organization: Centennial Software}, {name: John Hoyland, organization: Centennial Software}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Jonathan Baker, organization: The MITRE Corporation}], description: Firefox before 1.0.5, Mozilla before 1.7.9, and Netscape 8.0.2 does not properly verify the associated types of DOM node names within the context of their namespaces, which allows remote attackers to modify certain tag properties, possibly leading to execution of arbitrary script or code, as demonstrated using an XHTML document with IMG tags with custom properties ("XHTML node spoofing")., family: windows, id: oval:org.mitre.oval:def:100004, status: accepted, submitted: 2005-08-16T04:00:00.000-04:00, title: Firefox and Mozilla DOM Node Spoofing, version: 7}, {accepted: 2007-05-09T16:10:27.862-04:00, class: vulnerability, contributors: [{name: Robert L. Hollis, organization: ThreatGuard, Inc.}, {name: Christine Walzer, organization: The MITRE Corporation}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Matthew Wojcik, organization: The MITRE Corporation}, {name: Matthew Wojcik, organization: The MITRE Corporation}, {name: John Hoyland, organization: Centennial Software}, {name: John Hoyland, organization: Centennial Software}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Jonathan Baker, organization: The MITRE Corporation}], description: Firefox before 1.0.5 and Mozilla before 1.7.9 does not clearly associate a Javascript dialog box with the web page that generated it, which allows remote attackers to spoof a dialog box from a trusted site and facilitates phishing attacks, aka the "Dialog Origin Spoofing Vulnerability.", family: windows, id: oval:org.mitre.oval:def:100005, status: accepted, submitted: 2005-08-16T04:00:00.000-04:00, title: Firefox and Mozilla Javascript Dialog Box Spoofing, version: 7}, {accepted: 2007-05-09T16:10:31.184-04:00, class: vulnerability, contributors: [{name: Robert L. Hollis, organization: ThreatGuard, Inc.}, {name: Matthew Wojcik, organization: The MITRE Corporation}, {name: Matthew Wojcik, organization: The MITRE Corporation}, {name: Matthew Wojcik, organization: The MITRE Corporation}, {name: Matthew Wojcik, organization: The MITRE Corporation}, {name: John Hoyland, organization: Centennial Software}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Jonathan Baker, organization: The MITRE Corporation}, {name: Jonathan Baker, organization: The MITRE Corporation}], description: Firefox 1.0.3 and 1.0.4, and Netscape 8.0.2, allows remote attackers to execute arbitrary code by tricking the user into using the "Set As Wallpaper" (in Firefox) or "Set as Background" (in Netscape) context menu on an image URL that is really a javascript: URL with an eval statement, aka "Firewalling.", family: windows, id: oval:org.mitre.oval:def:100011, status: accepted, submitted: 2005-08-16T12:00:00.000-04:00, title: Firefox Wallpaper Vulnerability, version: 7}, {accepted: 2005-10-12T05:49:00.000-04:00, class: vulnerability, contributors: [{name: Jay Beale, organization: Bastille Linux}], description: Firefox before 1.0.5, Mozilla before 1.7.9, and Netscape 8.0.2 does not properly verify the associated types of DOM node names within the context of their namespaces, which allows remote attackers to modify certain tag properties, possibly leading to execution of arbitrary script or code, as demonstrated using an XHTML document with IMG tags with custom properties ("XHTML node spoofing")., family: unix, id: oval:org.mitre.oval:def:1258, status: accepted, submitted: 2005-08-15T04:00:00.000-04:00, title: RHE3 Firefox and Mozilla DOM Node Spoofing, version: 4}, {accepted: 2013-04-08T04:00:48.317-04:00, class: vulnerability, contributors: [{name: Jay Beale, organization: Bastille Linux}, {name: Dragos Prisaca, organization: Symantec Corporation}, {name: Dragos Prisaca, organization: G2, Inc.}], description: Firefox before 1.0.5, Mozilla before 1.7.9, and Netscape 8.0.2 does not properly verify the associated types of DOM node names within the context of their namespaces, which allows remote attackers to modify certain tag properties, possibly leading to execution of arbitrary script or code, as demonstrated using an XHTML document with IMG tags with custom properties ("XHTML node spoofing")., family: unix, id: oval:org.mitre.oval:def:729, status: accepted, submitted: 2005-08-15T04:00:00.000-04:00, title: RHE4 Firefox and Mozilla DOM Node Spoofing, version: 8}, {accepted: 2013-04-29T04:22:05.870-04:00, class: vulnerability, contributors: [{name: Aharon Chernin, organization: SCAP.com, LLC}, {name: Dragos Prisaca, organization: G2, Inc.}], definition_extensions: [{comment: The operating system installed on the system is Red Hat Enterprise Linux 3, oval: oval:org.mitre.oval:def:11782}, {comment: CentOS Linux 3.x, oval: oval:org.mitre.oval:def:16651}, {comment: The operating system installed on the system is Red Hat Enterprise Linux 4, oval: oval:org.mitre.oval:def:11831}, {comment: CentOS Linux 4.x, oval: oval:org.mitre.oval:def:16636}, {comment: Oracle Linux 4.x, oval: oval:org.mitre.oval:def:15990}], description: Firefox before 1.0.5, Mozilla before 1.7.9, and Netscape 8.0.2 does not properly verify the associated types of DOM node names within the context of their namespaces, which allows remote attackers to modify certain tag properties, possibly leading to execution of arbitrary script or code, as demonstrated using an XHTML document with IMG tags with custom properties ("XHTML node spoofing")., family: unix, id: oval:org.mitre.oval:def:9777, status: accepted, submitted: 2010-07-09T03:56:16-04:00, title: Firefox before 1.0.5, Mozilla before 1.7.9, and Netscape 8.0.2 does not properly verify the associated types of DOM node names within the context of their namespaces, which allows remote attackers to modify certain tag properties, possibly leading to execution of arbitrary script or code, as demonstrated using an XHTML document with IMG tags with custom properties ("XHTML node spoofing")., version: 23}], ranking: [[{circl: 3}]], redhat: {advisories: [{rhsa: {id: RHSA-2005:586}}, {rhsa: {id: RHSA-2005:587}}, {rhsa: {id: RHSA-2005:601}}]}, references: [http://www.ciac.org/ciac/bulletins/p-252.shtml, http://www.debian.org/security/2005/dsa-810, http://www.mozilla.org/security/announce/mfsa2005-55.html, http://www.networksecurity.fi/advisories/netscape-multiple-issues.html, http://www.novell.com/linux/security/advisories/2005_18_sr.html, http://www.novell.com/linux/security/advisories/2005_45_mozilla.html, http://www.novell.com/linux/security/advisories/2006_04_25.html, http://www.redhat.com/support/errata/RHSA-2005-586.html, http://www.redhat.com/support/errata/RHSA-2005-587.html, http://www.redhat.com/support/errata/RHSA-2005-601.html, http://www.securityfocus.com/bid/14242, http://www.vupen.com/english/advisories/2005/1075, https://bugzilla.mozilla.org/show_bug.cgi?id=298892, https://bugzilla.redhat.com/bugzilla/show_bug.cgi?id=160202], refmap: {bid: [14242], ciac: [P-252], confirm: [http://www.mozilla.org/security/announce/mfsa2005-55.html], debian: [DSA-810], fedora: [FLSA:160202], misc: [http://www.networksecurity.fi/advisories/netscape-multiple-issues.html, https://bugzilla.mozilla.org/show_bug.cgi?id=298892], secunia: [16043, 16044, 16059, 19823], suse: [SUSE-SA:2005:045, SUSE-SA:2006:022, SUSE-SR:2005:018], vupen: [ADV-2005-1075]}, summary: Firefox before 1.0.5, Mozilla before 1.7.9, and Netscape 8.0.2 does not properly verify the associated types of DOM node names within the context of their namespaces, which allows remote attackers to modify certain tag properties, possibly leading to execution of arbitrary script or code, as demonstrated using an XHTML document with IMG tags with custom properties ("XHTML node spoofing")., vulnerable_configuration: [{id: cpe:2.3:a:mozilla:firefox:0.8, title: Mozilla Firefox 0.8}, {id: cpe:2.3:a:mozilla:firefox:0.9, title: Mozilla Firefox 0.9}, {id: cpe:2.3:a:mozilla:firefox:0.9:rc, title: Mozilla Firefox 0.9 rc}, {id: cpe:2.3:a:mozilla:firefox:0.9.1, title: Mozilla Firefox 0.9.1}, {id: cpe:2.3:a:mozilla:firefox:0.9.2, title: Mozilla Firefox 0.9.2}, {id: cpe:2.3:a:mozilla:firefox:0.9.3, title: Mozilla Firefox 0.9.3}, {id: cpe:2.3:a:mozilla:firefox:0.10, title: Mozilla Firefox 0.10}, {id: cpe:2.3:a:mozilla:firefox:0.10.1, title: Mozilla Firefox 0.10.1}, {id: cpe:2.3:a:mozilla:firefox:1.0, title: Mozilla Firefox 1.0}, {id: cpe:2.3:a:mozilla:firefox:1.0.1, title: Mozilla Firefox 1.0.1}, {id: cpe:2.3:a:mozilla:firefox:1.0.2, title: Mozilla Firefox 1.0.2}, {id: cpe:2.3:a:mozilla:firefox:1.0.3, title: Mozilla Firefox 1.0.3}, {id: cpe:2.3:a:mozilla:firefox:1.0.4, title: Mozilla Firefox 1.0.4}, {id: cpe:2.3:a:mozilla:mozilla:1.3, title: Mozilla Mozilla 1.3}, {id: cpe:2.3:a:mozilla:mozilla:1.4, title: Mozilla Mozilla 1.4}, {id: cpe:2.3:a:mozilla:mozilla:1.4:alpha, title: Mozilla Mozilla 1.4a}, {id: cpe:2.3:a:mozilla:mozilla:1.4.1, title: Mozilla Mozilla 1.4.1}, {id: cpe:2.3:a:mozilla:mozilla:1.5, title: Mozilla Mozilla 1.5}, {id: cpe:2.3:a:mozilla:mozilla:1.5:alpha, title: Mozilla Mozilla 1.5 alpha}, {id: cpe:2.3:a:mozilla:mozilla:1.5:rc1, title: Mozilla Mozilla 1.5 rc1}, {id: cpe:2.3:a:mozilla:mozilla:1.5:rc2, title: Mozilla Mozilla 1.5 rc2}, {id: cpe:2.3:a:mozilla:mozilla:1.5.1, title: Mozilla Mozilla 1.5.1}, {id: cpe:2.3:a:mozilla:mozilla:1.6, title: Mozilla Mozilla 1.6}, {id: cpe:2.3:a:mozilla:mozilla:1.6:alpha, title: Mozilla Mozilla 1.6 alpha}, {id: cpe:2.3:a:mozilla:mozilla:1.6:beta, title: Mozilla Mozilla 1.6 beta}, {id: cpe:2.3:a:mozilla:mozilla:1.7, title: Mozilla Mozilla 1.7}, {id: cpe:2.3:a:mozilla:mozilla:1.7:alpha, title: Mozilla Mozilla 1.7 alpha}, {id: cpe:2.3:a:mozilla:mozilla:1.7:beta, title: Mozilla Mozilla 1.7 beta}, {id: cpe:2.3:a:mozilla:mozilla:1.7:rc1, title: Mozilla Mozilla 1.7 rc1}, {id: cpe:2.3:a:mozilla:mozilla:1.7:rc2, title: Mozilla Mozilla 1.7 rc2}, {id: cpe:2.3:a:mozilla:mozilla:1.7:rc3, title: Mozilla Mozilla 1.7 rc3}, {id: cpe:2.3:a:mozilla:mozilla:1.7.1, title: Mozilla Mozilla 1.7.1}, {id: cpe:2.3:a:mozilla:mozilla:1.7.2, title: Mozilla Mozilla 1.7.2}, {id: cpe:2.3:a:mozilla:mozilla:1.7.3, title: Mozilla Mozilla 1.7.3}, {id: cpe:2.3:a:mozilla:mozilla:1.7.5, title: Mozilla Mozilla 1.7.5}, {id: cpe:2.3:a:mozilla:mozilla:1.7.6, title: Mozilla Mozilla 1.7.6}, {id: cpe:2.3:a:mozilla:mozilla:1.7.7, title: Mozilla Mozilla 1.7.7}, {id: cpe:2.3:a:mozilla:mozilla:1.7.8, title: Mozilla Mozilla 1.7.8}], vulnerable_configuration_cpe_2_2: [cpe:/a:mozilla:firefox:0.8, cpe:/a:mozilla:firefox:0.9, cpe:/a:mozilla:firefox:0.9:rc, cpe:/a:mozilla:firefox:0.9.1, cpe:/a:mozilla:firefox:0.9.2, cpe:/a:mozilla:firefox:0.9.3, cpe:/a:mozilla:firefox:0.10, cpe:/a:mozilla:firefox:0.10.1, cpe:/a:mozilla:firefox:1.0, cpe:/a:mozilla:firefox:1.0.1, cpe:/a:mozilla:firefox:1.0.2, cpe:/a:mozilla:firefox:1.0.3, cpe:/a:mozilla:firefox:1.0.4, cpe:/a:mozilla:mozilla:1.3, cpe:/a:mozilla:mozilla:1.4, cpe:/a:mozilla:mozilla:1.4:alpha, cpe:/a:mozilla:mozilla:1.4.1, cpe:/a:mozilla:mozilla:1.5, cpe:/a:mozilla:mozilla:1.5:alpha, cpe:/a:mozilla:mozilla:1.5:rc1, cpe:/a:mozilla:mozilla:1.5:rc2, cpe:/a:mozilla:mozilla:1.5.1, cpe:/a:mozilla:mozilla:1.6, cpe:/a:mozilla:mozilla:1.6:alpha, cpe:/a:mozilla:mozilla:1.6:beta, cpe:/a:mozilla:mozilla:1.7, cpe:/a:mozilla:mozilla:1.7:alpha, cpe:/a:mozilla:mozilla:1.7:beta, cpe:/a:mozilla:mozilla:1.7:rc1, cpe:/a:mozilla:mozilla:1.7:rc2, cpe:/a:mozilla:mozilla:1.7:rc3, cpe:/a:mozilla:mozilla:1.7.1, cpe:/a:mozilla:mozilla:1.7.2, cpe:/a:mozilla:mozilla:1.7.3, cpe:/a:mozilla:mozilla:1.7.5, cpe:/a:mozilla:mozilla:1.7.6, cpe:/a:mozilla:mozilla:1.7.7, cpe:/a:mozilla:mozilla:1.7.8]}
