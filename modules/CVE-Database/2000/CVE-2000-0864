{Modified: 2017-01-19T21:59:00.667000, Published: 2000-11-14T00:00:00, access: {authentication: NONE, complexity: HIGH, vector: LOCAL}, capec: [{id: 26, name: Leveraging Race Conditions, prerequisites: A resource is accessed/modified concurrently by multiple processes such that a race condition exists.
The attacker has the ability to modify the resource., related_weakness: [368, 363, 366, 370, 362, 662, 689, 667, 665], solutions: Use safe libraries to access resources such as files.
Be aware that improper use of access function calls such as chown(), tempfile(), chmod(), etc. can cause a race condition.
Use synchronization to control the flow of execution.
Use static analysis tools to find race conditions.
Pay attention to concurrency problems related to the access of resources., summary: This attack targets a race condition occurring when multiple processes access and manipulate the same resource concurrently and the outcome of the execution depends on the particular order in which the access takes place. The attacker can leverage a race condition by "running the race", modifying the resource and modifying the normal execution flow. For instance a race condition can occur while accessing a file, the attacker can trick the system by replacing the original file with his version and cause the system to read the malicious file.}, {id: 29, name: Leveraging Time-of-Check and Time-of-Use (TOCTOU) Race Conditions, prerequisites: A resource is access/modified concurrently by multiple processes.
The attacker is able to modify resource.
A race condition exists while accessing a resource., related_weakness: [367, 368, 366, 370, 362, 662, 691, 663, 665], solutions: Use safe libraries to access resources such as files.
Be aware that improper use of access function calls such as chown(), tempfile(), chmod(), etc. can cause a race condition.
Use synchronization to control the flow of execution.
Use static analysis tools to find race conditions.
Pay attention to concurrency problems related to the access of resources., summary: This attack targets a race condition occurring between the time of check (state) for a resource and the time of use of a resource. The typical example is the file access. The attacker can leverage a file access race condition by "running the race", meaning that he would modify the resource between the first time the target program accesses the file and the time the target program uses the file. During that period of time, the attacker could do something such as replace the file and cause an escalation of privilege.}], cvss: 6.2, cvss-time: 2004-01-01T00:00:00, cwe: CWE-362, exploit-db: [{description: GNOME esound 0.2.19 Unix Domain Socket Race Condition Vulnerability. CVE-2000-0864. Local exploit for unix platform, id: EDB-ID:20212, last seen: 2016-02-02, modified: 2000-08-31, published: 2000-08-31, reporter: Kris Kennaway, source: https://www.exploit-db.com/download/20212/, title: GNOME esound 0.2.19 Unix Domain Socket Race Condition Vulnerability}], id: CVE-2000-0864, impact: {availability: COMPLETE, confidentiality: COMPLETE, integrity: COMPLETE}, last-modified: 2017-10-09T21:29:20.657000, nessus: [{NASL family: Mandriva Local Security Checks, NASL id: MANDRAKE_MDKSA-2000-051.NASL, description: A problem exists with the esound daemon, which is used in GNOME and responsible for multiplexing access to audio devices. Versions of esound prior to and including 0.2.19 create a world-writable directory in /tmp called .esd which is owned by the user running esound. This directory is used to store a unix domain socket. The socket is also created world-writable, so a race condition exists in the creation of this socket which allows a local attacker to cause an arbitrary file or directory owned by the user running esound to become world-writable. This update contains a patch from FreeBSD which creates ~/.esd as the temporary directory to use and makes the unix domain socket read and write only to the user., last seen: 2019-02-21, modified: 2018-07-19, plugin id: 61841, published: 2012-09-06, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=61841, title: Mandrake Linux Security Advisory : esound (MDKSA-2000:051)}], ranking: [[{circl: 3}]], redhat: {advisories: [{rhsa: {id: RHSA-2000:077}}]}, references: [http://archives.neohapsis.com/archives/bugtraq/2000-09/0095.html, http://archives.neohapsis.com/archives/bugtraq/2000-10/0118.html, http://archives.neohapsis.com/archives/freebsd/2000-08/0365.html, http://www.debian.org/security/2000/20001008, http://www.novell.com/linux/security/advisories/esound_daemon_race_condition.html, http://www.redhat.com/support/errata/RHSA-2000-077.html, http://www.securityfocus.com/bid/1659, https://exchange.xforce.ibmcloud.com/vulnerabilities/5213], refmap: {bid: [1659], bugtraq: [20000911 Patch for esound-0.2.19, 20001006 Immunix OS Security Update for esound], debian: [20001008 esound: race condition], freebsd: [FreeBSD-SA-00:45], mandrake: [MDKSA-2000:051], suse: [20001012 esound daemon race condition], xf: [gnome-esound-symlink(5213)]}, summary: Race condition in the creation of a Unix domain socket in GNOME esound 0.2.19 and earlier allows a local user to change the permissions of arbitrary files and directories, and gain additional privileges, via a  symlink attack., vulnerable_configuration: [{id: cpe:2.3:a:gnome:esound:0.2.19, title: cpe:2.3:a:gnome:esound:0.2.19}], vulnerable_configuration_cpe_2_2: [cpe:/a:gnome:esound:0.2.19]}
