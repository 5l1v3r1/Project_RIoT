{Modified: 2016-12-05T22:04:05.643000, Published: 2016-02-12T21:59:02.023000, access: {authentication: SINGLE_INSTANCE, complexity: LOW, vector: NETWORK}, capec: [{id: 10, name: Buffer Overflow via Environment Variables, prerequisites: The application uses environment variables.
An environment variable exposed to the user is vulnerable to a buffer overflow.
The vulnerable environment variable uses untrusted data.
Tainted data used in the environment variables is not properly validated. For instance boundary checking is not done before copying the input data to a buffer., related_weakness: [120, 302, 118, 119, 74, 99, 20, 680, 733, 697], solutions: Do not expose environment variable to the user.
Do not use untrusted data in your environment variables.
Use a language or compiler that performs automatic bounds checking
There are tools such as Sharefuzz [R.10.3] which is an environment variable fuzzer for Unix that support loading a shared library. You can use Sharefuzz to determine if you are exposing an environment variable vulnerable to buffer overflow., summary: This attack pattern involves causing a buffer overflow through manipulation of environment variables. Once the attacker finds that they can modify an environment variable, they may try to overflow associated buffers. This attack leverages implicit trust often placed in environment variables.}, {id: 100, name: Overflow Buffers, prerequisites: Targeted software performs buffer operations.
Targeted software inadequately performs bounds-checking on buffer operations.
Attacker has the capability to influence the input to buffer operations., related_weakness: [120, 119, 131, 129, 805, 19, 680], solutions: Use a language or compiler that performs automatic bounds checking.
Use secure functions not vulnerable to buffer overflow.
If you have to use dangerous functions, make sure that you do boundary checking.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution.
Utilize static source code analysis tools to identify potential buffer overflow weaknesses in the software., summary: Buffer Overflow attacks target improper or missing bounds checking on buffer operations, typically triggered by input injected by an attacker. As a consequence, an attacker is able to write past the boundaries of allocated buffer regions in memory, causing a program crash or potentially redirection of execution as per the attackers' choice.}, {id: 14, name: Client-side Injection-induced Buffer Overflow, prerequisites: The targeted client software communicates with an external server.
The targeted client software has a buffer overflow vulnerability., related_weakness: [120, 353, 118, 119, 74, 20, 680, 697, 713], solutions: The client software should not install untrusted code from a non-authenticated server.
The client software should have the latest patches and should be audited for vulnerabilities before being used to communicate with potentially hostile servers.
Perform input validation for length of buffer inputs.
Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Ensure all buffer uses are consistently bounds-checked.
Use OS-level preventative functionality. Not a complete solution., summary: This type of attack exploits a buffer overflow vulnerability in targeted client software through injection of malicious content from a custom-built hostile service.}, {id: 24, name: Filter Failure through Buffer Overflow, prerequisites: Ability to control the length of data passed to an active filter., related_weakness: [120, 119, 118, 74, 20, 680, 733, 697], solutions: Make sure that ANY failure occurring in the filtering or input validation routine is properly handled and that offending input is NOT allowed to go through. Basically make sure that the vault is closed when failure occurs.
Pre-design: Use a language or compiler that performs automatic bounds checking.
Pre-design through Build: Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Operational: Use OS-level preventative functionality. Not a complete solution.
Design: Use an abstraction library to abstract away risky APIs. Not a complete solution., summary: In this attack, the idea is to cause an active filter to fail by causing an oversized transaction. An attacker may try to feed overly long input strings to the program in an attempt to overwhelm the filter (by causing a buffer overflow) and hoping that the filter does not fail securely (i.e. the user input is let into the system unfiltered).}, {id: 42, name: MIME Conversion, prerequisites: The target system uses a mail server.
Mail server vendor has not released a patch for the MIME conversion routine, the patch itself has a security hole or does not fix the original problem, or the patch has not been applied to the user's system., related_weakness: [120, 119, 74, 20], solutions: Stay up to date with third party vendor patches
From "Exploiting Software", please see reference below.
Use the sendmail restricted shell program (smrsh)
Use mail.local, summary: An attacker exploits a weakness in the MIME conversion routine to cause a buffer overflow and gain control over the mail server machine. The MIME system is designed to allow various different information formats to be interpreted and sent via e-mail. Attack points exist when data are converted to MIME compatible format and back.}, {id: 44, name: Overflow Binary Resource File, prerequisites: Target software processes binary resource files.
Target software contains a buffer overflow vulnerability reachable through input from a user-controllable binary resource file., related_weakness: [120, 119, 697, 713], solutions: Perform appropriate bounds checking on all buffers.
Design: Enforce principle of least privilege
Design: Static code analysis
Implementation: Execute program in less trusted process space environment, do not allow lower integrity processes to write to higher integrity processes
Implementation: Keep software patched to ensure that known vulnerabilities are not available for attackers to target on host., summary: An attack of this type exploits a buffer overflow vulnerability in the handling of binary resources. Binary resources may include music files like MP3, image files like JPEG files, and any other binary file. These attacks may pass unnoticed to the client machine through normal usage of files, such as a browser loading a seemingly innocent JPEG file. This can allow the attacker access to the execution stack and execute arbitrary code in the target process. This attack pattern is a variant of standard buffer overflow attacks using an unexpected vector (binary files) to wrap its attack and open up a new attack vector. The attacker is required to either directly serve the binary content to the victim, or place it in a locale like a MP3 sharing application, for the victim to download. The attacker then is notified upon the download or otherwise locates the vulnerability opened up by the buffer overflow.}, {id: 45, name: Buffer Overflow via Symbolic Links, prerequisites: The attacker can create symbolic link on the target host.
The target host does not perform correct boundary checking while consuming data from a resources., related_weakness: [120, 285, 302, 118, 119, 74, 20, 680, 697], solutions: Pay attention to the fact that the resource you read from can be a replaced by a Symbolic link. You can do a Symlink check before reading the file and decide that this is not a legitimate way of accessing the resource.
Because Symlink can be modified by an attacker, make sure that the ones you read are located in protected directories.
Pay attention to the resource pointed to by your symlink links (See attack pattern named "Forced Symlink race"), they can be replaced by malicious resources.
Always check the size of the input data before copying to a buffer.
Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution., summary: This type of attack leverages the use of symbolic links to cause buffer overflows. An attacker can try to create or manipulate a symbolic link file such that its contents result in out of bounds data. When the target software processes the symbolic link file, it could potentially overflow internal buffers with insufficient bounds checking.}, {id: 46, name: Overflow Variables and Tags, prerequisites: The target program consumes user-controllable data in the form of tags or variables.
The target program does not perform sufficient boundary checking., related_weakness: [120, 118, 119, 74, 20, 680, 733, 697], solutions: Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution.
Do not trust input data from user. Validate all user input., summary: This type of attack leverages the use of tags or variables from a formatted configuration data to cause buffer overflow. The attacker crafts a malicious HTML page or configuration file that includes oversized strings, thus causing an overflow.}, {id: 47, name: Buffer Overflow via Parameter Expansion, prerequisites: The program expands one of the parameters passed to a function with input controlled by the user, but a later function making use of the expanded parameter erroneously considers the original, not the expanded size of the parameter.
The expanded parameter is used in the context where buffer overflow may become possible due to the incorrect understanding of the parameter size (i.e. thinking that it is smaller than it really is)., related_weakness: [120, 119, 118, 130, 131, 74, 20, 680, 697], solutions: Ensure that when parameter expansion happens in the code that the assumptions used to determine the resulting size of the parameter are accurate and that the new size of the parameter is visible to the whole system, summary: In this attack, the target software is given input that the attacker knows will be modified and expanded in size during processing. This attack relies on the target software failing to anticipate that the expanded data may exceed some internal limit, thereby creating a buffer overflow.}, {id: 8, name: Buffer Overflow in an API Call, prerequisites: The target host exposes an API to the user.
One or more API functions exposed by the target host has a buffer overflow vulnerability., related_weakness: [120, 119, 118, 74, 20, 680, 733, 697], solutions: Use a language or compiler that performs automatic bounds checking.
Use secure functions not vulnerable to buffer overflow.
If you have to use dangerous functions, make sure that you do boundary checking.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Use OS-level preventative functionality. Not a complete solution., summary: This attack targets libraries or shared code modules which are vulnerable to buffer overflow attacks. An attacker who has access to an API may try to embed malicious code in the API function call and exploit a buffer overflow vulnerability in the function's implementation. All clients that make use of the code library thus become vulnerable by association. This has a very broad effect on security across a system, usually affecting more than one software process.}, {id: 9, name: Buffer Overflow in Local Command-Line Utilities, prerequisites: The target host exposes a command-line utility to the user.
The command-line utility exposed by the target host has a buffer overflow vulnerability that can be exploited., related_weakness: [120, 118, 119, 74, 20, 680, 733, 697], solutions: Carefully review the service's implementation before making it available to user. For instance you can use manual or automated code review to uncover vulnerabilities such as buffer overflow.
Use a language or compiler that performs automatic bounds checking.
Use an abstraction library to abstract away risky APIs. Not a complete solution.
Compiler-based canary mechanisms such as StackGuard, ProPolice and the Microsoft Visual Studio /GS flag. Unless this provides automatic bounds checking, it is not a complete solution.
Operational: Use OS-level preventative functionality. Not a complete solution.
Apply the latest patches to your user exposed services. This may not be a complete solution, especially against a zero day attack.
Do not unnecessarily expose services., summary: This attack targets command-line utilities available in a number of shells. An attacker can leverage a vulnerability found in a command-line utility to escalate privilege to root.}], cvss: 6.8, cvss-time: 2016-02-17T10:29:15.683000, cwe: CWE-119, id: CVE-2015-8631, impact: {availability: COMPLETE, confidentiality: NONE, integrity: NONE}, nessus: [{NASL family: Oracle Linux Local Security Checks, NASL id: ORACLELINUX_ELSA-2016-0493.NASL, description: From Red Hat Security Advisory 2016:0493 :

Updated krb5 packages that fix two security issues are now available for Red Hat Enterprise Linux 6.

Red Hat Product Security has rated this update as having Moderate security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.

Kerberos is a networked authentication system which allows clients and servers to authenticate to each other with the help of a trusted third party, the Kerberos KDC.

A memory leak flaw was found in the krb5_unparse_name() function of the MIT Kerberos kadmind service. An authenticated attacker could repeatedly send specially crafted requests to the server, which could cause the server to consume large amounts of memory resources, ultimately leading to a denial of service due to memory exhaustion.
(CVE-2015-8631)

An out-of-bounds read flaw was found in the kadmind service of MIT Kerberos. An authenticated attacker could send a maliciously crafted message to force kadmind to read beyond the end of allocated memory, and write the memory contents to the KDC database if the attacker has write permission, leading to information disclosure. (CVE-2015-8629)

The CVE-2015-8631 issue was discovered by Simo Sorce of Red Hat.

All krb5 users are advised to upgrade to these updated packages, which contain backported patches to correct these issues. After installing the updated packages, running Kerberos services (krb5kdc, kadmin, and kprop) will be restarted automatically., last seen: 2019-02-21, modified: 2018-07-24, plugin id: 90112, published: 2016-03-23, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=90112, title: Oracle Linux 6 : krb5 (ELSA-2016-0493)}, {NASL family: Amazon Linux Local Security Checks, NASL id: ALA_ALAS-2016-691.NASL, description: An out-of-bounds read flaw was found in the kadmind service of MIT Kerberos. An authenticated attacker could send a maliciously crafted message to force kadmind to read beyond the end of allocated memory, and write the memory contents to the KDC database if the attacker has write permission, leading to information disclosure. (CVE-2015-8629)

A NULL pointer dereference flaw was found in the procedure used by the MIT Kerberos kadmind service to store policies: the kadm5_create_principal_3() and kadm5_modify_principal() function did not ensure that a policy was given when KADM5_POLICY was set. An authenticated attacker with permissions to modify the database could use this flaw to add or modify a principal with a policy set to NULL, causing the kadmind service to crash. (CVE-2015-8630)

A memory leak flaw was found in the krb5_unparse_name() function of the MIT Kerberos kadmind service. An authenticated attacker could repeatedly send specially crafted requests to the server, which could cause the server to consume large amounts of memory resources, ultimately leading to a denial of service due to memory exhaustion.
(CVE-2015-8631), last seen: 2019-02-21, modified: 2018-04-18, plugin id: 90633, published: 2016-04-22, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=90633, title: Amazon Linux AMI : krb5 (ALAS-2016-691)}, {NASL family: PhotonOS Local Security Checks, NASL id: PHOTONOS_PHSA-2017-0011_KRB5.NASL, description: An update of the krb5 package has been released., last seen: 2019-02-08, modified: 2019-02-07, plugin id: 121679, published: 2019-02-07, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=121679, title: Photon OS 1.0: Krb5 PHSA-2017-0011}, {NASL family: OracleVM Local Security Checks, NASL id: ORACLEVM_OVMSA-2016-0039.NASL, description: The remote OracleVM system is missing necessary patches to address critical security updates :

  - Fix (CVE-2015-8629, CVE-2015-8631)

  - Also fix a spec trigger issue that prevents building

  - Resolves: #1306973, last seen: 2019-02-21, modified: 2018-07-24, plugin id: 90138, published: 2016-03-24, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=90138, title: OracleVM 3.3 / 3.4 : krb5 (OVMSA-2016-0039)}, {NASL family: Scientific Linux Local Security Checks, NASL id: SL_20160323_KRB5_ON_SL6_X.NASL, description: A memory leak flaw was found in the krb5_unparse_name() function of the MIT Kerberos kadmind service. An authenticated attacker could repeatedly send specially crafted requests to the server, which could cause the server to consume large amounts of memory resources, ultimately leading to a denial of service due to memory exhaustion.
(CVE-2015-8631)

An out-of-bounds read flaw was found in the kadmind service of MIT Kerberos. An authenticated attacker could send a maliciously crafted message to force kadmind to read beyond the end of allocated memory, and write the memory contents to the KDC database if the attacker has write permission, leading to information disclosure. (CVE-2015-8629)

After installing the updated packages, running Kerberos services (krb5kdc, kadmin, and kprop) will be restarted automatically., last seen: 2019-02-21, modified: 2018-12-28, plugin id: 90145, published: 2016-03-24, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=90145, title: Scientific Linux Security Update : krb5 on SL6.x i386/x86_64}, {NASL family: SuSE Local Security Checks, NASL id: SUSE_SU-2016-0429-1.NASL, description: This update for krb5 fixes the following issues :

  - CVE-2015-8629: Information leak authenticated attackers     with permissions to modify the database (bsc#963968)

  - CVE-2015-8630: An authenticated attacker with permission     to modify a principal entry may have caused kadmind to     crash (bsc#963964)

  - CVE-2015-8631: An authenticated attacker could have     caused a memory leak in auditd by supplying a null     principal name in request (bsc#963975)

Note that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-29, plugin id: 88707, published: 2016-02-12, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=88707, title: SUSE SLED12 / SLES12 Security Update : krb5 (SUSE-SU-2016:0429-1)}, {NASL family: CentOS Local Security Checks, NASL id: CENTOS_RHSA-2016-0493.NASL, description: Updated krb5 packages that fix two security issues are now available for Red Hat Enterprise Linux 6.

Red Hat Product Security has rated this update as having Moderate security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.

Kerberos is a networked authentication system which allows clients and servers to authenticate to each other with the help of a trusted third party, the Kerberos KDC.

A memory leak flaw was found in the krb5_unparse_name() function of the MIT Kerberos kadmind service. An authenticated attacker could repeatedly send specially crafted requests to the server, which could cause the server to consume large amounts of memory resources, ultimately leading to a denial of service due to memory exhaustion.
(CVE-2015-8631)

An out-of-bounds read flaw was found in the kadmind service of MIT Kerberos. An authenticated attacker could send a maliciously crafted message to force kadmind to read beyond the end of allocated memory, and write the memory contents to the KDC database if the attacker has write permission, leading to information disclosure. (CVE-2015-8629)

The CVE-2015-8631 issue was discovered by Simo Sorce of Red Hat.

All krb5 users are advised to upgrade to these updated packages, which contain backported patches to correct these issues. After installing the updated packages, running Kerberos services (krb5kdc, kadmin, and kprop) will be restarted automatically., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 90122, published: 2016-03-24, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=90122, title: CentOS 6 : krb5 (CESA-2016:0493)}, {NASL family: SuSE Local Security Checks, NASL id: OPENSUSE-2016-181.NASL, description: This update for krb5 fixes the following issues :

  - CVE-2015-8629: Information leak authenticated attackers     with permissions to modify the database (bsc#963968)

  - CVE-2015-8630: An authenticated attacker with permission     to modify a principal entry may have caused kadmind to     crash (bsc#963964)

  - CVE-2015-8631: An authenticated attacker could have     caused a memory leak in auditd by supplying a null     principal name in request (bsc#963975), last seen: 2019-02-21, modified: 2016-10-13, plugin id: 88687, published: 2016-02-11, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=88687, title: openSUSE Security Update : krb5 (openSUSE-2016-181)}, {NASL family: Oracle Linux Local Security Checks, NASL id: ORACLELINUX_ELSA-2016-0532.NASL, description: From Red Hat Security Advisory 2016:0532 :

An update for krb5 is now available for Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Moderate. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

Kerberos is a network authentication system, which can improve the security of your network by eliminating the insecure practice of sending passwords over the network in unencrypted form. It allows clients and servers to authenticate to each other with the help of a trusted third party, the Kerberos key distribution center (KDC).

Security Fix(es) :

* A memory leak flaw was found in the krb5_unparse_name() function of the MIT Kerberos kadmind service. An authenticated attacker could repeatedly send specially crafted requests to the server, which could cause the server to consume large amounts of memory resources, ultimately leading to a denial of service due to memory exhaustion.
(CVE-2015-8631)

* An out-of-bounds read flaw was found in the kadmind service of MIT Kerberos. An authenticated attacker could send a maliciously crafted message to force kadmind to read beyond the end of allocated memory, and write the memory contents to the KDC database if the attacker has write permission, leading to information disclosure. (CVE-2015-8629)

* A NULL pointer dereference flaw was found in the procedure used by the MIT Kerberos kadmind service to store policies: the kadm5_create_principal_3() and kadm5_modify_principal() function did not ensure that a policy was given when KADM5_POLICY was set. An authenticated attacker with permissions to modify the database could use this flaw to add or modify a principal with a policy set to NULL, causing the kadmind service to crash. (CVE-2015-8630)

The CVE-2015-8631 issue was discovered by Simo Sorce of Red Hat., last seen: 2019-02-21, modified: 2018-07-24, plugin id: 90295, published: 2016-04-01, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=90295, title: Oracle Linux 7 : krb5 (ELSA-2016-0532)}, {NASL family: SuSE Local Security Checks, NASL id: SUSE_SU-2016-0430-1.NASL, description: This update for krb5 fixes the following issues :

  - CVE-2015-8629: Information leak authenticated attackers     with permissions to modify the database (bsc#963968)

  - CVE-2015-8631: An authenticated attacker could have     caused a memory leak in auditd by supplying a null     principal name in request (bsc#963975)

Note that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-29, plugin id: 88708, published: 2016-02-12, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=88708, title: SUSE SLED11 / SLES11 Security Update : krb5 (SUSE-SU-2016:0430-1)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2016-0493.NASL, description: Updated krb5 packages that fix two security issues are now available for Red Hat Enterprise Linux 6.

Red Hat Product Security has rated this update as having Moderate security impact. Common Vulnerability Scoring System (CVSS) base scores, which give detailed severity ratings, are available for each vulnerability from the CVE links in the References section.

Kerberos is a networked authentication system which allows clients and servers to authenticate to each other with the help of a trusted third party, the Kerberos KDC.

A memory leak flaw was found in the krb5_unparse_name() function of the MIT Kerberos kadmind service. An authenticated attacker could repeatedly send specially crafted requests to the server, which could cause the server to consume large amounts of memory resources, ultimately leading to a denial of service due to memory exhaustion.
(CVE-2015-8631)

An out-of-bounds read flaw was found in the kadmind service of MIT Kerberos. An authenticated attacker could send a maliciously crafted message to force kadmind to read beyond the end of allocated memory, and write the memory contents to the KDC database if the attacker has write permission, leading to information disclosure. (CVE-2015-8629)

The CVE-2015-8631 issue was discovered by Simo Sorce of Red Hat.

All krb5 users are advised to upgrade to these updated packages, which contain backported patches to correct these issues. After installing the updated packages, running Kerberos services (krb5kdc, kadmin, and kprop) will be restarted automatically., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 90116, published: 2016-03-23, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=90116, title: RHEL 6 : krb5 (RHSA-2016:0493)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2016-0532.NASL, description: An update for krb5 is now available for Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Moderate. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

Kerberos is a network authentication system, which can improve the security of your network by eliminating the insecure practice of sending passwords over the network in unencrypted form. It allows clients and servers to authenticate to each other with the help of a trusted third party, the Kerberos key distribution center (KDC).

Security Fix(es) :

* A memory leak flaw was found in the krb5_unparse_name() function of the MIT Kerberos kadmind service. An authenticated attacker could repeatedly send specially crafted requests to the server, which could cause the server to consume large amounts of memory resources, ultimately leading to a denial of service due to memory exhaustion.
(CVE-2015-8631)

* An out-of-bounds read flaw was found in the kadmind service of MIT Kerberos. An authenticated attacker could send a maliciously crafted message to force kadmind to read beyond the end of allocated memory, and write the memory contents to the KDC database if the attacker has write permission, leading to information disclosure. (CVE-2015-8629)

* A NULL pointer dereference flaw was found in the procedure used by the MIT Kerberos kadmind service to store policies: the kadm5_create_principal_3() and kadm5_modify_principal() function did not ensure that a policy was given when KADM5_POLICY was set. An authenticated attacker with permissions to modify the database could use this flaw to add or modify a principal with a policy set to NULL, causing the kadmind service to crash. (CVE-2015-8630)

The CVE-2015-8631 issue was discovered by Simo Sorce of Red Hat., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 90299, published: 2016-04-01, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=90299, title: RHEL 7 : krb5 (RHSA-2016:0532)}, {NASL family: CentOS Local Security Checks, NASL id: CENTOS_RHSA-2016-0532.NASL, description: An update for krb5 is now available for Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Moderate. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

Kerberos is a network authentication system, which can improve the security of your network by eliminating the insecure practice of sending passwords over the network in unencrypted form. It allows clients and servers to authenticate to each other with the help of a trusted third party, the Kerberos key distribution center (KDC).

Security Fix(es) :

* A memory leak flaw was found in the krb5_unparse_name() function of the MIT Kerberos kadmind service. An authenticated attacker could repeatedly send specially crafted requests to the server, which could cause the server to consume large amounts of memory resources, ultimately leading to a denial of service due to memory exhaustion.
(CVE-2015-8631)

* An out-of-bounds read flaw was found in the kadmind service of MIT Kerberos. An authenticated attacker could send a maliciously crafted message to force kadmind to read beyond the end of allocated memory, and write the memory contents to the KDC database if the attacker has write permission, leading to information disclosure. (CVE-2015-8629)

* A NULL pointer dereference flaw was found in the procedure used by the MIT Kerberos kadmind service to store policies: the kadm5_create_principal_3() and kadm5_modify_principal() function did not ensure that a policy was given when KADM5_POLICY was set. An authenticated attacker with permissions to modify the database could use this flaw to add or modify a principal with a policy set to NULL, causing the kadmind service to crash. (CVE-2015-8630)

The CVE-2015-8631 issue was discovered by Simo Sorce of Red Hat., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 90275, published: 2016-04-01, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=90275, title: CentOS 7 : krb5 (CESA-2016:0532)}, {NASL family: SuSE Local Security Checks, NASL id: OPENSUSE-2016-230.NASL, description: This update for krb5 fixes the following issues :

  - CVE-2015-8629: Information leak authenticated attackers     with permissions to modify the database (bsc#963968)

  - CVE-2015-8630: An authenticated attacker with permission     to modify a principal entry may have caused kadmind to     crash (bsc#963964)

  - CVE-2015-8631: An authenticated attacker could have     caused a memory leak in auditd by supplying a null     principal name in request (bsc#963975)

This update was imported from the SUSE:SLE-12:Update update project., last seen: 2019-02-21, modified: 2016-10-13, plugin id: 88854, published: 2016-02-19, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=88854, title: openSUSE Security Update : krb5 (openSUSE-2016-230)}, {NASL family: Huawei Local Security Checks, NASL id: EULEROS_SA-2016-1012.NASL, description: According to the versions of the krb5 packages installed, the EulerOS installation on the remote host is affected by the following vulnerabilities :

  - A memory leak flaw was found in the krb5_unparse_name()     function of the MIT Kerberos kadmind service. An     authenticated attacker could repeatedly send specially     crafted requests to the server, which could cause the     server to consume large amounts of memory resources,     ultimately leading to a denial of service due to memory     exhaustion.(CVE-2015-8631)

  - An out-of-bounds read flaw was found in the kadmind     service of MIT Kerberos. An authenticated attacker     could send a maliciously crafted message to force     kadmind to read beyond the end of allocated memory, and     write the memory contents to the KDC database if the     attacker has write permission, leading to information     disclosure. (CVE-2015-8629)

  - A NULL pointer dereference flaw was found in the     procedure used by the MIT Kerberos kadmind service to     store policies: the kadm5_create_principal_3() and     kadm5_modify_principal() function did not ensure that a     policy was given when KADM5_POLICY was set. An     authenticated attacker with permissions to modify the     database could use this flaw to add or modify a     principal with a policy set to NULL, causing the     kadmind service to crash. (CVE-2015-8630)

Note that Tenable Network Security has extracted the preceding description block directly from the EulerOS security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-11-14, plugin id: 99775, published: 2017-05-01, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=99775, title: EulerOS 2.0 SP1 : krb5 (EulerOS-SA-2016-1012)}, {NASL family: Debian Local Security Checks, NASL id: DEBIAN_DLA-423.NASL, description: CVE-2015-8629

It was discovered that an authenticated attacker can cause kadmind to read beyond the end of allocated memory by sending a string without a terminating zero byte. Information leakage may be possible for an attacker with permission to modify the database.

CVE-2015-8631

It was discovered that an authenticated attacker can cause kadmind to leak memory by supplying a null principal name in a request which uses one. Repeating these requests will eventually cause kadmind to exhaust all available memory.

NOTE: Tenable Network Security has extracted the preceding description block directly from the DLA security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-07-06, plugin id: 88886, published: 2016-02-23, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=88886, title: Debian DLA-423-1 : krb5 security update}, {NASL family: Scientific Linux Local Security Checks, NASL id: SL_20160404_KRB5_ON_SL7_X.NASL, description: Security Fix(es) :

  - A memory leak flaw was found in the krb5_unparse_name()     function of the MIT Kerberos kadmind service. An     authenticated attacker could repeatedly send specially     crafted requests to the server, which could cause the     server to consume large amounts of memory resources,     ultimately leading to a denial of service due to memory     exhaustion. (CVE-2015-8631)

  - An out-of-bounds read flaw was found in the kadmind     service of MIT Kerberos. An authenticated attacker could     send a maliciously crafted message to force kadmind to     read beyond the end of allocated memory, and write the     memory contents to the KDC database if the attacker has     write permission, leading to information disclosure.
    (CVE-2015-8629)

  - A NULL pointer dereference flaw was found in the     procedure used by the MIT Kerberos kadmind service to     store policies: the kadm5_create_principal_3() and     kadm5_modify_principal() function did not ensure that a     policy was given when KADM5_POLICY was set. An     authenticated attacker with permissions to modify the     database could use this flaw to add or modify a     principal with a policy set to NULL, causing the kadmind     service to crash. (CVE-2015-8630), last seen: 2019-02-21, modified: 2018-12-28, plugin id: 90344, published: 2016-04-05, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=90344, title: Scientific Linux Security Update : krb5 on SL7.x x86_64}, {NASL family: Debian Local Security Checks, NASL id: DEBIAN_DSA-3466.NASL, description: Several vulnerabilities were discovered in krb5, the MIT implementation of Kerberos. The Common Vulnerabilities and Exposures project identifies the following problems :

  - CVE-2015-8629     It was discovered that an authenticated attacker can     cause kadmind to read beyond the end of allocated memory     by sending a string without a terminating zero byte.
    Information leakage may be possible for an attacker with     permission to modify the database.

  - CVE-2015-8630     It was discovered that an authenticated attacker with     permission to modify a principal entry can cause kadmind     to dereference a null pointer by supplying a null policy     value but including KADM5_POLICY in the mask.

  - CVE-2015-8631     It was discovered that an authenticated attacker can     cause kadmind to leak memory by supplying a null     principal name in a request which uses one. Repeating     these requests will eventually cause kadmind to exhaust     all available memory., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 88581, published: 2016-02-05, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=88581, title: Debian DSA-3466-1 : krb5 - security update}, {NASL family: PhotonOS Local Security Checks, NASL id: PHOTONOS_PHSA-2017-0011.NASL, description: An update of [krb5,linux] packages for PhotonOS has been released., last seen: 2019-02-08, modified: 2019-02-07, plugin id: 111860, published: 2018-08-17, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=111860, title: Photon OS 1.0: Krb5 / Linux PHSA-2017-0011 (deprecated)}], ranking: [[{circl: 3}]], redhat: {advisories: [{bugzilla: {id: 1302642, title: CVE-2015-8631 krb5: Memory leak caused by supplying a null principal name in request}, oval: {AND: [{OR: [{comment: Red Hat Enterprise Linux 6 Client is installed, oval: oval:com.redhat.rhba:tst:20111656001}, {comment: Red Hat Enterprise Linux 6 Server is installed, oval: oval:com.redhat.rhba:tst:20111656002}, {comment: Red Hat Enterprise Linux 6 Workstation is installed, oval: oval:com.redhat.rhba:tst:20111656003}, {comment: Red Hat Enterprise Linux 6 ComputeNode is installed, oval: oval:com.redhat.rhba:tst:20111656004}]}, {OR: [{AND: [{comment: krb5-devel is earlier than 0:1.10.3-42z1.el6_7, oval: oval:com.redhat.rhsa:tst:20160493013}, {comment: krb5-devel is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20100863012}]}, {AND: [{comment: krb5-libs is earlier than 0:1.10.3-42z1.el6_7, oval: oval:com.redhat.rhsa:tst:20160493005}, {comment: krb5-libs is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20100863016}]}, {AND: [{comment: krb5-pkinit-openssl is earlier than 0:1.10.3-42z1.el6_7, oval: oval:com.redhat.rhsa:tst:20160493011}, {comment: krb5-pkinit-openssl is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20100863008}]}, {AND: [{comment: krb5-server is earlier than 0:1.10.3-42z1.el6_7, oval: oval:com.redhat.rhsa:tst:20160493015}, {comment: krb5-server is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20100863010}]}, {AND: [{comment: krb5-server-ldap is earlier than 0:1.10.3-42z1.el6_7, oval: oval:com.redhat.rhsa:tst:20160493007}, {comment: krb5-server-ldap is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20100863006}]}, {AND: [{comment: krb5-workstation is earlier than 0:1.10.3-42z1.el6_7, oval: oval:com.redhat.rhsa:tst:20160493009}, {comment: krb5-workstation is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20100863014}]}]}]}, rhsa: {id: RHSA-2016:0493, released: 2016-03-22, severity: Moderate, title: RHSA-2016:0493: krb5 security update (Moderate)}}, {bugzilla: {id: 1302642, title: CVE-2015-8631 krb5: Memory leak caused by supplying a null principal name in request}, oval: {AND: [{OR: [{comment: Red Hat Enterprise Linux 7 Client is installed, oval: oval:com.redhat.rhba:tst:20150364001}, {comment: Red Hat Enterprise Linux 7 Server is installed, oval: oval:com.redhat.rhba:tst:20150364002}, {comment: Red Hat Enterprise Linux 7 Workstation is installed, oval: oval:com.redhat.rhba:tst:20150364003}, {comment: Red Hat Enterprise Linux 7 ComputeNode is installed, oval: oval:com.redhat.rhba:tst:20150364004}]}, {OR: [{AND: [{comment: krb5-devel is earlier than 0:1.13.2-12.el7_2, oval: oval:com.redhat.rhsa:tst:20160532009}, {comment: krb5-devel is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20100863012}]}, {AND: [{comment: krb5-libs is earlier than 0:1.13.2-12.el7_2, oval: oval:com.redhat.rhsa:tst:20160532005}, {comment: krb5-libs is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20100863016}]}, {AND: [{comment: krb5-pkinit is earlier than 0:1.13.2-12.el7_2, oval: oval:com.redhat.rhsa:tst:20160532007}, {comment: krb5-pkinit is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20150439006}]}, {AND: [{comment: krb5-server is earlier than 0:1.13.2-12.el7_2, oval: oval:com.redhat.rhsa:tst:20160532013}, {comment: krb5-server is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20100863010}]}, {AND: [{comment: krb5-server-ldap is earlier than 0:1.13.2-12.el7_2, oval: oval:com.redhat.rhsa:tst:20160532015}, {comment: krb5-server-ldap is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20100863006}]}, {AND: [{comment: krb5-workstation is earlier than 0:1.13.2-12.el7_2, oval: oval:com.redhat.rhsa:tst:20160532011}, {comment: krb5-workstation is signed with Red Hat redhatrelease2 key, oval: oval:com.redhat.rhsa:tst:20100863014}]}]}]}, rhsa: {id: RHSA-2016:0532, released: 2016-03-31, severity: Moderate, title: RHSA-2016:0532: krb5 security update (Moderate)}}], rpms: [krb5-devel-0:1.10.3-42z1.el6_7, krb5-libs-0:1.10.3-42z1.el6_7, krb5-pkinit-openssl-0:1.10.3-42z1.el6_7, krb5-server-0:1.10.3-42z1.el6_7, krb5-server-ldap-0:1.10.3-42z1.el6_7, krb5-workstation-0:1.10.3-42z1.el6_7, krb5-devel-0:1.13.2-12.el7_2, krb5-libs-0:1.13.2-12.el7_2, krb5-pkinit-0:1.13.2-12.el7_2, krb5-server-0:1.13.2-12.el7_2, krb5-server-ldap-0:1.13.2-12.el7_2, krb5-workstation-0:1.13.2-12.el7_2]}, references: [http://krbdev.mit.edu/rt/Ticket/Display.html?id=8343, http://lists.opensuse.org/opensuse-updates/2016-02/msg00059.html, http://lists.opensuse.org/opensuse-updates/2016-02/msg00110.html, http://rhn.redhat.com/errata/RHSA-2016-0493.html, http://rhn.redhat.com/errata/RHSA-2016-0532.html, http://www.debian.org/security/2016/dsa-3466, http://www.oracle.com/technetwork/topics/security/linuxbulletinapr2016-2952096.html, http://www.securitytracker.com/id/1034916, https://github.com/krb5/krb5/commit/83ed75feba32e46f736fcce0d96a0445f29b96c2], refmap: {confirm: [http://krbdev.mit.edu/rt/Ticket/Display.html?id=8343, http://www.oracle.com/technetwork/topics/security/linuxbulletinapr2016-2952096.html, https://github.com/krb5/krb5/commit/83ed75feba32e46f736fcce0d96a0445f29b96c2], debian: [DSA-3466], sectrack: [1034916], suse: [openSUSE-SU-2016:0406, openSUSE-SU-2016:0501]}, summary: Multiple memory leaks in kadmin/server/server_stubs.c in kadmind in MIT Kerberos 5 (aka krb5) before 1.13.4 and 1.14.x before 1.14.1 allow remote authenticated users to cause a denial of service (memory consumption) via a request specifying a NULL principal name., vulnerable_configuration: [{id: cpe:2.3:a:mit:kerberos:5-1.14:alpha1, title: MIT Kerberos 5-1.14 Alpha 1}, {id: cpe:2.3:a:mit:kerberos:5-1.14:beta1, title: MIT Kerberos 5-1.14 Beta 1}, {id: cpe:2.3:a:mit:kerberos:5-1.14:beta2, title: MIT Kerberos 5 1.14 Beta2}, {id: cpe:2.3:a:mit:kerberos:5-1.14, title: cpe:2.3:a:mit:kerberos:5-1.14}, {id: cpe:2.3:a:mit:kerberos:5-1.13.3, title: MIT Kerberos 5 1.13.3}], vulnerable_configuration_cpe_2_2: [cpe:/a:mit:kerberos:5-1.14:alpha1, cpe:/a:mit:kerberos:5-1.14:beta1, cpe:/a:mit:kerberos:5-1.14:beta2, cpe:/a:mit:kerberos:5-1.14, cpe:/a:mit:kerberos:5-1.13.3]}
