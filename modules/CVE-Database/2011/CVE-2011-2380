{Modified: 2011-10-25T22:59:40.683000, Published: 2011-08-09T15:55:01.497000, access: {authentication: NONE, complexity: LOW, vector: NETWORK}, capec: [{id: 13, name: Subverting Environment Variable Values, prerequisites: An environment variable is accessible to the user.
An environment variable used by the application can be tainted with user supplied data.
Input data used in an environment variable is not validated properly.
The variables encapsulation is not done properly. For instance setting a variable as public in a class makes it visible and an attacker may attempt to manipulate that variable., related_weakness: [353, 285, 302, 74, 15, 73, 20, 200], solutions: Protect environment variables against unauthorized read and write access.
Protect the configuration files which contain environment variables against illegitimate read and write access.
Assume all input is malicious. Create a white list that defines all valid input to the software system based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system.
Apply the least privilege principles. If a process has no legitimate reason to read an environment variable do not give that privilege., summary: The attacker directly or indirectly modifies environment variables used by or controlling the target software. The attacker's goal is to cause the target software to deviate from its expected operation in a manner that benefits the attacker.}, {id: 169, name: Footprinting, prerequisites: None. Any system or network that can be detected can be footprinted. However, some configuration choices may limit the useful information that can be collected during a footprinting attack., related_weakness: [497, 200, 202, 538, 311, 312, 319, 276], solutions: Configuration: Keep patches up to date by installing weekly or daily if possible.
Configuration: Shut down unnecessary services/ports.
Policy: Change default passwords by choosing strong passwords.
Implementation: Curtail unexpected input.
Design: Encrypt and password-protect sensitive data.
Policy: Place offline any information that has the potential to identify and compromise your organization's security such as access to business plans, formulas, and proprietary documents., summary: An attacker engages in probing and exploration activity to identify constituents and properties of the target. Footprinting is a general term to describe a variety of information gathering techniques, often used by attackers in preparation for some attack. It consists of using tools to learn as much as possible about the composition, configuration, and security mechanisms of the targeted application, system or network. Information that might be collected during a footprinting effort could include open ports, applications and their versions, network topology, and similar information. While footprinting is not intended to be damaging (although certain activities, such as network scans, can sometimes cause disruptions to vulnerable applications inadvertently) it may often pave the way for more damaging attacks.}, {id: 22, name: Exploiting Trust in Client (aka Make the Client Invisible), prerequisites: Server software must rely on client side formatted and validated values, and not reinforce these checks on the server side., related_weakness: [290, 287, 20, 200, 693], solutions: Design: Ensure that client process and/or message is authenticated so that anonymous communications and/or messages are not accepted by the system.
Design: Do not rely on client validation or encoding for security purposes.
Design: Utilize digital signatures to increase authentication assurance.
Design: Utilize two factor authentication to increase authentication assurance.
Implementation: Perform input validation for all remote content., summary: An attack of this type exploits a programs' vulnerabilities in client/server communication channel authentication and data integrity. It leverages the implicit trust a server places in the client, or more importantly, that which the server believes is the client.
An attacker executes this type of attack by placing themselves in the communication channel between client and server such that communication directly to the server is possible where the server believes it is communicating only with a valid client.
There are numerous variations of this type of attack.}, {id: 472, name: Browser Fingerprinting, prerequisites: Java Script is not disabled in the victim's browser, related_weakness: [200], solutions: Configuration: Disable Java Script in the browser, summary: An attacker carefully crafts small snippets of Java Script to efficiently detect the type of browser the potential victim is using. Many web-based attacks need prior knowledge of the web browser including the version of browser to ensure successful exploitation of a vulnerability. Having this knowledge allows an attacker to target the victim with attacks that specifically exploit known or zero day weaknesses in the type and version of the browser used by the victim. Automating this process via Java Script as a part of the same delivery system used to exploit the browser is considered more efficient as the attacker can supply a browser fingerprinting method and integrate it with exploit code, all contained in Java Script and in response to the same web page request by the browser.}, {id: 59, name: Session Credential Falsification through Prediction, prerequisites: The target host uses session IDs to keep track of the users.
Session IDs are used to control access to resources.
The session IDs used by the target host are predictable. For example, the session IDs are generated using predictable information (e.g., time)., related_weakness: [290, 330, 331, 346, 488, 539, 200, 6, 285, 384, 693, 719], solutions: Use a strong source of randomness to generate a session ID.
Use adequate length session IDs
Do not use information available to the user in order to generate session ID (e.g., time).
Ideas for creating random numbers are offered by Eastlake [RFC1750]
Encrypt the session ID if you expose it to the user. For instance session ID can be stored in a cookie in encrypted format., summary: This attack targets predictable session ID in order to gain privileges. The attacker can predict the session ID used during a transaction to perform spoofing and session hijacking.}, {id: 60, name: Reusing Session IDs (aka Session Replay), prerequisites: The target host uses session IDs to keep track of the users.
Session IDs are used to control access to resources.
The session IDs used by the target host are not well protected from session theft., related_weakness: [294, 290, 346, 384, 488, 539, 200, 285, 664, 732], solutions: Always invalidate a session ID after the user logout.
Setup a session time out for the session IDs.
Protect the communication between the client and server. For instance it is best practice to use SSL to mitigate man in the middle attack.
Do not code send session ID with GET method, otherwise the session ID will be copied to the URL. In general avoid writing session IDs in the URLs. URLs can get logged in log files, which are vulnerable to an attacker.
Encrypt the session data associated with the session ID.
Use multifactor authentication., summary: This attack targets the reuse of valid session ID to spoof the target system in order to gain privileges. The attacker tries to reuse a stolen session ID used previously during a transaction to perform spoofing and session hijacking. Another name for this type of attack is Session Replay.}, {id: 79, name: Using Slashes in Alternate Encoding, prerequisites: The application server accepts paths to locate resources.
The application server does insufficient input data validation on the resource path requested by the user.
The access right to resources are not set properly., related_weakness: [173, 171, 180, 181, 20, 74, 73, 21, 22, 185, 200, 697, 707], solutions: Any security checks should occur after the data has been decoded and validated as correct data format. Do not repeat decoding process, if bad character are left after decoding process, treat the data as suspicious, and fail the validation process. Refer to the RFCs to safely decode URL.
When client input is required from web-based forms, avoid using the "GET" method to submit data, as the method causes the form data to be appended to the URL and is easily manipulated. Instead, use the "POST method whenever possible.
There are tools to scan HTTP requests to the server for valid URL such as URLScan from Microsoft (http://www.microsoft.com/technet/security/tools/urlscan.mspx)
Be aware of the threat of alternative method of data encoding and obfuscation technique such as IP address encoding. (See related guideline section)
Test your path decoding process against malicious input.
In the case of path traversals, use the principle of least privilege when determining access rights to file systems. Do not allow users to access directories/files that they should not access.
Assume all input is malicious. Create a white list that defines all valid input to the application based on the requirements specifications. Input that does not match against the white list should not be permitted to enter into the system., summary: This attack targets the encoding of the Slash characters. An attacker would try to exploit common filtering problems related to the use of the slashes characters to gain access to resources on the target host. Directory-driven systems, such as file systems and databases, typically use the slash character to indicate traversal between directories or other container components. For murky historical reasons, PCs (and, as a result, Microsoft OSs) choose to use a backslash, whereas the UNIX world typically makes use of the forward slash. The schizophrenic result is that many MS-based systems are required to understand both forms of the slash. This gives the attacker many opportunities to discover and abuse a number of common filtering problems. The goal of this pattern is to discover server software that only applies filters to one version, but not the other.}], cvss: 5.0, cvss-time: 2011-08-10T09:56:00, cwe: CWE-200, id: CVE-2011-2380, impact: {availability: NONE, confidentiality: PARTIAL, integrity: NONE}, last-modified: 2017-08-28T21:29:23.580000, nessus: [{NASL family: Debian Local Security Checks, NASL id: DEBIAN_DSA-2322.NASL, description: Several vulnerabilities were discovered in Bugzilla, a web-based bug tracking system.

  - CVE-2010-4572     By inserting particular strings into certain URLs, it     was possible to inject both headers and content to any     browser.

  - CVE-2010-4567, CVE-2011-0048     Bugzilla has a 'URL' field that can contain several     types of URL, including 'javascript:' and 'data:' URLs.
    However, it does not make 'javascript:' and 'data:' URLs     into clickable links, to protect against cross-site     scripting attacks or other attacks. It was possible to     bypass this protection by adding spaces into the URL in     places that Bugzilla did not expect them. Also,     'javascript:' and'data:' links were always shown as     clickable to logged-out users.

  - CVE-2010-4568     It was possible for a user to gain unauthorized access     to any Bugzilla account in a very short amount of time     (short enough that the attack is highly effective).

  - CVE-2011-0046     Various pages were vulnerable to Cross-Site Request     Forgery attacks. Most of these issues are not as serious     as previous CSRF vulnerabilities.

  - CVE-2011-2978     When a user changes his email address, Bugzilla trusts a     user-modifiable field for obtaining the current e-mail     address to send a confirmation message to. If an     attacker has access to the session of another user (for     example, if that user left their browser window open in     a public place), the attacker could alter this field to     cause the email-change notification to go to their own     address. This means that the user would not be notified     that his account had its email address changed by the     attacker.

  - CVE-2011-2381     For flagmails only, attachment descriptions with a     newline in them could lead to the injection of crafted     headers in email notifications when an attachment flag     is edited.

  - CVE-2011-2379     Bugzilla uses an alternate host for attachments when     viewing them in raw format to prevent cross-site     scripting attacks. This alternate host is now also used     when viewing patches in 'Raw Unified' mode because     Internet Explorer 8 and older, and Safari before 5.0.6     do content sniffing, which could lead to the execution     of malicious code.

  - CVE-2011-2380, CVE-2011-2979     Normally, a group name is confidential and is only     visible to members of the group, and to non-members if     the group is used in bugs. By crafting the URL when     creating or editing a bug, it was possible to guess if a     group existed or not, even for groups which weren't used     in bugs and so which were supposed to remain     confidential., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 56444, published: 2011-10-11, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=56444, title: Debian DSA-2322-1 : bugzilla - several vulnerabilities}, {NASL family: FreeBSD Local Security Checks, NASL id: FREEBSD_PKG_DC8741B9C5D511E08A8E00151735203A.NASL, description: A Bugzilla Security Advisory reports :

The following security issues have been discovered in Bugzilla :

- Internet Explorer 8 and older, and Safari before 5.0.6 do content sniffing when viewing a patch in 'Raw Unified' mode, which could trigger a cross-site scripting attack due to the execution of malicious code in the attachment.

- It is possible to determine whether or not certain group names exist while creating or updating bugs.

- Attachment descriptions with a newline in them could lead to the injection of crafted headers in email notifications sent to the requestee or the requester when editing an attachment flag.

- If an attacker has access to a user's session, he can modify that user's email address without that user being notified of the change.

- Temporary files for uploaded attachments are not deleted on Windows, which could let a user with local access to the server read them.

- Up to Bugzilla 3.4.11, if a BUGLIST cookie is compromised, it can be used to inject HTML code when viewing a bug report, leading to a cross-site scripting attack.

All affected installations are encouraged to upgrade as soon as possible., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 55847, published: 2011-08-15, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=55847, title: FreeBSD : bugzilla -- multiple vulnerabilities (dc8741b9-c5d5-11e0-8a8e-00151735203a)}, {NASL family: Gentoo Local Security Checks, NASL id: GENTOO_GLSA-201110-03.NASL, description: The remote host is affected by the vulnerability described in GLSA-201110-03 (Bugzilla: Multiple vulnerabilities)

    Multiple vulnerabilities have been discovered in Bugzilla. Please review       the CVE identifiers referenced below for details.
  Impact :

    A remote attacker could conduct cross-site scripting attacks, conduct       script insertion and spoofing attacks, hijack the authentication of       arbitrary users, inject arbitrary HTTP headers, obtain access to       arbitrary accounts, disclose the existence of confidential groups and its       names, or inject arbitrary e-mail headers.
    A local attacker could disclose the contents of temporarfy files for       uploaded attachments.
  Workaround :

    There is no known workaround at this time., last seen: 2019-02-21, modified: 2018-07-11, plugin id: 56445, published: 2011-10-11, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=56445, title: GLSA-201110-03 : Bugzilla: Multiple vulnerabilities}], ranking: [[{circl: 3}]], references: [http://www.bugzilla.org/security/3.4.11/, http://www.debian.org/security/2011/dsa-2322, http://www.securityfocus.com/bid/49042, https://bugzilla.mozilla.org/show_bug.cgi?id=653477, https://exchange.xforce.ibmcloud.com/vulnerabilities/69034], refmap: {bid: [49042], confirm: [http://www.bugzilla.org/security/3.4.11/, https://bugzilla.mozilla.org/show_bug.cgi?id=653477], debian: [DSA-2322], osvdb: [74298, 74299], secunia: [45501], xf: [bugzilla-editing-info-disclosure(69034)]}, summary: Bugzilla 2.23.3 through 2.22.7, 3.0.x through 3.3.x, 3.4.x before 3.4.12, 3.5.x, 3.6.x before 3.6.6, 3.7.x, 4.0.x before 4.0.2, and 4.1.x before 4.1.3 allows remote attackers to determine the existence of private group names via a crafted parameter during (1) bug creation or (2) bug editing., vulnerable_configuration: [{id: cpe:2.3:a:mozilla:bugzilla:2.22.7, title: Mozilla Bugzilla 2.22.7}, {id: cpe:2.3:a:mozilla:bugzilla:2.23, title: Mozilla Bugzilla 2.23}, {id: cpe:2.3:a:mozilla:bugzilla:2.23.1, title: Mozilla Bugzilla 2.23.1}, {id: cpe:2.3:a:mozilla:bugzilla:2.23.2, title: Mozilla Bugzilla 2.23.2}, {id: cpe:2.3:a:mozilla:bugzilla:2.23.3, title: Mozilla Bugzilla 2.23.3}, {id: cpe:2.3:a:mozilla:bugzilla:3.4.9, title: Mozilla Bugzilla 3.4.9}, {id: cpe:2.3:a:mozilla:bugzilla:3.4.4, title: Mozilla Bugzilla 3.4.4}, {id: cpe:2.3:a:mozilla:bugzilla:3.4.11, title: Mozilla Bugzilla 3.4.11}, {id: cpe:2.3:a:mozilla:bugzilla:3.4.8, title: Mozilla Bugzilla 3.4.8}, {id: cpe:2.3:a:mozilla:bugzilla:3.4.2, title: Mozilla Bugzilla 3.4.2}, {id: cpe:2.3:a:mozilla:bugzilla:3.4.3, title: Mozilla Bugzilla 3.4.3}, {id: cpe:2.3:a:mozilla:bugzilla:3.4, title: Mozilla Bugzilla 3.4}, {id: cpe:2.3:a:mozilla:bugzilla:3.4.1, title: Mozilla Bugzilla 3.4.1}, {id: cpe:2.3:a:mozilla:bugzilla:3.4.6, title: Mozilla Bugzilla 3.4.6}, {id: cpe:2.3:a:mozilla:bugzilla:3.4.5, title: Mozilla Bugzilla 3.4.5}, {id: cpe:2.3:a:mozilla:bugzilla:3.4.10, title: Mozilla Bugzilla 3.4.10}, {id: cpe:2.3:a:mozilla:bugzilla:3.4.7, title: Mozilla Bugzilla 3.4.7}, {id: cpe:2.3:a:mozilla:bugzilla:3.4:rc1, title: Mozilla Bugzilla 3.4 release candidate 1}, {id: cpe:2.3:a:mozilla:bugzilla:3.5.2, title: Mozilla Bugzilla 3.5.2}, {id: cpe:2.3:a:mozilla:bugzilla:3.5.3, title: Mozilla Bugzilla 3.5.3}, {id: cpe:2.3:a:mozilla:bugzilla:3.5.1, title: Mozilla Bugzilla 3.5.1}, {id: cpe:2.3:a:mozilla:bugzilla:3.5, title: Mozilla Bugzilla 3.5}, {id: cpe:2.3:a:mozilla:bugzilla:3.6, title: Mozilla Bugzilla 3.6}, {id: cpe:2.3:a:mozilla:bugzilla:3.6.1, title: Mozilla Bugzilla 3.6.1}, {id: cpe:2.3:a:mozilla:bugzilla:3.6.0, title: Mozilla Bugzilla 3.6.0}, {id: cpe:2.3:a:mozilla:bugzilla:3.6.3, title: Mozilla Bugzilla 3.6.3}, {id: cpe:2.3:a:mozilla:bugzilla:3.6.2, title: Mozilla Bugzilla 3.6.2}, {id: cpe:2.3:a:mozilla:bugzilla:3.6.4, title: Mozilla Bugzilla 3.6.4}, {id: cpe:2.3:a:mozilla:bugzilla:3.6.5, title: Mozilla Bugzilla 3.6.5}, {id: cpe:2.3:a:mozilla:bugzilla:3.6:rc1, title: Mozilla Bugzilla 3.6 release candidate 1}, {id: cpe:2.3:a:mozilla:bugzilla:3.7.3, title: Mozilla Bugzilla 3.7.3}, {id: cpe:2.3:a:mozilla:bugzilla:3.7.1, title: Mozilla Bugzilla 3.7.1}, {id: cpe:2.3:a:mozilla:bugzilla:3.7.2, title: Mozilla Bugzilla 3.7.2}, {id: cpe:2.3:a:mozilla:bugzilla:3.7, title: Mozilla Bugzilla 3.7}, {id: cpe:2.3:a:mozilla:bugzilla:4.0:rc2, title: Mozilla Bugzilla 4.0 Release Candidate 2}, {id: cpe:2.3:a:mozilla:bugzilla:4.0:rc1, title: Mozilla Bugzilla 4.0 Release Candidate 1}, {id: cpe:2.3:a:mozilla:bugzilla:4.0.1, title: Mozilla Bugzilla 4.0.1}, {id: cpe:2.3:a:mozilla:bugzilla:4.0, title: Mozilla Bugzilla 4.0}, {id: cpe:2.3:a:mozilla:bugzilla:4.1.1, title: Mozilla Bugzilla 4.1.1}, {id: cpe:2.3:a:mozilla:bugzilla:4.1.2, title: Mozilla Bugzilla 4.1.2}, {id: cpe:2.3:a:mozilla:bugzilla:4.1, title: Mozilla Bugzilla 4.1}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.6, title: Mozilla Bugzilla 3.0.6}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.4, title: Mozilla Bugzilla 3.0.4}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.10, title: Mozilla Bugzilla 3.0.10}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.9, title: Mozilla Bugzilla 3.0.9}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.3, title: Mozilla Bugzilla 3.0.3}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.5, title: Mozilla Bugzilla 3.0.5}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.8, title: Mozilla Bugzilla 3.0.8}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.1, title: Mozilla Bugzilla 3.0.1}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.2, title: Mozilla Bugzilla 3.0.2}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.0, title: Mozilla Bugzilla 3.0.0}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.7, title: Mozilla Bugzilla 3.0.7}, {id: cpe:2.3:a:mozilla:bugzilla:3.0.11, title: Mozilla Bugzilla 3.0.11}, {id: cpe:2.3:a:mozilla:bugzilla:3.1.2, title: Mozilla Bugzilla 3.1.2}, {id: cpe:2.3:a:mozilla:bugzilla:3.1.1, title: Mozilla Bugzilla 3.1.1}, {id: cpe:2.3:a:mozilla:bugzilla:3.1.0, title: Mozilla Bugzilla 3.1.0}, {id: cpe:2.3:a:mozilla:bugzilla:3.1.4, title: Mozilla Bugzilla 3.1.4}, {id: cpe:2.3:a:mozilla:bugzilla:3.1.3, title: Mozilla Bugzilla 3.1.3}, {id: cpe:2.3:a:mozilla:bugzilla:3.2.9, title: Mozilla Bugzilla 3.2.9}, {id: cpe:2.3:a:mozilla:bugzilla:3.2.8, title: Mozilla Bugzilla 3.2.8}, {id: cpe:2.3:a:mozilla:bugzilla:3.2.10, title: Mozilla Bugzilla 3.2.10}, {id: cpe:2.3:a:mozilla:bugzilla:3.2.5, title: Mozilla Bugzilla 3.2.5}, {id: cpe:2.3:a:mozilla:bugzilla:3.2.4, title: Mozilla Bugzilla 3.2.4}, {id: cpe:2.3:a:mozilla:bugzilla:3.2.3, title: Mozilla Bugzilla 3.2.3}, {id: cpe:2.3:a:mozilla:bugzilla:3.2.2, title: Mozilla Bugzilla 3.2.2}, {id: cpe:2.3:a:mozilla:bugzilla:3.2.7, title: Mozilla Bugzilla 3.2.7}, {id: cpe:2.3:a:mozilla:bugzilla:3.2.6, title: Mozilla Bugzilla 3.2.6}, {id: cpe:2.3:a:mozilla:bugzilla:3.2.1, title: Mozilla Bugzilla 3.2.1}, {id: cpe:2.3:a:mozilla:bugzilla:3.3.3, title: Mozilla Bugzilla 3.3.3}, {id: cpe:2.3:a:mozilla:bugzilla:3.3.4, title: Mozilla Bugzilla 3.3.4}, {id: cpe:2.3:a:mozilla:bugzilla:3.3.2, title: Mozilla Bugzilla 3.3.2}, {id: cpe:2.3:a:mozilla:bugzilla:3.3.1, title: Mozilla Bugzilla 3.3.1}, {id: cpe:2.3:a:mozilla:bugzilla:3.0:rc1, title: Mozilla Bugzilla 3.0 Release Candidate 1}, {id: cpe:2.3:a:mozilla:bugzilla:3.2:rc1, title: Mozilla Bugzilla 3.2 Release Candidate 1}, {id: cpe:2.3:a:mozilla:bugzilla:3.2:rc2, title: Mozilla Bugzilla 3.2 Release Candidate 2}], vulnerable_configuration_cpe_2_2: [cpe:/a:mozilla:bugzilla:2.22.7, cpe:/a:mozilla:bugzilla:2.23, cpe:/a:mozilla:bugzilla:2.23.1, cpe:/a:mozilla:bugzilla:2.23.2, cpe:/a:mozilla:bugzilla:2.23.3, cpe:/a:mozilla:bugzilla:3.4.9, cpe:/a:mozilla:bugzilla:3.4.4, cpe:/a:mozilla:bugzilla:3.4.11, cpe:/a:mozilla:bugzilla:3.4.8, cpe:/a:mozilla:bugzilla:3.4.2, cpe:/a:mozilla:bugzilla:3.4.3, cpe:/a:mozilla:bugzilla:3.4, cpe:/a:mozilla:bugzilla:3.4.1, cpe:/a:mozilla:bugzilla:3.4.6, cpe:/a:mozilla:bugzilla:3.4.5, cpe:/a:mozilla:bugzilla:3.4.10, cpe:/a:mozilla:bugzilla:3.4.7, cpe:/a:mozilla:bugzilla:3.4:rc1, cpe:/a:mozilla:bugzilla:3.5.2, cpe:/a:mozilla:bugzilla:3.5.3, cpe:/a:mozilla:bugzilla:3.5.1, cpe:/a:mozilla:bugzilla:3.5, cpe:/a:mozilla:bugzilla:3.6, cpe:/a:mozilla:bugzilla:3.6.1, cpe:/a:mozilla:bugzilla:3.6.0, cpe:/a:mozilla:bugzilla:3.6.3, cpe:/a:mozilla:bugzilla:3.6.2, cpe:/a:mozilla:bugzilla:3.6.4, cpe:/a:mozilla:bugzilla:3.6.5, cpe:/a:mozilla:bugzilla:3.6:rc1, cpe:/a:mozilla:bugzilla:3.7.3, cpe:/a:mozilla:bugzilla:3.7.1, cpe:/a:mozilla:bugzilla:3.7.2, cpe:/a:mozilla:bugzilla:3.7, cpe:/a:mozilla:bugzilla:4.0:rc2, cpe:/a:mozilla:bugzilla:4.0:rc1, cpe:/a:mozilla:bugzilla:4.0.1, cpe:/a:mozilla:bugzilla:4.0, cpe:/a:mozilla:bugzilla:4.1.1, cpe:/a:mozilla:bugzilla:4.1.2, cpe:/a:mozilla:bugzilla:4.1, cpe:/a:mozilla:bugzilla:3.0.6, cpe:/a:mozilla:bugzilla:3.0.4, cpe:/a:mozilla:bugzilla:3.0.10, cpe:/a:mozilla:bugzilla:3.0.9, cpe:/a:mozilla:bugzilla:3.0.3, cpe:/a:mozilla:bugzilla:3.0.5, cpe:/a:mozilla:bugzilla:3.0.8, cpe:/a:mozilla:bugzilla:3.0.1, cpe:/a:mozilla:bugzilla:3.0.2, cpe:/a:mozilla:bugzilla:3.0.0, cpe:/a:mozilla:bugzilla:3.0.7, cpe:/a:mozilla:bugzilla:3.0.11, cpe:/a:mozilla:bugzilla:3.1.2, cpe:/a:mozilla:bugzilla:3.1.1, cpe:/a:mozilla:bugzilla:3.1.0, cpe:/a:mozilla:bugzilla:3.1.4, cpe:/a:mozilla:bugzilla:3.1.3, cpe:/a:mozilla:bugzilla:3.2.9, cpe:/a:mozilla:bugzilla:3.2.8, cpe:/a:mozilla:bugzilla:3.2.10, cpe:/a:mozilla:bugzilla:3.2.5, cpe:/a:mozilla:bugzilla:3.2.4, cpe:/a:mozilla:bugzilla:3.2.3, cpe:/a:mozilla:bugzilla:3.2.2, cpe:/a:mozilla:bugzilla:3.2.7, cpe:/a:mozilla:bugzilla:3.2.6, cpe:/a:mozilla:bugzilla:3.2.1, cpe:/a:mozilla:bugzilla:3.3.3, cpe:/a:mozilla:bugzilla:3.3.4, cpe:/a:mozilla:bugzilla:3.3.2, cpe:/a:mozilla:bugzilla:3.3.1, cpe:/a:mozilla:bugzilla:3.0:rc1, cpe:/a:mozilla:bugzilla:3.2:rc1, cpe:/a:mozilla:bugzilla:3.2:rc2]}
