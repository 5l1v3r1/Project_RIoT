{Modified: 2012-10-22T23:10:53.210000, Published: 2009-09-10T17:30:01.640000, access: {authentication: NONE, complexity: LOW, vector: NETWORK}, capec: [{id: 135, name: Format String Injection, prerequisites: The target application must accept a strings as user input, fail to sanitize string formatting characters in the user input, and process this string using functions that interpret string formatting characters., related_weakness: [134, 20, 74, 133], solutions: Limit the usage of formatting string functions.
Strong input validation - All user-controllable input must be validated and filtered for illegal formatting characters., summary: An attacker includes formatting characters in a string input field on the target application. Most applications assume that users will provide static text and may respond unpredictably to the presence of formatting character. For example, in certain functions of the C programming languages such as printf, the formatting character %s will print the contents of a memory location expecting this location to identify a string and the formatting character %n prints the number of DWORD written in the memory. An attacker can use this to read or write to memory locations or files, or simply to manipulate the value of the resulting text in unexpected ways. Reading or writing memory may result in program crashes and writing memory could result in the execution of arbitrary code if the attacker can write to the program stack.}, {id: 67, name: String Format Overflow in syslog(), prerequisites: The format string argument of the Syslog function can be tainted with user supplied data., related_weakness: [120, 134, 74, 20, 680, 697], solutions: The following code shows a vulnerable usage of Syslog():, summary: This attack targets the format string vulnerabilities in the syslog() function. An attacker would typically inject malicious input in the format string parameter of the syslog function. This is a common problem, and many public vulnerabilities and associated exploits have been posted.}], cvss: 7.5, cvss-time: 2009-09-11T11:58:00, cwe: CWE-134, id: CVE-2009-3163, impact: {availability: PARTIAL, confidentiality: PARTIAL, integrity: PARTIAL}, nessus: [{NASL family: Gentoo Local Security Checks, NASL id: GENTOO_GLSA-201006-07.NASL, description: The remote host is affected by the vulnerability described in GLSA-201006-07 (SILC: Multiple vulnerabilities)

    Multiple vulnerabilities were discovered in SILC Toolkit and SILC     Client. For further information please consult the CVE entries     referenced below.
  Impact :

    A remote attacker could overwrite stack locations and possibly execute     arbitrary code via a crafted OID value, Content-Length header or format     string specifiers in a nickname field or channel name.
  Workaround :

    There is no known workaround at this time., last seen: 2019-02-21, modified: 2018-07-11, plugin id: 46774, published: 2010-06-02, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=46774, title: GLSA-201006-07 : SILC: Multiple vulnerabilities}, {NASL family: Debian Local Security Checks, NASL id: DEBIAN_DSA-1879.NASL, description: Several vulnerabilities have been discovered in the software suite for the SILC protocol, a network protocol designed to provide end-to-end security for conferencing services. The Common Vulnerabilities and Exposures project identifies the following problems :

  - CVE-2008-7159     An incorrect format string in sscanf() used in the ASN1     encoder to scan an OID value could overwrite a     neighbouring variable on the stack as the destination     data type is smaller than the source type on 64-bit. On     64-bit architectures this could result in unexpected     application behaviour or even code execution in some     cases.

  - CVE-2009-3051     Various format string vulnerabilities when handling     parsed SILC messages allow an attacker to execute     arbitrary code with the rights of the victim running the     SILC client via crafted nick names or channel names     containing format strings.

  - CVE-2008-7160     An incorrect format string in a sscanf() call used in     the HTTP server component of silcd could result in     overwriting a neighbouring variable on the stack as the     destination data type is smaller than the source type on     64-bit. An attacker could exploit this by using crafted     Content-Length header values resulting in unexpected     application behaviour or even code execution in some     cases.

silc-server doesn't need an update as it uses the shared library provided by silc-toolkit. silc-client/silc-toolkit in the oldstable distribution (etch) is not affected by this problem., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 44744, published: 2010-02-24, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=44744, title: Debian DSA-1879-1 : silc-client/silc-toolkit - several vulnerabilities}, {NASL family: Mandriva Local Security Checks, NASL id: MANDRIVA_MDVSA-2009-234.NASL, description: Multiple vulnerabilities was discovered and corrected in silc-toolkit :

Multiple format string vulnerabilities in lib/silcclient/client_entry.c in Secure Internet Live Conferencing (SILC) Toolkit before 1.1.10, and SILC Client before 1.1.8, allow remote attackers to execute arbitrary code via format string specifiers in a nickname field, related to the (1) silc_client_add_client, (2) silc_client_update_client, and (3) silc_client_nickname_format functions (CVE-2009-3051).

The silc_asn1_encoder function in lib/silcasn1/silcasn1_encode.c in Secure Internet Live Conferencing (SILC) Toolkit before 1.1.8 allows remote attackers to overwrite a stack location and possibly execute arbitrary code via a crafted OID value, related to incorrect use of a %lu format string (CVE-2008-7159).

The silc_http_server_parse function in lib/silchttp/silchttpserver.c in the internal HTTP server in silcd in Secure Internet Live Conferencing (SILC) Toolkit before 1.1.9 allows remote attackers to overwrite a stack location and possibly execute arbitrary code via a crafted Content-Length header, related to incorrect use of a %lu format string (CVE-2008-7160).

Multiple format string vulnerabilities in lib/silcclient/command.c in Secure Internet Live Conferencing (SILC) Toolkit before 1.1.10, and SILC Client 1.1.8 and earlier, allow remote attackers to execute arbitrary code via format string specifiers in a channel name, related to (1) silc_client_command_topic, (2) silc_client_command_kick, (3) silc_client_command_leave, and (4) silc_client_command_users (CVE-2009-3163).

This update provides a solution to these vulnerabilities.

Update :

Packages for MES5 was not provided previousely, this update addresses this problem.

Packages for 2008.0 are provided for Corporate Desktop 2008.0 customers, last seen: 2019-02-21, modified: 2018-07-19, plugin id: 40997, published: 2009-09-16, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=40997, title: Mandriva Linux Security Advisory : silc-toolkit (MDVSA-2009:234-2)}, {NASL family: Mandriva Local Security Checks, NASL id: MANDRIVA_MDVSA-2009-235.NASL, description: Multiple vulnerabilities was discovered and corrected in silc-toolkit :

Multiple format string vulnerabilities in lib/silcclient/client_entry.c in Secure Internet Live Conferencing (SILC) Toolkit before 1.1.10, and SILC Client before 1.1.8, allow remote attackers to execute arbitrary code via format string specifiers in a nickname field, related to the (1) silc_client_add_client, (2) silc_client_update_client, and (3) silc_client_nickname_format functions (CVE-2009-3051).

Multiple format string vulnerabilities in lib/silcclient/command.c in Secure Internet Live Conferencing (SILC) Toolkit before 1.1.10, and SILC Client 1.1.8 and earlier, allow remote attackers to execute arbitrary code via format string specifiers in a channel name, related to (1) silc_client_command_topic, (2) silc_client_command_kick, (3) silc_client_command_leave, and (4) silc_client_command_users (CVE-2009-3163).

This update provides a solution to these vulnerabilities., last seen: 2019-02-21, modified: 2018-07-19, plugin id: 48152, published: 2010-07-30, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=48152, title: Mandriva Linux Security Advisory : silc-toolkit (MDVSA-2009:235)}], ranking: [[{circl: 3}]], references: [http://silcnet.org/docs/changelog/SILC%20Toolkit%201.1.10, http://silcnet.org/general/news/news_toolkit.php, http://www.debian.org/security/2009/dsa-1879, http://www.mandriva.com/security/advisories?name=MDVSA-2009:234, http://www.mandriva.com/security/advisories?name=MDVSA-2009:235, http://www.openwall.com/lists/oss-security/2009/08/31/5, http://www.openwall.com/lists/oss-security/2009/09/03/5, http://www.securityfocus.com/bid/36193], refmap: {bid: [36193], confirm: [http://silcnet.org/docs/changelog/SILC%20Toolkit%201.1.10, http://silcnet.org/general/news/news_toolkit.php], debian: [DSA-1879], mandriva: [MDVSA-2009:234, MDVSA-2009:235], mlist: [[oss-security] 20090831 CVE id request: silc-toolkit, [oss-security] 20090903 Re: CVE id request: silc-toolkit], secunia: [36614]}, statements: [{contributor: Tomas Hoger, lastmodified: 2009-09-11, organization: Red Hat, statement: Not vulnerable. This issue did not affect the versions of libsilc as shipped with Red Hat Enterprise Linux 4, or 5.}], summary: Multiple format string vulnerabilities in lib/silcclient/command.c in Secure Internet Live Conferencing (SILC) Toolkit before 1.1.10, and SILC Client 1.1.8 and earlier, allow remote attackers to execute arbitrary code via format string specifiers in a channel name, related to (1) silc_client_command_topic, (2) silc_client_command_kick, (3) silc_client_command_leave, and (4) silc_client_command_users., vulnerable_configuration: [{id: cpe:2.3:a:silcnet:silc_toolkit:1.1.8, title: cpe:2.3:a:silcnet:silc_toolkit:1.1.8}, {id: cpe:2.3:a:silcnet:silc_toolkit:1.1.6, title: cpe:2.3:a:silcnet:silc_toolkit:1.1.6}, {id: cpe:2.3:a:silcnet:silc_toolkit:1.1.3, title: cpe:2.3:a:silcnet:silc_toolkit:1.1.3}, {id: cpe:2.3:a:silcnet:silc_toolkit:1.1.4, title: cpe:2.3:a:silcnet:silc_toolkit:1.1.4}, {id: cpe:2.3:a:silcnet:silc_toolkit:1.1.5, title: cpe:2.3:a:silcnet:silc_toolkit:1.1.5}, {id: cpe:2.3:a:silcnet:silc_toolkit:1.1.1, title: cpe:2.3:a:silcnet:silc_toolkit:1.1.1}, {id: cpe:2.3:a:silcnet:silc_toolkit:1.1.2, title: cpe:2.3:a:silcnet:silc_toolkit:1.1.2}, {id: cpe:2.3:a:silcnet:silc_toolkit:1.1, title: cpe:2.3:a:silcnet:silc_toolkit:1.1}, {id: cpe:2.3:a:silcnet:silc_client:1.1.1, title: cpe:2.3:a:silcnet:silc_client:1.1.1}, {id: cpe:2.3:a:silcnet:silc_client:1.1.2, title: cpe:2.3:a:silcnet:silc_client:1.1.2}, {id: cpe:2.3:a:silcnet:silc_client:1.1.7, title: cpe:2.3:a:silcnet:silc_client:1.1.7}, {id: cpe:2.3:a:silcnet:silc_client:1.1.6, title: cpe:2.3:a:silcnet:silc_client:1.1.6}, {id: cpe:2.3:a:silcnet:silc_client:1.1.3, title: cpe:2.3:a:silcnet:silc_client:1.1.3}, {id: cpe:2.3:a:silcnet:silc_client:1.1.4, title: cpe:2.3:a:silcnet:silc_client:1.1.4}, {id: cpe:2.3:a:silcnet:silc_client:1.1.8, title: cpe:2.3:a:silcnet:silc_client:1.1.8}, {id: cpe:2.3:a:silcnet:silc_toolkit:1.1.9, title: cpe:2.3:a:silcnet:silc_toolkit:1.1.9}], vulnerable_configuration_cpe_2_2: [cpe:/a:silcnet:silc_toolkit:1.1.8, cpe:/a:silcnet:silc_toolkit:1.1.6, cpe:/a:silcnet:silc_toolkit:1.1.3, cpe:/a:silcnet:silc_toolkit:1.1.4, cpe:/a:silcnet:silc_toolkit:1.1.5, cpe:/a:silcnet:silc_toolkit:1.1.1, cpe:/a:silcnet:silc_toolkit:1.1.2, cpe:/a:silcnet:silc_toolkit:1.1, cpe:/a:silcnet:silc_client:1.1.1, cpe:/a:silcnet:silc_client:1.1.2, cpe:/a:silcnet:silc_client:1.1.7, cpe:/a:silcnet:silc_client:1.1.6, cpe:/a:silcnet:silc_client:1.1.3, cpe:/a:silcnet:silc_client:1.1.4, cpe:/a:silcnet:silc_client:1.1.8, cpe:/a:silcnet:silc_toolkit:1.1.9]}
