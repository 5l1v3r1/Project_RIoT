{Modified: 2009-08-19T01:28:43.877000, Published: 2009-08-06T12:30:00.390000, access: {authentication: NONE, complexity: LOW, vector: NETWORK}, capec: [{id: 135, name: Format String Injection, prerequisites: The target application must accept a strings as user input, fail to sanitize string formatting characters in the user input, and process this string using functions that interpret string formatting characters., related_weakness: [134, 20, 74, 133], solutions: Limit the usage of formatting string functions.
Strong input validation - All user-controllable input must be validated and filtered for illegal formatting characters., summary: An attacker includes formatting characters in a string input field on the target application. Most applications assume that users will provide static text and may respond unpredictably to the presence of formatting character. For example, in certain functions of the C programming languages such as printf, the formatting character %s will print the contents of a memory location expecting this location to identify a string and the formatting character %n prints the number of DWORD written in the memory. An attacker can use this to read or write to memory locations or files, or simply to manipulate the value of the resulting text in unexpected ways. Reading or writing memory may result in program crashes and writing memory could result in the execution of arbitrary code if the attacker can write to the program stack.}, {id: 67, name: String Format Overflow in syslog(), prerequisites: The format string argument of the Syslog function can be tainted with user supplied data., related_weakness: [120, 134, 74, 20, 680, 697], solutions: The following code shows a vulnerable usage of Syslog():, summary: This attack targets the format string vulnerabilities in the syslog() function. An attacker would typically inject malicious input in the format string parameter of the syslog function. This is a common problem, and many public vulnerabilities and associated exploits have been posted.}], cvss: 7.5, cvss-time: 2009-08-07T10:07:00, cwe: CWE-134, id: CVE-2009-2191, impact: {availability: PARTIAL, confidentiality: PARTIAL, integrity: PARTIAL}, last-modified: 2017-08-16T21:30:41.460000, nessus: [{NASL family: MacOS X Local Security Checks, NASL id: MACOSX_SECUPD2009-003.NASL, description: The remote host is running a version of Mac OS X 10.4 that does not have Security Update 2009-003 applied.

This security update contains fixes for the following products :

  - bzip2
  - ColorSync
  - ImageIO
  - Login Window, last seen: 2019-02-21, modified: 2018-07-14, plugin id: 40501, published: 2009-08-05, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=40501, title: Mac OS X Multiple Vulnerabilities (Security Update 2009-003)}, {NASL family: MacOS X Local Security Checks, NASL id: MACOSX_10_5_8.NASL, description: The remote host is running a version of Mac OS X 10.5.x that is prior to 10.5.8. 

Mac OS X 10.5.8 contains security fixes for the following products :

  - bzip2
  - CFNetwork
  - ColorSync
  - CoreTypes
  - Dock
  - Image RAW
  - ImageIO
  - Kernel
  - launchd
  - Login Window
  - MobileMe
  - Networking
  - XQuery, last seen: 2019-02-21, modified: 2018-07-16, plugin id: 40502, published: 2009-08-05, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=40502, title: Mac OS X 10.5.x < 10.5.8 Multiple Vulnerabilities}], ranking: [[{circl: 3}]], references: [http://lists.apple.com/archives/security-announce/2009/Aug/msg00001.html, http://support.apple.com/kb/HT3757, http://www.securityfocus.com/bid/35954, http://www.us-cert.gov/cas/techalerts/TA09-218A.html, http://www.vupen.com/english/advisories/2009/2172, https://exchange.xforce.ibmcloud.com/vulnerabilities/52428], refmap: {apple: [APPLE-SA-2009-08-05-1], bid: [35954], cert: [TA09-218A], confirm: [http://support.apple.com/kb/HT3757], osvdb: [56840], secunia: [36096], vupen: [ADV-2009-2172], xf: [macosx-loginwindow-format-string(52428)]}, summary: Format string vulnerability in Login Window in Apple Mac OS X 10.4.11 and 10.5 before 10.5.8 allows attackers to execute arbitrary code or cause a denial of service (application crash) via format string specifiers in an application name., vulnerable_configuration: [{id: cpe:2.3:o:apple:mac_os_x:10.4.11, title: Apple Mac OS X 10.4.11}, {id: cpe:2.3:o:apple:mac_os_x_server:10.4.11, title: Apple Mac OS X Server 10.4.11}, {id: cpe:2.3:o:apple:mac_os_x:10.5, title: Apple Mac OS X 10.5}, {id: cpe:2.3:a:apple:mac_os_x:10.5.6, title: cpe:2.3:a:apple:mac_os_x:10.5.6}, {id: cpe:2.3:o:apple:mac_os_x:10.5.7, title: Apple Mac OS X 10.5.7}, {id: cpe:2.3:o:apple:mac_os_x_server:10.5.5, title: Apple Mac OS X Server 10.5.5}, {id: cpe:2.3:o:apple:mac_os_x_server:10.5.6, title: Apple Mac OS X Server 10.5.6}, {id: cpe:2.3:o:apple:mac_os_x_server:10.5.7, title: Apple Mac OS X Server 10.5.7}], vulnerable_configuration_cpe_2_2: [cpe:/o:apple:mac_os_x:10.4.11, cpe:/o:apple:mac_os_x_server:10.4.11, cpe:/o:apple:mac_os_x:10.5, cpe:/a:apple:mac_os_x:10.5.6, cpe:/o:apple:mac_os_x:10.5.7, cpe:/o:apple:mac_os_x_server:10.5.5, cpe:/o:apple:mac_os_x_server:10.5.6, cpe:/o:apple:mac_os_x_server:10.5.7]}
