{Modified: 2018-10-16T21:31:24.603000, Published: 2018-10-16T21:31:24.587000, capec: [{id: 19, name: Embedding Scripts within Scripts, prerequisites: Target software must be able to execute scripts, and also allow attacker to write/upload script, related_weakness: [79, 276, 279, 284, 692, 697, 713, 71], solutions: Design: Use browser technologies that do not allow client side scripting.
Design: Utilize strict type, character, and encoding enforcement
Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.
Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.
Implementation: Perform input validation for all remote content.
Implementation: Perform output validation for all remote content.
Implementation: Disable scripting languages such as JavaScript in browser
Implementation: Session tokens for specific host
Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this.
Implementation: Privileges are constrained, if a script is loaded, ensure system runs in chroot jail or other limited authority mode, summary: An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute scripts. The attacker leverages this capability to execute scripts to execute his/her own script by embedding it within other scripts that the target software is likely to execute. The attacker must have the ability to inject script into script that is likely to be executed. If this is done, then the attacker can potentially launch a variety of probes and attacks against the web server's local environment, in many cases the so-called DMZ, back end resources the web server can communicate with, and other hosts.
With the proliferation of intermediaries, such as Web App Firewalls, network devices, and even printers having JVMs and Web servers, there are many locales where an attacker can inject malicious scripts. Since this attack pattern defines scripts within scripts, there are likely privileges to execute said attack on the host.
Of course, these attacks are not solely limited to the server side, client side scripts like Ajax and client side JavaScript can contain malicious scripts as well. In general all that is required is for there to be sufficient privileges to execute a script, but not protected against writing.}, {id: 474, name: Signature Spoofing by Key Theft, prerequisites: An authoritative or reputable signer is storing their private signature key with insufficient protection., related_weakness: [284, 693, 216], solutions: Ensure all services are patched and up to date, summary: An attacker obtains an authoritative or reputable signer's private signature key by theft and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker.}], cvss: 5.8, cwe: CWE-284, id: CVE-2018-3227, last-modified: 2019-03-06T08:45:27.653000, nessus: [{NASL family: Windows : Microsoft Bulletins, NASL id: SMB_NT_MS19_FEB_EXCHANGE.NASL, description: The Microsoft Exchange Server installed on the remote host is missing security updates. It is, therefore, affected by multiple vulnerabilities :

  - Multiple Vulnerabilites with the included libraries from     Oracle Outside. (CVE-2018-18223, CVE-2018-18224,     CVE-2018-3147, CVE-2018-3217, CVE-2018-3218, CVE-2018-3219,     CVE-2018-3220, CVE-2018-3221, CVE-2018-3222, CVE-2018-3223,     CVE-2018-3224, CVE-2018-3225, CVE-2018-3226, CVE-2018-3227,     CVE-2018-3228, CVE-2018-3229, CVE-2018-3230, CVE-2018-3231,     CVE-2018-3232, CVE-2018-3233, CVE-2018-3234, CVE-2018-3302)

  - An elevation of privilege vulnerability exists in     Exchange Web Services and Push Notifications. An     unauthenticated, remote attacker can exploit, via a     man-in-the-middle attack forwarding an authentication     request to the Domain Controller, to gain any users     privileges. (CVE-2019-0686)

  - An elevation of privilege vulnerability exists in     Exchange Web Services and Push Notifications. An     unauthenticated, remote attacker can exploit, via a     man-in-the-middle attack forwarding an authentication     request to the Domain Controller, to gain Domain     Administrator privileges. (CVE-2019-0724), last seen: 2019-02-21, modified: 2019-02-15, plugin id: 122129, published: 2019-02-12, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=122129, title: Security Updates for Exchange (February 2019)}], ranking: [[{circl: 3}]], references: [http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html, http://www.securityfocus.com/bid/105603], refmap: {bid: [105603], confirm: [http://www.oracle.com/technetwork/security-advisory/cpuoct2018-4428296.html]}, summary: Vulnerability in the Oracle Outside In Technology component of Oracle Fusion Middleware (subcomponent: Outside In Filters). The supported version that is affected are 8.5.3 and 8.5.4. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle Outside In Technology. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of Oracle Outside In Technology and unauthorized read access to a subset of Oracle Outside In Technology accessible data. Note: Outside In Technology is a suite of software development kits (SDKs). The protocol and CVSS score depend on the software that uses the Outside In Technology code. The CVSS score assumes that the software passes data received over a network directly to Outside In Technology code, but if data is not received over a network the CVSS score may be lower. CVSS 3.0 Base Score 7.1 (Confidentiality and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:H)., vulnerable_configuration: [{id: cpe:2.3:a:oracle:outside_in_technology:8.5.3, title: Oracle Outside In Technology 8.5.3}, {id: cpe:2.3:a:oracle:outside_in_technology:8.5.4, title: Oracle Outside In Technology 8.5.4}], vulnerable_configuration_cpe_2_2: [cpe:/a:oracle:outside_in_technology:8.5.3, cpe:/a:oracle:outside_in_technology:8.5.4]}
