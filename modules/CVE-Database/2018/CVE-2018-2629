{Modified: 2018-01-17T21:29:20.460000, Published: 2018-01-17T21:29:20.447000, capec: [{id: 19, name: Embedding Scripts within Scripts, prerequisites: Target software must be able to execute scripts, and also allow attacker to write/upload script, related_weakness: [79, 276, 279, 284, 692, 697, 713, 71], solutions: Design: Use browser technologies that do not allow client side scripting.
Design: Utilize strict type, character, and encoding enforcement
Design: Server side developers should not proxy content via XHR or other means, if a http proxy for remote content is setup on the server side, the client's browser has no way of discerning where the data is originating from.
Implementation: Ensure all content that is delivered to client is sanitized against an acceptable content specification.
Implementation: Perform input validation for all remote content.
Implementation: Perform output validation for all remote content.
Implementation: Disable scripting languages such as JavaScript in browser
Implementation: Session tokens for specific host
Implementation: Patching software. There are many attack vectors for XSS on the client side and the server side. Many vulnerabilities are fixed in service packs for browser, web servers, and plug in technologies, staying current on patch release that deal with XSS countermeasures mitigates this.
Implementation: Privileges are constrained, if a script is loaded, ensure system runs in chroot jail or other limited authority mode, summary: An attack of this type exploits a programs' vulnerabilities that are brought on by allowing remote hosts to execute scripts. The attacker leverages this capability to execute scripts to execute his/her own script by embedding it within other scripts that the target software is likely to execute. The attacker must have the ability to inject script into script that is likely to be executed. If this is done, then the attacker can potentially launch a variety of probes and attacks against the web server's local environment, in many cases the so-called DMZ, back end resources the web server can communicate with, and other hosts.
With the proliferation of intermediaries, such as Web App Firewalls, network devices, and even printers having JVMs and Web servers, there are many locales where an attacker can inject malicious scripts. Since this attack pattern defines scripts within scripts, there are likely privileges to execute said attack on the host.
Of course, these attacks are not solely limited to the server side, client side scripts like Ajax and client side JavaScript can contain malicious scripts as well. In general all that is required is for there to be sufficient privileges to execute a script, but not protected against writing.}, {id: 474, name: Signature Spoofing by Key Theft, prerequisites: An authoritative or reputable signer is storing their private signature key with insufficient protection., related_weakness: [284, 693, 216], solutions: Ensure all services are patched and up to date, summary: An attacker obtains an authoritative or reputable signer's private signature key by theft and then uses this key to forge signatures from the original signer to mislead a victim into performing actions that benefit the attacker.}], cvss: 2.6, cwe: CWE-284, id: CVE-2018-2629, last-modified: 2019-03-26T12:10:01.987000, nessus: [{NASL family: Amazon Linux Local Security Checks, NASL id: ALA_ALAS-2018-974.NASL, description: DerValue unbounded memory allocation :

It was discovered that the Libraries component of OpenJDK failed to sufficiently limit the amount of memory allocated when reading DER encoded input. A remote attacker could possibly use this flaw to make a Java application use an excessive amount of memory if it parsed attacker supplied DER encoded input. (CVE-2018-2603)

Unsynchronized access to encryption key data

It was discovered that multiple encryption key classes in the Libraries component of OpenJDK did not properly synchronize access to their internal data. This could possibly cause a multi-threaded Java application to apply weak encryption to data because of the use of a key that was zeroed out. (CVE-2018-2579)

Use of global credentials for HTTP/SPNEGO

The JGSS component of OpenJDK ignores the value of the javax.security.auth.useSubjectCredsOnly property when using HTTP/SPNEGO authentication and always uses global credentials. It was discovered that this could cause global credentials to be unexpectedly used by an untrusted Java application. (CVE-2018-2634)

Loading of classes from untrusted locations :

It was discovered that the I18n component of OpenJDK could use an untrusted search path when loading resource bundle classes. A local attacker could possibly use this flaw to execute arbitrary code as another local user by making their Java application load an attacker controlled class file. (CVE-2018-2602)

GTK library loading use-after-free :

Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: AWT). Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). (CVE-2018-2641)

LdapLoginModule insufficient username encoding in LDAP query :

It was discovered that the LDAP component of OpenJDK failed to properly encode special characters in user names when adding them to an LDAP search query. A remote attacker could possibly use this flaw to manipulate LDAP queries performed by the LdapLoginModule class.
(CVE-2018-2588)

SingleEntryRegistry incorrect setup of deserialization filter :

It was discovered that the JMX component of OpenJDK failed to properly set the deserialization filter for the SingleEntryRegistry in certain cases. A remote attacker could possibly use this flaw to bypass intended deserialization restrictions. (CVE-2018-2637)

Insufficient strength of key agreement :

It was discovered that the key agreement implementations in the JCE component of OpenJDK did not guarantee sufficient strength of used keys to adequately protect generated shared secret. This could make it easier to break data encryption by attacking key agreement rather than the encryption using the negotiated secret. (CVE-2018-2618)

GSS context use-after-free :

It was discovered that the JGSS component of OpenJDK failed to properly handle GSS context in the native GSS library wrapper in certain cases. A remote attacker could possibly make a Java application using JGSS to use a previously freed context.
(CVE-2018-2629)

LDAPCertStore insecure handling of LDAP referrals :

It was discovered that the LDAPCertStore class in the JNDI component of OpenJDK failed to securely handle LDAP referrals. An attacker could possibly use this flaw to make it fetch attacker controlled certificate data. (CVE-2018-2633)

DnsClient missing source port randomization :

It was discovered that the DNS client implementation in the JNDI component of OpenJDK did not use random source ports when sending out DNS queries. This could make it easier for a remote attacker to spoof responses to those queries. (CVE-2018-2599)

Unbounded memory allocation in BasicAttributes deserialization :

Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JNDI). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service.
(CVE-2018-2678)

ArrayBlockingQueue deserialization to an inconsistent state :

Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Libraries). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit.
Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service.
(CVE-2018-2663)

Unbounded memory allocation during deserialization :

Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: AWT). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded.
Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). (CVE-2018-2677), last seen: 2019-02-21, modified: 2018-04-18, plugin id: 108599, published: 2018-03-27, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108599, title: Amazon Linux AMI : java-1.7.0-openjdk (ALAS-2018-974)}, {NASL family: CentOS Local Security Checks, NASL id: CENTOS_RHSA-2018-0095.NASL, description: An update for java-1.8.0-openjdk is now available for Red Hat Enterprise Linux 6 and Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Important. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

The java-1.8.0-openjdk packages provide the OpenJDK 8 Java Runtime Environment and the OpenJDK 8 Java Software Development Kit.

Security Fix(es) :

* Multiple flaws were found in the Hotspot and AWT components of OpenJDK. An untrusted Java application or applet could use these flaws to bypass certain Java sandbox restrictions. (CVE-2018-2582, CVE-2018-2641)

* It was discovered that the LDAPCertStore class in the JNDI component of OpenJDK failed to securely handle LDAP referrals. An attacker could possibly use this flaw to make it fetch attacker controlled certificate data. (CVE-2018-2633)

* The JGSS component of OpenJDK ignores the value of the javax.security.auth.useSubjectCredsOnly property when using HTTP/SPNEGO authentication and always uses global credentials. It was discovered that this could cause global credentials to be unexpectedly used by an untrusted Java application. (CVE-2018-2634)

* It was discovered that the JMX component of OpenJDK failed to properly set the deserialization filter for the SingleEntryRegistry in certain cases. A remote attacker could possibly use this flaw to bypass intended deserialization restrictions. (CVE-2018-2637)

* It was discovered that the LDAP component of OpenJDK failed to properly encode special characters in user names when adding them to an LDAP search query. A remote attacker could possibly use this flaw to manipulate LDAP queries performed by the LdapLoginModule class.
(CVE-2018-2588)

* It was discovered that the DNS client implementation in the JNDI component of OpenJDK did not use random source ports when sending out DNS queries. This could make it easier for a remote attacker to spoof responses to those queries. (CVE-2018-2599)

* It was discovered that the I18n component of OpenJDK could use an untrusted search path when loading resource bundle classes. A local attacker could possibly use this flaw to execute arbitrary code as another local user by making their Java application load an attacker controlled class file. (CVE-2018-2602)

* It was discovered that the Libraries component of OpenJDK failed to sufficiently limit the amount of memory allocated when reading DER encoded input. A remote attacker could possibly use this flaw to make a Java application use an excessive amount of memory if it parsed attacker supplied DER encoded input. (CVE-2018-2603)

* It was discovered that the key agreement implementations in the JCE component of OpenJDK did not guarantee sufficient strength of used keys to adequately protect generated shared secret. This could make it easier to break data encryption by attacking key agreement rather than the encryption using the negotiated secret. (CVE-2018-2618)

* It was discovered that the JGSS component of OpenJDK failed to properly handle GSS context in the native GSS library wrapper in certain cases. A remote attacker could possibly make a Java application using JGSS to use a previously freed context.
(CVE-2018-2629)

* It was discovered that multiple classes in the Libraries, AWT, and JNDI components of OpenJDK did not sufficiently validate input when creating object instances from the serialized form. A specially crafted input could cause a Java application to create objects with an inconsistent state or use an excessive amount of memory when deserialized. (CVE-2018-2663, CVE-2018-2677, CVE-2018-2678)

* It was discovered that multiple encryption key classes in the Libraries component of OpenJDK did not properly synchronize access to their internal data. This could possibly cause a multi-threaded Java application to apply weak encryption to data because of the use of a key that was zeroed out. (CVE-2018-2579)

Note: If the web browser plug-in provided by the icedtea-web package was installed, the issues exposed via Java applets could have been exploited without user interaction if a user visited a malicious website., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 106172, published: 2018-01-19, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106172, title: CentOS 6 / 7 : java-1.8.0-openjdk (CESA-2018:0095)}, {NASL family: Oracle Linux Local Security Checks, NASL id: ORACLELINUX_ELSA-2018-0095.NASL, description: From Red Hat Security Advisory 2018:0095 :

An update for java-1.8.0-openjdk is now available for Red Hat Enterprise Linux 6 and Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Important. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

The java-1.8.0-openjdk packages provide the OpenJDK 8 Java Runtime Environment and the OpenJDK 8 Java Software Development Kit.

Security Fix(es) :

* Multiple flaws were found in the Hotspot and AWT components of OpenJDK. An untrusted Java application or applet could use these flaws to bypass certain Java sandbox restrictions. (CVE-2018-2582, CVE-2018-2641)

* It was discovered that the LDAPCertStore class in the JNDI component of OpenJDK failed to securely handle LDAP referrals. An attacker could possibly use this flaw to make it fetch attacker controlled certificate data. (CVE-2018-2633)

* The JGSS component of OpenJDK ignores the value of the javax.security.auth.useSubjectCredsOnly property when using HTTP/SPNEGO authentication and always uses global credentials. It was discovered that this could cause global credentials to be unexpectedly used by an untrusted Java application. (CVE-2018-2634)

* It was discovered that the JMX component of OpenJDK failed to properly set the deserialization filter for the SingleEntryRegistry in certain cases. A remote attacker could possibly use this flaw to bypass intended deserialization restrictions. (CVE-2018-2637)

* It was discovered that the LDAP component of OpenJDK failed to properly encode special characters in user names when adding them to an LDAP search query. A remote attacker could possibly use this flaw to manipulate LDAP queries performed by the LdapLoginModule class.
(CVE-2018-2588)

* It was discovered that the DNS client implementation in the JNDI component of OpenJDK did not use random source ports when sending out DNS queries. This could make it easier for a remote attacker to spoof responses to those queries. (CVE-2018-2599)

* It was discovered that the I18n component of OpenJDK could use an untrusted search path when loading resource bundle classes. A local attacker could possibly use this flaw to execute arbitrary code as another local user by making their Java application load an attacker controlled class file. (CVE-2018-2602)

* It was discovered that the Libraries component of OpenJDK failed to sufficiently limit the amount of memory allocated when reading DER encoded input. A remote attacker could possibly use this flaw to make a Java application use an excessive amount of memory if it parsed attacker supplied DER encoded input. (CVE-2018-2603)

* It was discovered that the key agreement implementations in the JCE component of OpenJDK did not guarantee sufficient strength of used keys to adequately protect generated shared secret. This could make it easier to break data encryption by attacking key agreement rather than the encryption using the negotiated secret. (CVE-2018-2618)

* It was discovered that the JGSS component of OpenJDK failed to properly handle GSS context in the native GSS library wrapper in certain cases. A remote attacker could possibly make a Java application using JGSS to use a previously freed context.
(CVE-2018-2629)

* It was discovered that multiple classes in the Libraries, AWT, and JNDI components of OpenJDK did not sufficiently validate input when creating object instances from the serialized form. A specially crafted input could cause a Java application to create objects with an inconsistent state or use an excessive amount of memory when deserialized. (CVE-2018-2663, CVE-2018-2677, CVE-2018-2678)

* It was discovered that multiple encryption key classes in the Libraries component of OpenJDK did not properly synchronize access to their internal data. This could possibly cause a multi-threaded Java application to apply weak encryption to data because of the use of a key that was zeroed out. (CVE-2018-2579)

Note: If the web browser plug-in provided by the icedtea-web package was installed, the issues exposed via Java applets could have been exploited without user interaction if a user visited a malicious website., last seen: 2019-02-21, modified: 2018-07-24, plugin id: 106119, published: 2018-01-18, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106119, title: Oracle Linux 6 / 7 : java-1.8.0-openjdk (ELSA-2018-0095)}, {NASL family: SuSE Local Security Checks, NASL id: SUSE_SU-2018-0663-1.NASL, description: This update for java-1_8_0-openjdk fixes the following issues:
Security issues fix in jdk8u161 (icedtea 3.7.0)(bsc#1076366) :

  - CVE-2018-2579: Improve key keying case

  - CVE-2018-2582: Better interface invocations

  - CVE-2018-2588: Improve LDAP logins

  - CVE-2018-2599: Improve reliability of DNS lookups

  - CVE-2018-2602: Improve usage messages

  - CVE-2018-2603: Improve PKCS usage

  - CVE-2018-2618: Stricter key generation

  - CVE-2018-2629: Improve GSS handling

  - CVE-2018-2633: Improve LDAP lookup robustness

  - CVE-2018-2634: Improve property negotiations

  - CVE-2018-2637: Improve JMX supportive features

  - CVE-2018-2641: Improve GTK initialization

  - CVE-2018-2663: More refactoring for deserialization     cases

  - CVE-2018-2677: More refactoring for client     deserialization cases

  - CVE-2018-2678: More refactoring for naming     deserialization cases

Note that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-12-01, plugin id: 108510, published: 2018-03-21, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108510, title: SUSE SLED12 / SLES12 Security Update : java-1_8_0-openjdk (SUSE-SU-2018:0663-1)}, {NASL family: Misc., NASL id: ORACLE_JAVA_CPU_JAN_2018_UNIX.NASL, description: The version of Oracle (formerly Sun) Java SE or Java for Business installed on the remote host is prior to 9 Update 4, 8 Update 161, 7 Update 171, or 6 Update 1888888881. It is, therefore, affected by multiple vulnerabilities related to the following components :

  - AWT
  - Deployment
  - Hotspot
  - I18n
  - Installer
  - JCE
  - JGSS
  - JMX
  - JNDI
  - JavaFX
  - LDAP
  - Libraries
  - Serialization, last seen: 2019-02-21, modified: 2018-11-15, plugin id: 106191, published: 2018-01-19, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106191, title: Oracle Java SE Multiple Vulnerabilities (January 2018 CPU) (Unix)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2018-0099.NASL, description: An update for java-1.8.0-oracle is now available for Oracle Java for Red Hat Enterprise Linux 6 and Oracle Java for Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Critical. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

Oracle Java SE version 8 includes the Oracle Java Runtime Environment and the Oracle Java Software Development Kit.

This update upgrades Oracle Java SE 8 to version 8 Update 161.

Security Fix(es) :

* This update fixes multiple vulnerabilities in the Oracle Java Runtime Environment and the Oracle Java Software Development Kit.
Further information about these flaws can be found on the Oracle Java SE Critical Patch Update Advisory page listed in the References section. (CVE-2018-2579, CVE-2018-2581, CVE-2018-2582, CVE-2018-2588, CVE-2018-2599, CVE-2018-2602, CVE-2018-2603, CVE-2018-2618, CVE-2018-2627, CVE-2018-2629, CVE-2018-2633, CVE-2018-2634, CVE-2018-2637, CVE-2018-2638, CVE-2018-2639, CVE-2018-2641, CVE-2018-2663, CVE-2018-2677, CVE-2018-2678), last seen: 2019-02-21, modified: 2018-11-10, plugin id: 106182, published: 2018-01-19, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106182, title: RHEL 6 / 7 : java-1.8.0-oracle (RHSA-2018:0099)}, {NASL family: Ubuntu Local Security Checks, NASL id: UBUNTU_USN-3613-1.NASL, description: It was discovered that a race condition existed in the cryptography implementation in OpenJDK. An attacker could possibly use this to expose sensitive information. (CVE-2018-2579)

It was discovered that the Hotspot component of OpenJDK did not properly validate uses of the invokeinterface JVM instruction. An attacker could possibly use this to access unauthorized resources.
(CVE-2018-2582)

It was discovered that the LDAP implementation in OpenJDK did not properly encode login names. A remote attacker could possibly use this to expose sensitive information. (CVE-2018-2588)

It was discovered that the DNS client implementation in OpenJDK did not properly randomize source ports. A remote attacker could use this to spoof responses to DNS queries made by Java applications.
(CVE-2018-2599)

It was discovered that the Internationalization component of OpenJDK did not restrict search paths when loading resource bundle classes. A local attacker could use this to trick a user into running malicious code. (CVE-2018-2602)

It was discovered that OpenJDK did not properly restrict memory allocations when parsing DER input. A remote attacker could possibly use this to cause a denial of service. (CVE-2018-2603)

It was discovered that the Java Cryptography Extension (JCE) implementation in OpenJDK in some situations did guarantee sufficient strength of keys during key agreement. An attacker could use this to expose sensitive information. (CVE-2018-2618)

It was discovered that the Java GSS implementation in OpenJDK in some situations did not properly handle GSS contexts in the native GSS library. An attacker could possibly use this to access unauthorized resources. (CVE-2018-2629)

It was discovered that the LDAP implementation in OpenJDK did not properly handle LDAP referrals in some situations. An attacker could possibly use this to expose sensitive information or gain unauthorized privileges. (CVE-2018-2633)

It was discovered that the Java GSS implementation in OpenJDK in some situations did not properly apply subject credentials. An attacker could possibly use this to expose sensitive information or gain access to unauthorized resources. (CVE-2018-2634)

It was discovered that the Java Management Extensions (JMX) component of OpenJDK did not properly apply deserialization filters in some situations. An attacker could use this to bypass deserialization restrictions. (CVE-2018-2637)

It was discovered that a use-after-free vulnerability existed in the AWT component of OpenJDK when loading the GTK library. An attacker could possibly use this to execute arbitrary code and escape Java sandbox restrictions. (CVE-2018-2641)

It was discovered that in some situations OpenJDK did not properly validate objects when performing deserialization. An attacker could use this to cause a denial of service (application crash or excessive memory consumption). (CVE-2018-2663)

It was discovered that the AWT component of OpenJDK did not properly restrict the amount of memory allocated when deserializing some objects. An attacker could use this to cause a denial of service (excessive memory consumption). (CVE-2018-2677)

It was discovered that the JNDI component of OpenJDK did not properly restrict the amount of memory allocated when deserializing objects in some situations. An attacker could use this to cause a denial of service (excessive memory consumption). (CVE-2018-2678).

Note that Tenable Network Security has extracted the preceding description block directly from the Ubuntu security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-12-01, plugin id: 108793, published: 2018-04-03, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108793, title: Ubuntu 16.04 LTS / 17.10 : openjdk-8 vulnerabilities (USN-3613-1)}, {NASL family: Huawei Local Security Checks, NASL id: EULEROS_SA-2018-1059.NASL, description: According to the versions of the java-1.7.0-openjdk packages installed, the EulerOS installation on the remote host is affected by the following vulnerabilities :

  - A flaw was found in the AWT component of OpenJDK. An     untrusted Java application or applet could use this     flaw to bypass certain Java sandbox restrictions.
    (CVE-2018-2641)

  - It was discovered that the LDAPCertStore class in the     JNDI component of OpenJDK failed to securely handle     LDAP referrals. An attacker could possibly use this     flaw to make it fetch attacker controlled certificate     data. (CVE-2018-2633)

  - The JGSS component of OpenJDK ignores the value of the     javax.security.auth.useSubjectCredsOnly property when     using HTTP/SPNEGO authentication and always uses global     credentials. It was discovered that this could cause     global credentials to be unexpectedly used by an     untrusted Java application. (CVE-2018-2634)

  - It was discovered that the JMX component of OpenJDK     failed to properly set the deserialization filter for     the SingleEntryRegistry in certain cases. A remote     attacker could possibly use this flaw to bypass     intended deserialization restrictions. (CVE-2018-2637)

  - It was discovered that the LDAP component of OpenJDK     failed to properly encode special characters in user     names when adding them to an LDAP search query. A     remote attacker could possibly use this flaw to     manipulate LDAP queries performed by the     LdapLoginModule class. (CVE-2018-2588)

  - It was discovered that the DNS client implementation in     the JNDI component of OpenJDK did not use random source     ports when sending out DNS queries. This could make it     easier for a remote attacker to spoof responses to     those queries. (CVE-2018-2599)

  - It was discovered that the I18n component of OpenJDK     could use an untrusted search path when loading     resource bundle classes. A local attacker could     possibly use this flaw to execute arbitrary code as     another local user by making their Java application     load an attacker controlled class file. (CVE-2018-2602)

  - It was discovered that the Libraries component of     OpenJDK failed to sufficiently limit the amount of     memory allocated when reading DER encoded input. A     remote attacker could possibly use this flaw to make a     Java application use an excessive amount of memory if     it parsed attacker supplied DER encoded input.
    (CVE-2018-2603)

  - It was discovered that the key agreement     implementations in the JCE component of OpenJDK did not     guarantee sufficient strength of used keys to     adequately protect generated shared secret. This could     make it easier to break data encryption by attacking     key agreement rather than the encryption using the     negotiated secret. (CVE-2018-2618)

  - It was discovered that the JGSS component of OpenJDK     failed to properly handle GSS context in the native GSS     library wrapper in certain cases. A remote attacker     could possibly make a Java application using JGSS to     use a previously freed context. (CVE-2018-2629)

  - It was discovered that multiple classes in the     Libraries, AWT, and JNDI components of OpenJDK did not     sufficiently validate input when creating object     instances from the serialized form. A specially-crafted     input could cause a Java application to create objects     with an inconsistent state or use an excessive amount     of memory when deserialized. (CVE-2018-2663,     CVE-2018-2677, CVE-2018-2678)

  - It was discovered that multiple encryption key classes     in the Libraries component of OpenJDK did not properly     synchronize access to their internal data. This could     possibly cause a multi-threaded Java application to     apply weak encryption to data because of the use of a     key that was zeroed out. (CVE-2018-2579)

Note that Tenable Network Security has extracted the preceding description block directly from the EulerOS security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2019-01-29, plugin id: 108463, published: 2018-03-20, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108463, title: EulerOS 2.0 SP2 : java-1.7.0-openjdk (EulerOS-SA-2018-1059)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2018-1812.NASL, description: An update for java-1.7.1-ibm is now available for Red Hat Satellite 5.6 and Red Hat Satellite 5.7.

Red Hat Product Security has rated this update as having a security impact of Important. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

IBM Java SE version 7 Release 1 includes the IBM Java Runtime Environment and the IBM Java Software Development Kit.

This update upgrades IBM Java SE 7 to version 7R1 SR4-FP20.

Security Fix(es) :

* OpenJDK: LDAPCertStore insecure handling of LDAP referrals (JNDI, 8186606) (CVE-2018-2633)

* OpenJDK: use of global credentials for HTTP/SPNEGO (JGSS, 8186600) (CVE-2018-2634)

* OpenJDK: SingleEntryRegistry incorrect setup of deserialization filter (JMX, 8186998) (CVE-2018-2637)

* OpenJDK: GTK library loading use-after-free (AWT, 8185325) (CVE-2018-2641)

* Oracle JDK: unspecified vulnerability fixed in 7u171, 8u161, and 9.0.4 (JavaFX) (CVE-2018-2581)

* OpenJDK: LdapLoginModule insufficient username encoding in LDAP query (LDAP, 8178449) (CVE-2018-2588)

* OpenJDK: DnsClient missing source port randomization (JNDI, 8182125) (CVE-2018-2599)

* OpenJDK: loading of classes from untrusted locations (I18n, 8182601) (CVE-2018-2602)

* OpenJDK: DerValue unbounded memory allocation (Libraries, 8182387) (CVE-2018-2603)

* OpenJDK: insufficient strength of key agreement (JCE, 8185292) (CVE-2018-2618)

* OpenJDK: GSS context use-after-free (JGSS, 8186212) (CVE-2018-2629)

* Oracle JDK: unspecified vulnerability fixed in 6u181 and 7u171 (Serialization) (CVE-2018-2657)

* OpenJDK: ArrayBlockingQueue deserialization to an inconsistent state (Libraries, 8189284) (CVE-2018-2663)

* OpenJDK: unbounded memory allocation during deserialization (AWT, 8190289) (CVE-2018-2677)

* OpenJDK: unbounded memory allocation in BasicAttributes deserialization (JNDI, 8191142) (CVE-2018-2678)

* OpenJDK: unsynchronized access to encryption key data (Libraries, 8172525) (CVE-2018-2579)

For more details about the security issue(s), including the impact, a CVSS score, and other related information, refer to the CVE page(s) listed in the References section., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 110405, published: 2018-06-08, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=110405, title: RHEL 6 : java-1.7.1-ibm (RHSA-2018:1812)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2018-0349.NASL, description: An update for java-1.7.0-openjdk is now available for Red Hat Enterprise Linux 6 and Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Important. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

The java-1.7.0-openjdk packages provide the OpenJDK 7 Java Runtime Environment and the OpenJDK 7 Java Software Development Kit.

Security Fix(es) :

* A flaw was found in the AWT component of OpenJDK. An untrusted Java application or applet could use this flaw to bypass certain Java sandbox restrictions. (CVE-2018-2641)

* It was discovered that the LDAPCertStore class in the JNDI component of OpenJDK failed to securely handle LDAP referrals. An attacker could possibly use this flaw to make it fetch attacker controlled certificate data. (CVE-2018-2633)

* The JGSS component of OpenJDK ignores the value of the javax.security.auth.useSubjectCredsOnly property when using HTTP/SPNEGO authentication and always uses global credentials. It was discovered that this could cause global credentials to be unexpectedly used by an untrusted Java application. (CVE-2018-2634)

* It was discovered that the JMX component of OpenJDK failed to properly set the deserialization filter for the SingleEntryRegistry in certain cases. A remote attacker could possibly use this flaw to bypass intended deserialization restrictions. (CVE-2018-2637)

* It was discovered that the LDAP component of OpenJDK failed to properly encode special characters in user names when adding them to an LDAP search query. A remote attacker could possibly use this flaw to manipulate LDAP queries performed by the LdapLoginModule class.
(CVE-2018-2588)

* It was discovered that the DNS client implementation in the JNDI component of OpenJDK did not use random source ports when sending out DNS queries. This could make it easier for a remote attacker to spoof responses to those queries. (CVE-2018-2599)

* It was discovered that the I18n component of OpenJDK could use an untrusted search path when loading resource bundle classes. A local attacker could possibly use this flaw to execute arbitrary code as another local user by making their Java application load an attacker controlled class file. (CVE-2018-2602)

* It was discovered that the Libraries component of OpenJDK failed to sufficiently limit the amount of memory allocated when reading DER encoded input. A remote attacker could possibly use this flaw to make a Java application use an excessive amount of memory if it parsed attacker supplied DER encoded input. (CVE-2018-2603)

* It was discovered that the key agreement implementations in the JCE component of OpenJDK did not guarantee sufficient strength of used keys to adequately protect generated shared secret. This could make it easier to break data encryption by attacking key agreement rather than the encryption using the negotiated secret. (CVE-2018-2618)

* It was discovered that the JGSS component of OpenJDK failed to properly handle GSS context in the native GSS library wrapper in certain cases. A remote attacker could possibly make a Java application using JGSS to use a previously freed context.
(CVE-2018-2629)

* It was discovered that multiple classes in the Libraries, AWT, and JNDI components of OpenJDK did not sufficiently validate input when creating object instances from the serialized form. A specially crafted input could cause a Java application to create objects with an inconsistent state or use an excessive amount of memory when deserialized. (CVE-2018-2663, CVE-2018-2677, CVE-2018-2678)

* It was discovered that multiple encryption key classes in the Libraries component of OpenJDK did not properly synchronize access to their internal data. This could possibly cause a multi-threaded Java application to apply weak encryption to data because of the use of a key that was zeroed out. (CVE-2018-2579), last seen: 2019-02-21, modified: 2018-11-10, plugin id: 107016, published: 2018-02-27, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=107016, title: RHEL 6 / 7 : java-1.7.0-openjdk (RHSA-2018:0349)}, {NASL family: CentOS Local Security Checks, NASL id: CENTOS_RHSA-2018-0349.NASL, description: An update for java-1.7.0-openjdk is now available for Red Hat Enterprise Linux 6 and Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Important. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

The java-1.7.0-openjdk packages provide the OpenJDK 7 Java Runtime Environment and the OpenJDK 7 Java Software Development Kit.

Security Fix(es) :

* A flaw was found in the AWT component of OpenJDK. An untrusted Java application or applet could use this flaw to bypass certain Java sandbox restrictions. (CVE-2018-2641)

* It was discovered that the LDAPCertStore class in the JNDI component of OpenJDK failed to securely handle LDAP referrals. An attacker could possibly use this flaw to make it fetch attacker controlled certificate data. (CVE-2018-2633)

* The JGSS component of OpenJDK ignores the value of the javax.security.auth.useSubjectCredsOnly property when using HTTP/SPNEGO authentication and always uses global credentials. It was discovered that this could cause global credentials to be unexpectedly used by an untrusted Java application. (CVE-2018-2634)

* It was discovered that the JMX component of OpenJDK failed to properly set the deserialization filter for the SingleEntryRegistry in certain cases. A remote attacker could possibly use this flaw to bypass intended deserialization restrictions. (CVE-2018-2637)

* It was discovered that the LDAP component of OpenJDK failed to properly encode special characters in user names when adding them to an LDAP search query. A remote attacker could possibly use this flaw to manipulate LDAP queries performed by the LdapLoginModule class.
(CVE-2018-2588)

* It was discovered that the DNS client implementation in the JNDI component of OpenJDK did not use random source ports when sending out DNS queries. This could make it easier for a remote attacker to spoof responses to those queries. (CVE-2018-2599)

* It was discovered that the I18n component of OpenJDK could use an untrusted search path when loading resource bundle classes. A local attacker could possibly use this flaw to execute arbitrary code as another local user by making their Java application load an attacker controlled class file. (CVE-2018-2602)

* It was discovered that the Libraries component of OpenJDK failed to sufficiently limit the amount of memory allocated when reading DER encoded input. A remote attacker could possibly use this flaw to make a Java application use an excessive amount of memory if it parsed attacker supplied DER encoded input. (CVE-2018-2603)

* It was discovered that the key agreement implementations in the JCE component of OpenJDK did not guarantee sufficient strength of used keys to adequately protect generated shared secret. This could make it easier to break data encryption by attacking key agreement rather than the encryption using the negotiated secret. (CVE-2018-2618)

* It was discovered that the JGSS component of OpenJDK failed to properly handle GSS context in the native GSS library wrapper in certain cases. A remote attacker could possibly make a Java application using JGSS to use a previously freed context.
(CVE-2018-2629)

* It was discovered that multiple classes in the Libraries, AWT, and JNDI components of OpenJDK did not sufficiently validate input when creating object instances from the serialized form. A specially crafted input could cause a Java application to create objects with an inconsistent state or use an excessive amount of memory when deserialized. (CVE-2018-2663, CVE-2018-2677, CVE-2018-2678)

* It was discovered that multiple encryption key classes in the Libraries component of OpenJDK did not properly synchronize access to their internal data. This could possibly cause a multi-threaded Java application to apply weak encryption to data because of the use of a key that was zeroed out. (CVE-2018-2579), last seen: 2019-02-21, modified: 2018-11-10, plugin id: 107074, published: 2018-03-01, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=107074, title: CentOS 6 / 7 : java-1.7.0-openjdk (CESA-2018:0349)}, {NASL family: Windows, NASL id: ORACLE_JROCKIT_CPU_JAN_2018.NASL, description: The version of Oracle JRockit installed on the remote Windows host is R28.3.16. It is, therefore, affected by multiple vulnerabilities. See advisory for details., last seen: 2019-02-21, modified: 2018-11-15, plugin id: 106139, published: 2018-01-18, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106139, title: Oracle JRockit R28.3.16 Multiple Vulnerabilities (January 2018 CPU)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2018-1463.NASL, description: An update for java-1.8.0-ibm is now available for Red Hat Satellite 5.8.

Red Hat Product Security has rated this update as having a security impact of Moderate. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

IBM Java SE version 8 includes the IBM Java Runtime Environment and the IBM Java Software Development Kit.

This update upgrades IBM Java SE 8 to version 8 SR5-FP10.

Security Fix(es) :

* IBM JDK: J9 JVM allows untrusted code running under a security manager to elevate its privileges (CVE-2018-1417)

* Oracle JDK: unspecified vulnerability fixed in 8u161 and 9.0.4 (Deployment) (CVE-2018-2638)

* Oracle JDK: unspecified vulnerability fixed in 8u161 and 9.0.4 (Deployment) (CVE-2018-2639)

* OpenJDK: insufficient validation of the invokeinterface instruction (Hotspot, 8174962) (CVE-2018-2582)

* Oracle JDK: unspecified vulnerability fixed in 8u161 and 9.0.4 (Installer) (CVE-2018-2627)

* OpenJDK: LDAPCertStore insecure handling of LDAP referrals (JNDI, 8186606) (CVE-2018-2633)

* OpenJDK: use of global credentials for HTTP/SPNEGO (JGSS, 8186600) (CVE-2018-2634)

* OpenJDK: SingleEntryRegistry incorrect setup of deserialization filter (JMX, 8186998) (CVE-2018-2637)

* OpenJDK: GTK library loading use-after-free (AWT, 8185325) (CVE-2018-2641)

* Oracle JDK: unspecified vulnerability fixed in 7u171, 8u161, and 9.0.4 (JavaFX) (CVE-2018-2581)

* OpenJDK: LdapLoginModule insufficient username encoding in LDAP query (LDAP, 8178449) (CVE-2018-2588)

* OpenJDK: DnsClient missing source port randomization (JNDI, 8182125) (CVE-2018-2599)

* OpenJDK: loading of classes from untrusted locations (I18n, 8182601) (CVE-2018-2602)

* OpenJDK: DerValue unbounded memory allocation (Libraries, 8182387) (CVE-2018-2603)

* OpenJDK: insufficient strength of key agreement (JCE, 8185292) (CVE-2018-2618)

* OpenJDK: GSS context use-after-free (JGSS, 8186212) (CVE-2018-2629)

* Oracle JDK: unspecified vulnerability fixed in 6u181 and 7u171 (Serialization) (CVE-2018-2657)

* OpenJDK: ArrayBlockingQueue deserialization to an inconsistent state (Libraries, 8189284) (CVE-2018-2663)

* OpenJDK: unbounded memory allocation during deserialization (AWT, 8190289) (CVE-2018-2677)

* OpenJDK: unbounded memory allocation in BasicAttributes deserialization (JNDI, 8191142) (CVE-2018-2678)

* OpenJDK: unsynchronized access to encryption key data (Libraries, 8172525) (CVE-2018-2579)

For more details about the security issue(s), including the impact, a CVSS score, and other related information, refer to the CVE page(s) listed in the References section., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 109908, published: 2018-05-18, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=109908, title: RHEL 6 : java-1.8.0-ibm (RHSA-2018:1463)}, {NASL family: Scientific Linux Local Security Checks, NASL id: SL_20180226_JAVA_1_7_0_OPENJDK_ON_SL6_X.NASL, description: Security Fix(es) :

  - A flaw was found in the AWT component of OpenJDK. An     untrusted Java application or applet could use this flaw     to bypass certain Java sandbox restrictions.
    (CVE-2018-2641)

  - It was discovered that the LDAPCertStore class in the     JNDI component of OpenJDK failed to securely handle LDAP     referrals. An attacker could possibly use this flaw to     make it fetch attacker controlled certificate data.
    (CVE-2018-2633)

  - The JGSS component of OpenJDK ignores the value of the     javax.security.auth.useSubjectCredsOnly property when     using HTTP/SPNEGO authentication and always uses global     credentials. It was discovered that this could cause     global credentials to be unexpectedly used by an     untrusted Java application. (CVE-2018-2634)

  - It was discovered that the JMX component of OpenJDK     failed to properly set the deserialization filter for     the SingleEntryRegistry in certain cases. A remote     attacker could possibly use this flaw to bypass intended     deserialization restrictions. (CVE-2018-2637)

  - It was discovered that the LDAP component of OpenJDK     failed to properly encode special characters in user     names when adding them to an LDAP search query. A remote     attacker could possibly use this flaw to manipulate LDAP     queries performed by the LdapLoginModule class.
    (CVE-2018-2588)

  - It was discovered that the DNS client implementation in     the JNDI component of OpenJDK did not use random source     ports when sending out DNS queries. This could make it     easier for a remote attacker to spoof responses to those     queries. (CVE-2018-2599)

  - It was discovered that the I18n component of OpenJDK     could use an untrusted search path when loading resource     bundle classes. A local attacker could possibly use this     flaw to execute arbitrary code as another local user by     making their Java application load an attacker     controlled class file. (CVE-2018-2602)

  - It was discovered that the Libraries component of     OpenJDK failed to sufficiently limit the amount of     memory allocated when reading DER encoded input. A     remote attacker could possibly use this flaw to make a     Java application use an excessive amount of memory if it     parsed attacker supplied DER encoded input.
    (CVE-2018-2603)

  - It was discovered that the key agreement implementations     in the JCE component of OpenJDK did not guarantee     sufficient strength of used keys to adequately protect     generated shared secret. This could make it easier to     break data encryption by attacking key agreement rather     than the encryption using the negotiated secret.
    (CVE-2018-2618)

  - It was discovered that the JGSS component of OpenJDK     failed to properly handle GSS context in the native GSS     library wrapper in certain cases. A remote attacker     could possibly make a Java application using JGSS to use     a previously freed context. (CVE-2018-2629)

  - It was discovered that multiple classes in the     Libraries, AWT, and JNDI components of OpenJDK did not     sufficiently validate input when creating object     instances from the serialized form. A specially crafted     input could cause a Java application to create objects     with an inconsistent state or use an excessive amount of     memory when deserialized. (CVE-2018-2663, CVE-2018-2677,     CVE-2018-2678)

  - It was discovered that multiple encryption key classes     in the Libraries component of OpenJDK did not properly     synchronize access to their internal data. This could     possibly cause a multi-threaded Java application to     apply weak encryption to data because of the use of a     key that was zeroed out. (CVE-2018-2579), last seen: 2019-02-21, modified: 2018-12-27, plugin id: 107021, published: 2018-02-27, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=107021, title: Scientific Linux Security Update : java-1.7.0-openjdk on SL6.x, SL7.x i386/x86_64}, {NASL family: Amazon Linux Local Security Checks, NASL id: ALA_ALAS-2018-949.NASL, description: SingleEntryRegistry incorrect setup of deserialization filter (JMX, 8186998)

It was discovered that the JMX component of OpenJDK failed to properly set the deserialization filter for the SingleEntryRegistry in certain cases. A remote attacker could possibly use this flaw to bypass intended deserialization restrictions. (CVE-2018-2637)

Loading of classes from untrusted locations (I18n, 8182601)

It was discovered that the I18n component of OpenJDK could use an untrusted search path when loading resource bundle classes. A local attacker could possibly use this flaw to execute arbitrary code as another local user by making their Java application load an attacker controlled class file. (CVE-2018-2602)

LdapLoginModule insufficient username encoding in LDAP query (LDAP, 8178449)

It was discovered that the LDAP component of OpenJDK failed to properly encode special characters in user names when adding them to an LDAP search query. A remote attacker could possibly use this flaw to manipulate LDAP queries performed by the LdapLoginModule class.
(CVE-2018-2588)

ArrayBlockingQueue deserialization to an inconsistent state (Libraries, 8189284)

Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Libraries). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit.
Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service.
CVSS 3.0 Base Score 4.3 (Availability impacts). CVSS Vector:
(CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L). (CVE-2018-2663)

Insufficient validation of the invokeinterface instruction (Hotspot, 8174962)

Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Hotspot). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker.
Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service.
CVSS 3.0 Base Score 6.5 (Integrity impacts). CVSS Vector:
(CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N). (CVE-2018-2582)

GTK library loading use-after-free (AWT, 8185325)

Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: AWT). Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 6.1 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:H/A:N).
(CVE-2018-2641)

LDAPCertStore insecure handling of LDAP referrals (JNDI, 8186606)

It was discovered that the LDAPCertStore class in the JNDI component of OpenJDK failed to securely handle LDAP referrals. An attacker could possibly use this flaw to make it fetch attacker controlled certificate data. (CVE-2018-2633)

Insufficient strength of key agreement (JCE, 8185292)

It was discovered that the key agreement implementations in the JCE component of OpenJDK did not guarantee sufficient strength of used keys to adequately protect generated shared secret. This could make it easier to break data encryption by attacking key agreement rather than the encryption using the negotiated secret. (CVE-2018-2618)

Unsynchronized access to encryption key data (Libraries, 8172525)

It was discovered that multiple encryption key classes in the Libraries component of OpenJDK did not properly synchronize access to their internal data. This could possibly cause a multi-threaded Java application to apply weak encryption to data because of the use of a key that was zeroed out. (CVE-2018-2579)

Unbounded memory allocation during deserialization (AWT, 8190289)

Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: AWT). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded.
Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.3 (Availability impacts).
CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L).
(CVE-2018-2677)

DerValue unbounded memory allocation (Libraries, 8182387)

It was discovered that the Libraries component of OpenJDK failed to sufficiently limit the amount of memory allocated when reading DER encoded input. A remote attacker could possibly use this flaw to make a Java application use an excessive amount of memory if it parsed attacker supplied DER encoded input. (CVE-2018-2603)

Unbounded memory allocation in BasicAttributes deserialization (JNDI, 8191142)

Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JNDI). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service.
CVSS 3.0 Base Score 4.3 (Availability impacts). CVSS Vector:
(CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L). (CVE-2018-2678)

Use of global credentials for HTTP/SPNEGO (JGSS, 8186600)

The JGSS component of OpenJDK ignores the value of the javax.security.auth.useSubjectCredsOnly property when using HTTP/SPNEGO authentication and always uses global credentials. It was discovered that this could cause global credentials to be unexpectedly used by an untrusted Java application. (CVE-2018-2634)

GSS context use-after-free (JGSS, 8186212)

It was discovered that the JGSS component of OpenJDK failed to properly handle GSS context in the native GSS library wrapper in certain cases. A remote attacker could possibly make a Java application using JGSS to use a previously freed context.
(CVE-2018-2629)

DnsClient missing source port randomization (JNDI, 8182125)

It was discovered that the DNS client implementation in the JNDI component of OpenJDK did not use random source ports when sending out DNS queries. This could make it easier for a remote attacker to spoof responses to those queries. (CVE-2018-2599), last seen: 2019-02-21, modified: 2018-04-18, plugin id: 106694, published: 2018-02-09, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106694, title: Amazon Linux AMI : java-1.8.0-openjdk (ALAS-2018-949)}, {NASL family: Amazon Linux Local Security Checks, NASL id: AL2_ALAS-2018-949.NASL, description: SingleEntryRegistry incorrect setup of deserialization filter (JMX, 8186998)

It was discovered that the JMX component of OpenJDK failed to properly set the deserialization filter for the SingleEntryRegistry in certain cases. A remote attacker could possibly use this flaw to bypass intended deserialization restrictions. (CVE-2018-2637)

Loading of classes from untrusted locations (I18n, 8182601)

It was discovered that the I18n component of OpenJDK could use an untrusted search path when loading resource bundle classes. A local attacker could possibly use this flaw to execute arbitrary code as another local user by making their Java application load an attacker controlled class file. (CVE-2018-2602)

LdapLoginModule insufficient username encoding in LDAP query (LDAP, 8178449)

It was discovered that the LDAP component of OpenJDK failed to properly encode special characters in user names when adding them to an LDAP search query. A remote attacker could possibly use this flaw to manipulate LDAP queries performed by the LdapLoginModule class.
(CVE-2018-2588)

ArrayBlockingQueue deserialization to an inconsistent state (Libraries, 8189284)

Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: Libraries). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit.
Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service.
CVSS 3.0 Base Score 4.3 (Availability impacts). CVSS Vector:
(CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L). (CVE-2018-2663)

Insufficient validation of the invokeinterface instruction (Hotspot, 8174962)

Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: Hotspot). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker.
Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service.
CVSS 3.0 Base Score 6.5 (Integrity impacts). CVSS Vector:
(CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:H/A:N). (CVE-2018-2582)

GTK library loading use-after-free (AWT, 8185325)

Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: AWT). Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker and while the vulnerability is in Java SE, Java SE Embedded, attacks may significantly impact additional products. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded accessible data. Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 6.1 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:C/C:N/I:H/A:N).
(CVE-2018-2641)

LDAPCertStore insecure handling of LDAP referrals (JNDI, 8186606)

It was discovered that the LDAPCertStore class in the JNDI component of OpenJDK failed to securely handle LDAP referrals. An attacker could possibly use this flaw to make it fetch attacker controlled certificate data. (CVE-2018-2633)

Insufficient strength of key agreement (JCE, 8185292)

It was discovered that the key agreement implementations in the JCE component of OpenJDK did not guarantee sufficient strength of used keys to adequately protect generated shared secret. This could make it easier to break data encryption by attacking key agreement rather than the encryption using the negotiated secret. (CVE-2018-2618)

Unsynchronized access to encryption key data (Libraries, 8172525)

It was discovered that multiple encryption key classes in the Libraries component of OpenJDK did not properly synchronize access to their internal data. This could possibly cause a multi-threaded Java application to apply weak encryption to data because of the use of a key that was zeroed out. (CVE-2018-2579)

Unbounded memory allocation during deserialization (AWT, 8190289)

Vulnerability in the Java SE, Java SE Embedded component of Oracle Java SE (subcomponent: AWT). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded.
Note: This vulnerability applies to Java deployments, typically in clients running sandboxed Java Web Start applications or sandboxed Java applets, that load and run untrusted code (e.g., code that comes from the internet) and rely on the Java sandbox for security. This vulnerability does not apply to Java deployments, typically in servers, that load and run only trusted code (e.g., code installed by an administrator). CVSS 3.0 Base Score 4.3 (Availability impacts).
CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L).
(CVE-2018-2677)

DerValue unbounded memory allocation (Libraries, 8182387)

It was discovered that the Libraries component of OpenJDK failed to sufficiently limit the amount of memory allocated when reading DER encoded input. A remote attacker could possibly use this flaw to make a Java application use an excessive amount of memory if it parsed attacker supplied DER encoded input. (CVE-2018-2603)

Unbounded memory allocation in BasicAttributes deserialization (JNDI, 8191142)

Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JNDI). Easily exploitable vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized ability to cause a partial denial of service (partial DOS) of Java SE, Java SE Embedded, JRockit. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service.
CVSS 3.0 Base Score 4.3 (Availability impacts). CVSS Vector:
(CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:N/I:N/A:L). (CVE-2018-2678)

Use of global credentials for HTTP/SPNEGO (JGSS, 8186600)

The JGSS component of OpenJDK ignores the value of the javax.security.auth.useSubjectCredsOnly property when using HTTP/SPNEGO authentication and always uses global credentials. It was discovered that this could cause global credentials to be unexpectedly used by an untrusted Java application. (CVE-2018-2634)

GSS context use-after-free (JGSS, 8186212)

It was discovered that the JGSS component of OpenJDK failed to properly handle GSS context in the native GSS library wrapper in certain cases. A remote attacker could possibly make a Java application using JGSS to use a previously freed context.
(CVE-2018-2629)

DnsClient missing source port randomization (JNDI, 8182125)

It was discovered that the DNS client implementation in the JNDI component of OpenJDK did not use random source ports when sending out DNS queries. This could make it easier for a remote attacker to spoof responses to those queries. (CVE-2018-2599), last seen: 2019-02-21, modified: 2018-04-18, plugin id: 109121, published: 2018-04-18, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=109121, title: Amazon Linux 2 : java-1.8.0-openjdk (ALAS-2018-949)}, {NASL family: PhotonOS Local Security Checks, NASL id: PHOTONOS_PHSA-2018-2_0-0013.NASL, description: An update of {'libtiff', 'openjdk8', 'ruby'} packages of Photon OS has been released., last seen: 2019-02-21, modified: 2019-02-07, plugin id: 111283, published: 2018-07-24, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=111283, title: Photon OS 2.0 : libtiff / openjdk8 / ruby (PhotonOS-PHSA-2018-2.0-0013) (deprecated)}, {NASL family: Huawei Local Security Checks, NASL id: EULEROS_SA-2018-1027.NASL, description: According to the versions of the java-1.8.0-openjdk packages installed, the EulerOS installation on the remote host is affected by the following vulnerabilities :

  - Multiple flaws were found in the Hotspot and AWT     components of OpenJDK. An untrusted Java application or     applet could use these flaws to bypass certain Java     sandbox restrictions. (CVE-2018-2582, CVE-2018-2641)

  - It was discovered that the LDAPCertStore class in the     JNDI component of OpenJDK failed to securely handle     LDAP referrals. An attacker could possibly use this     flaw to make it fetch attacker controlled certificate     data. (CVE-2018-2633)

  - The JGSS component of OpenJDK ignores the value of the     javax.security.auth.useSubjectCredsOnly property when     using HTTP/SPNEGO authentication and always uses global     credentials. It was discovered that this could cause     global credentials to be unexpectedly used by an     untrusted Java application. (CVE-2018-2634)

  - It was discovered that the JMX component of OpenJDK     failed to properly set the deserialization filter for     the SingleEntryRegistry in certain cases. A remote     attacker could possibly use this flaw to bypass     intended deserialization restrictions. (CVE-2018-2637)

  - It was discovered that the LDAP component of OpenJDK     failed to properly encode special characters in user     names when adding them to an LDAP search query. A     remote attacker could possibly use this flaw to     manipulate LDAP queries performed by the     LdapLoginModule class. (CVE-2018-2588)

  - It was discovered that the DNS client implementation in     the JNDI component of OpenJDK did not use random source     ports when sending out DNS queries. This could make it     easier for a remote attacker to spoof responses to     those queries. (CVE-2018-2599)

  - It was discovered that the I18n component of OpenJDK     could use an untrusted search path when loading     resource bundle classes. A local attacker could     possibly use this flaw to execute arbitrary code as     another local user by making their Java application     load an attacker controlled class file. (CVE-2018-2602)

  - It was discovered that the Libraries component of     OpenJDK failed to sufficiently limit the amount of     memory allocated when reading DER encoded input. A     remote attacker could possibly use this flaw to make a     Java application use an excessive amount of memory if     it parsed attacker supplied DER encoded input.
    (CVE-2018-2603)

  - It was discovered that the key agreement     implementations in the JCE component of OpenJDK did not     guarantee sufficient strength of used keys to     adequately protect generated shared secret. This could     make it easier to break data encryption by attacking     key agreement rather than the encryption using the     negotiated secret. (CVE-2018-2618)

  - It was discovered that the JGSS component of OpenJDK     failed to properly handle GSS context in the native GSS     library wrapper in certain cases. A remote attacker     could possibly make a Java application using JGSS to     use a previously freed context. (CVE-2018-2629)

  - It was discovered that multiple classes in the     Libraries, AWT, and JNDI components of OpenJDK did not     sufficiently validate input when creating object     instances from the serialized form. A specially-crafted     input could cause a Java application to create objects     with an inconsistent state or use an excessive amount     of memory when deserialized. (CVE-2018-2663,     CVE-2018-2677, CVE-2018-2678)

  - It was discovered that multiple encryption key classes     in the Libraries component of OpenJDK did not properly     synchronize access to their internal data. This could     possibly cause a multi-threaded Java application to     apply weak encryption to data because of the use of a     key that was zeroed out. (CVE-2018-2579)

Note that Tenable Network Security has extracted the preceding description block directly from the EulerOS security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2019-02-19, plugin id: 106402, published: 2018-01-29, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106402, title: EulerOS 2.0 SP1 : java-1.8.0-openjdk (EulerOS-SA-2018-1027)}, {NASL family: PhotonOS Local Security Checks, NASL id: PHOTONOS_PHSA-2018-2_0-0013_OPENJDK8.NASL, description: An update of the openjdk8 package has been released., last seen: 2019-02-08, modified: 2019-02-07, plugin id: 121911, published: 2019-02-07, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=121911, title: Photon OS 2.0: Openjdk8 PHSA-2018-2.0-0013}, {NASL family: Scientific Linux Local Security Checks, NASL id: SL_20180117_JAVA_1_8_0_OPENJDK_ON_SL6_X.NASL, description: Security Fix(es) :

  - Multiple flaws were found in the Hotspot and AWT     components of OpenJDK. An untrusted Java application or     applet could use these flaws to bypass certain Java     sandbox restrictions. (CVE-2018-2582, CVE-2018-2641)

  - It was discovered that the LDAPCertStore class in the     JNDI component of OpenJDK failed to securely handle LDAP     referrals. An attacker could possibly use this flaw to     make it fetch attacker controlled certificate data.
    (CVE-2018-2633)

  - The JGSS component of OpenJDK ignores the value of the     javax.security.auth.useSubjectCredsOnly property when     using HTTP/SPNEGO authentication and always uses global     credentials. It was discovered that this could cause     global credentials to be unexpectedly used by an     untrusted Java application. (CVE-2018-2634)

  - It was discovered that the JMX component of OpenJDK     failed to properly set the deserialization filter for     the SingleEntryRegistry in certain cases. A remote     attacker could possibly use this flaw to bypass intended     deserialization restrictions. (CVE-2018-2637)

  - It was discovered that the LDAP component of OpenJDK     failed to properly encode special characters in user     names when adding them to an LDAP search query. A remote     attacker could possibly use this flaw to manipulate LDAP     queries performed by the LdapLoginModule class.
    (CVE-2018-2588)

  - It was discovered that the DNS client implementation in     the JNDI component of OpenJDK did not use random source     ports when sending out DNS queries. This could make it     easier for a remote attacker to spoof responses to those     queries. (CVE-2018-2599)

  - It was discovered that the I18n component of OpenJDK     could use an untrusted search path when loading resource     bundle classes. A local attacker could possibly use this     flaw to execute arbitrary code as another local user by     making their Java application load an attacker     controlled class file. (CVE-2018-2602)

  - It was discovered that the Libraries component of     OpenJDK failed to sufficiently limit the amount of     memory allocated when reading DER encoded input. A     remote attacker could possibly use this flaw to make a     Java application use an excessive amount of memory if it     parsed attacker supplied DER encoded input.
    (CVE-2018-2603)

  - It was discovered that the key agreement implementations     in the JCE component of OpenJDK did not guarantee     sufficient strength of used keys to adequately protect     generated shared secret. This could make it easier to     break data encryption by attacking key agreement rather     than the encryption using the negotiated secret.
    (CVE-2018-2618)

  - It was discovered that the JGSS component of OpenJDK     failed to properly handle GSS context in the native GSS     library wrapper in certain cases. A remote attacker     could possibly make a Java application using JGSS to use     a previously freed context. (CVE-2018-2629)

  - It was discovered that multiple classes in the     Libraries, AWT, and JNDI components of OpenJDK did not     sufficiently validate input when creating object     instances from the serialized form. A specially crafted     input could cause a Java application to create objects     with an inconsistent state or use an excessive amount of     memory when deserialized. (CVE-2018-2663, CVE-2018-2677,     CVE-2018-2678)

  - It was discovered that multiple encryption key classes     in the Libraries component of OpenJDK did not properly     synchronize access to their internal data. This could     possibly cause a multi-threaded Java application to     apply weak encryption to data because of the use of a     key that was zeroed out. (CVE-2018-2579)

Note: If the web browser plug-in provided by the icedtea-web package was installed, the issues exposed via Java applets could have been exploited without user interaction if a user visited a malicious website., last seen: 2019-02-21, modified: 2018-12-27, plugin id: 106124, published: 2018-01-18, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106124, title: Scientific Linux Security Update : java-1.8.0-openjdk on SL6.x, SL7.x i386/x86_64}, {NASL family: SuSE Local Security Checks, NASL id: OPENSUSE-2018-256.NASL, description: This update for java-1_7_0-openjdk fixes the following issues :

Security issues fixed in OpenJDK 7u171 (January 2018 CPU)(bsc#1076366) :

  - CVE-2018-2579: Improve key keying case

  - CVE-2018-2588: Improve LDAP logins

  - CVE-2018-2599: Improve reliability of DNS lookups

  - CVE-2018-2602: Improve usage messages

  - CVE-2018-2603: Improve PKCS usage

  - CVE-2018-2618: Stricter key generation

  - CVE-2018-2629: Improve GSS handling

  - CVE-2018-2633: Improve LDAP lookup robustness

  - CVE-2018-2634: Improve property negotiations

  - CVE-2018-2637: Improve JMX supportive features

  - CVE-2018-2641: Improve GTK initialization

  - CVE-2018-2663: More refactoring for deserialization     cases

  - CVE-2018-2677: More refactoring for client     deserialization cases

  - CVE-2018-2678: More refactoring for naming

This update was imported from the SUSE:SLE-12:Update update project., last seen: 2019-02-21, modified: 2018-03-15, plugin id: 108357, published: 2018-03-15, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108357, title: openSUSE Security Update : java-1_7_0-openjdk (openSUSE-2018-256)}, {NASL family: Gentoo Local Security Checks, NASL id: GENTOO_GLSA-201803-06.NASL, description: The remote host is affected by the vulnerability described in GLSA-201803-06 (Oracle JDK/JRE: Multiple vulnerabilities)

    Multiple vulnerabilities have been discovered in Oracle&rsquo;s Java SE.
      Please review the referenced CVE identifiers for details.
  Impact :

    A remote attacker could possibly execute arbitrary code with the       privileges of the process, gain access to information, or cause a Denial       of Service condition.
  Workaround :

    There is no known workaround at this time., last seen: 2019-02-21, modified: 2018-06-07, plugin id: 108432, published: 2018-03-19, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108432, title: GLSA-201803-06 : Oracle JDK/JRE: Multiple vulnerabilities}, {NASL family: Debian Local Security Checks, NASL id: DEBIAN_DLA-1339.NASL, description: Several vulnerabilities have been discovered in OpenJDK, an implementation of the Oracle Java platform, resulting in denial of service, unauthorized access, sandbox bypass or HTTP header injection.

For Debian 7 'Wheezy', these problems have been fixed in version 7u171-2.6.13-1~deb7u1.

We recommend that you upgrade your openjdk-7 packages.

NOTE: Tenable Network Security has extracted the preceding description block directly from the DLA security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-07-06, plugin id: 108815, published: 2018-04-04, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108815, title: Debian DLA-1339-1 : openjdk-7 security update}, {NASL family: Huawei Local Security Checks, NASL id: EULEROS_SA-2018-1058.NASL, description: According to the versions of the java-1.7.0-openjdk packages installed, the EulerOS installation on the remote host is affected by the following vulnerabilities :

  - A flaw was found in the AWT component of OpenJDK. An     untrusted Java application or applet could use this     flaw to bypass certain Java sandbox restrictions.
    (CVE-2018-2641)

  - It was discovered that the LDAPCertStore class in the     JNDI component of OpenJDK failed to securely handle     LDAP referrals. An attacker could possibly use this     flaw to make it fetch attacker controlled certificate     data. (CVE-2018-2633)

  - The JGSS component of OpenJDK ignores the value of the     javax.security.auth.useSubjectCredsOnly property when     using HTTP/SPNEGO authentication and always uses global     credentials. It was discovered that this could cause     global credentials to be unexpectedly used by an     untrusted Java application. (CVE-2018-2634)

  - It was discovered that the JMX component of OpenJDK     failed to properly set the deserialization filter for     the SingleEntryRegistry in certain cases. A remote     attacker could possibly use this flaw to bypass     intended deserialization restrictions. (CVE-2018-2637)

  - It was discovered that the LDAP component of OpenJDK     failed to properly encode special characters in user     names when adding them to an LDAP search query. A     remote attacker could possibly use this flaw to     manipulate LDAP queries performed by the     LdapLoginModule class. (CVE-2018-2588)

  - It was discovered that the DNS client implementation in     the JNDI component of OpenJDK did not use random source     ports when sending out DNS queries. This could make it     easier for a remote attacker to spoof responses to     those queries. (CVE-2018-2599)

  - It was discovered that the I18n component of OpenJDK     could use an untrusted search path when loading     resource bundle classes. A local attacker could     possibly use this flaw to execute arbitrary code as     another local user by making their Java application     load an attacker controlled class file. (CVE-2018-2602)

  - It was discovered that the Libraries component of     OpenJDK failed to sufficiently limit the amount of     memory allocated when reading DER encoded input. A     remote attacker could possibly use this flaw to make a     Java application use an excessive amount of memory if     it parsed attacker supplied DER encoded input.
    (CVE-2018-2603)

  - It was discovered that the key agreement     implementations in the JCE component of OpenJDK did not     guarantee sufficient strength of used keys to     adequately protect generated shared secret. This could     make it easier to break data encryption by attacking     key agreement rather than the encryption using the     negotiated secret. (CVE-2018-2618)

  - It was discovered that the JGSS component of OpenJDK     failed to properly handle GSS context in the native GSS     library wrapper in certain cases. A remote attacker     could possibly make a Java application using JGSS to     use a previously freed context. (CVE-2018-2629)

  - It was discovered that multiple classes in the     Libraries, AWT, and JNDI components of OpenJDK did not     sufficiently validate input when creating object     instances from the serialized form. A specially-crafted     input could cause a Java application to create objects     with an inconsistent state or use an excessive amount     of memory when deserialized. (CVE-2018-2663,     CVE-2018-2677, CVE-2018-2678)

  - It was discovered that multiple encryption key classes     in the Libraries component of OpenJDK did not properly     synchronize access to their internal data. This could     possibly cause a multi-threaded Java application to     apply weak encryption to data because of the use of a     key that was zeroed out. (CVE-2018-2579)

Note that Tenable Network Security has extracted the preceding description block directly from the EulerOS security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2019-02-12, plugin id: 108462, published: 2018-03-20, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108462, title: EulerOS 2.0 SP1 : java-1.7.0-openjdk (EulerOS-SA-2018-1058)}, {NASL family: SuSE Local Security Checks, NASL id: SUSE_SU-2018-0661-1.NASL, description: This update for java-1_7_0-openjdk fixes the following issues:
Security issues fixed in OpenJDK 7u171 (January 2018 CPU)(bsc#1076366) :

  - CVE-2018-2579: Improve key keying case

  - CVE-2018-2588: Improve LDAP logins

  - CVE-2018-2599: Improve reliability of DNS lookups

  - CVE-2018-2602: Improve usage messages

  - CVE-2018-2603: Improve PKCS usage

  - CVE-2018-2618: Stricter key generation

  - CVE-2018-2629: Improve GSS handling

  - CVE-2018-2633: Improve LDAP lookup robustness

  - CVE-2018-2634: Improve property negotiations

  - CVE-2018-2637: Improve JMX supportive features

  - CVE-2018-2641: Improve GTK initialization

  - CVE-2018-2663: More refactoring for deserialization     cases

  - CVE-2018-2677: More refactoring for client     deserialization cases

  - CVE-2018-2678: More refactoring for naming

Note that Tenable Network Security has extracted the preceding description block directly from the SUSE security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-12-01, plugin id: 108280, published: 2018-03-13, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108280, title: SUSE SLED12 / SLES12 Security Update : java-1_7_0-openjdk (SUSE-SU-2018:0661-1)}, {NASL family: Ubuntu Local Security Checks, NASL id: UBUNTU_USN-3614-1.NASL, description: It was discovered that a race condition existed in the cryptography implementation in OpenJDK. An attacker could possibly use this to expose sensitive information. (CVE-2018-2579)

It was discovered that the LDAP implementation in OpenJDK did not properly encode login names. A remote attacker could possibly use this to expose sensitive information. (CVE-2018-2588)

It was discovered that the DNS client implementation in OpenJDK did not properly randomize source ports. A remote attacker could use this to spoof responses to DNS queries made by Java applications.
(CVE-2018-2599)

It was discovered that the Internationalization component of OpenJDK did not restrict search paths when loading resource bundle classes. A local attacker could use this to trick a user into running malicious code. (CVE-2018-2602)

It was discovered that OpenJDK did not properly restrict memory allocations when parsing DER input. A remote attacker could possibly use this to cause a denial of service. (CVE-2018-2603)

It was discovered that the Java Cryptography Extension (JCE) implementation in OpenJDK in some situations did guarantee sufficient strength of keys during key agreement. An attacker could use this to expose sensitive information. (CVE-2018-2618)

It was discovered that the Java GSS implementation in OpenJDK in some situations did not properly handle GSS contexts in the native GSS library. An attacker could possibly use this to access unauthorized resources. (CVE-2018-2629)

It was discovered that the LDAP implementation in OpenJDK did not properly handle LDAP referrals in some situations. An attacker could possibly use this to expose sensitive information or gain unauthorized privileges. (CVE-2018-2633)

It was discovered that the Java GSS implementation in OpenJDK in some situations did not properly apply subject credentials. An attacker could possibly use this to expose sensitive information or gain access to unauthorized resources. (CVE-2018-2634)

It was discovered that the Java Management Extensions (JMX) component of OpenJDK did not properly apply deserialization filters in some situations. An attacker could use this to bypass deserialization restrictions. (CVE-2018-2637)

It was discovered that a use-after-free vulnerability existed in the AWT component of OpenJDK when loading the GTK library. An attacker could possibly use this to execute arbitrary code and escape Java sandbox restrictions. (CVE-2018-2641)

It was discovered that in some situations OpenJDK did not properly validate objects when performing deserialization. An attacker could use this to cause a denial of service (application crash or excessive memory consumption). (CVE-2018-2663)

It was discovered that the AWT component of OpenJDK did not properly restrict the amount of memory allocated when deserializing some objects. An attacker could use this to cause a denial of service (excessive memory consumption). (CVE-2018-2677)

It was discovered that the JNDI component of OpenJDK did not properly restrict the amount of memory allocated when deserializing objects in some situations. An attacker could use this to cause a denial of service (excessive memory consumption). (CVE-2018-2678).

Note that Tenable Network Security has extracted the preceding description block directly from the Ubuntu security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2018-12-01, plugin id: 108794, published: 2018-04-03, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108794, title: Ubuntu 14.04 LTS : openjdk-7 vulnerabilities (USN-3614-1)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2018-0100.NASL, description: An update for java-1.7.0-oracle is now available for Oracle Java for Red Hat Enterprise Linux 6 and Oracle Java for Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Important. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

Oracle Java SE version 7 includes the Oracle Java Runtime Environment and the Oracle Java Software Development Kit.

This update upgrades Oracle Java SE 7 to version 7 Update 171.

Security Fix(es) :

* This update fixes multiple vulnerabilities in the Oracle Java Runtime Environment and the Oracle Java Software Development Kit.
Further information about these flaws can be found on the Oracle Java SE Critical Patch Update Advisory page listed in the References section. (CVE-2018-2579, CVE-2018-2581, CVE-2018-2588, CVE-2018-2599, CVE-2018-2602, CVE-2018-2603, CVE-2018-2618, CVE-2018-2629, CVE-2018-2633, CVE-2018-2634, CVE-2018-2637, CVE-2018-2641, CVE-2018-2657, CVE-2018-2663, CVE-2018-2677, CVE-2018-2678), last seen: 2019-02-21, modified: 2018-11-10, plugin id: 106183, published: 2018-01-19, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106183, title: RHEL 6 / 7 : java-1.7.0-oracle (RHSA-2018:0100)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2018-0115.NASL, description: An update for java-1.6.0-sun is now available for Oracle Java for Red Hat Enterprise Linux 6 and Oracle Java for Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Important. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

Oracle Java SE version 6 includes the Oracle Java Runtime Environment and the Oracle Java Software Development Kit.

This update upgrades Oracle Java SE 6 to version 6 Update 181.

Security Fix(es) :

* This update fixes multiple vulnerabilities in the Oracle Java Runtime Environment and the Oracle Java Software Development Kit.
Further information about these flaws can be found on the Oracle Java SE Critical Patch Update Advisory page listed in the References section. (CVE-2018-2579, CVE-2018-2588, CVE-2018-2599, CVE-2018-2602, CVE-2018-2603, CVE-2018-2618, CVE-2018-2629, CVE-2018-2633, CVE-2018-2637, CVE-2018-2641, CVE-2018-2657, CVE-2018-2663, CVE-2018-2677, CVE-2018-2678), last seen: 2019-02-21, modified: 2018-11-10, plugin id: 106256, published: 2018-01-23, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106256, title: RHEL 6 / 7 : java-1.6.0-sun (RHSA-2018:0115)}, {NASL family: Debian Local Security Checks, NASL id: DEBIAN_DSA-4166.NASL, description: Several vulnerabilities have been discovered in OpenJDK, an implementation of the Oracle Java platform, resulting in denial of service, sandbox bypass, execution of arbitrary code, incorrect LDAP/GSS authentication, insecure use of cryptography or bypass of deserialisation restrictions., last seen: 2019-02-21, modified: 2018-11-13, plugin id: 108853, published: 2018-04-06, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108853, title: Debian DSA-4166-1 : openjdk-7 - security update}, {NASL family: Debian Local Security Checks, NASL id: DEBIAN_DSA-4144.NASL, description: Several vulnerabilities have been discovered in OpenJDK, an implementation of the Oracle Java platform, resulting in denial of service, sandbox bypass, execution of arbitrary code, incorrect LDAP/GSS authentication, insecure use of cryptography or bypass of deserialisation restrictions., last seen: 2019-02-21, modified: 2018-11-13, plugin id: 108421, published: 2018-03-19, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108421, title: Debian DSA-4144-1 : openjdk-8 - security update}, {NASL family: SuSE Local Security Checks, NASL id: OPENSUSE-2018-254.NASL, description: This update for java-1_8_0-openjdk fixes the following issues :

Security issues fix in jdk8u161 (icedtea 3.7.0)(bsc#1076366) :

  - CVE-2018-2579: Improve key keying case

  - CVE-2018-2582: Better interface invocations

  - CVE-2018-2588: Improve LDAP logins

  - CVE-2018-2599: Improve reliability of DNS lookups

  - CVE-2018-2602: Improve usage messages

  - CVE-2018-2603: Improve PKCS usage

  - CVE-2018-2618: Stricter key generation

  - CVE-2018-2629: Improve GSS handling

  - CVE-2018-2633: Improve LDAP lookup robustness

  - CVE-2018-2634: Improve property negotiations

  - CVE-2018-2637: Improve JMX supportive features

  - CVE-2018-2641: Improve GTK initialization

  - CVE-2018-2663: More refactoring for deserialization     cases

  - CVE-2018-2677: More refactoring for client     deserialization cases

  - CVE-2018-2678: More refactoring for naming     deserialization cases

This update was imported from the SUSE:SLE-12-SP1:Update update project., last seen: 2019-02-21, modified: 2018-03-15, plugin id: 108355, published: 2018-03-15, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=108355, title: openSUSE Security Update : java-1_8_0-openjdk (openSUSE-2018-254)}, {NASL family: Windows, NASL id: ORACLE_JAVA_CPU_JAN_2018.NASL, description: The version of Oracle (formerly Sun) Java SE or Java for Business installed on the remote host is prior to 9 Update 4, 8 Update 161, 7 Update 171, or 6 Update 181. It is, therefore, affected by multiple vulnerabilities related to the following components :

  - AWT
  - Deployment
  - Hotspot
  - I18n
  - Installer
  - JCE
  - JGSS
  - JMX
  - JNDI
  - JavaFX
  - LDAP
  - Libraries
  - Serialization, last seen: 2019-02-21, modified: 2018-11-15, plugin id: 106190, published: 2018-01-19, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106190, title: Oracle Java SE Multiple Vulnerabilities (January 2018 CPU)}, {NASL family: Red Hat Local Security Checks, NASL id: REDHAT-RHSA-2018-0095.NASL, description: An update for java-1.8.0-openjdk is now available for Red Hat Enterprise Linux 6 and Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Important. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

The java-1.8.0-openjdk packages provide the OpenJDK 8 Java Runtime Environment and the OpenJDK 8 Java Software Development Kit.

Security Fix(es) :

* Multiple flaws were found in the Hotspot and AWT components of OpenJDK. An untrusted Java application or applet could use these flaws to bypass certain Java sandbox restrictions. (CVE-2018-2582, CVE-2018-2641)

* It was discovered that the LDAPCertStore class in the JNDI component of OpenJDK failed to securely handle LDAP referrals. An attacker could possibly use this flaw to make it fetch attacker controlled certificate data. (CVE-2018-2633)

* The JGSS component of OpenJDK ignores the value of the javax.security.auth.useSubjectCredsOnly property when using HTTP/SPNEGO authentication and always uses global credentials. It was discovered that this could cause global credentials to be unexpectedly used by an untrusted Java application. (CVE-2018-2634)

* It was discovered that the JMX component of OpenJDK failed to properly set the deserialization filter for the SingleEntryRegistry in certain cases. A remote attacker could possibly use this flaw to bypass intended deserialization restrictions. (CVE-2018-2637)

* It was discovered that the LDAP component of OpenJDK failed to properly encode special characters in user names when adding them to an LDAP search query. A remote attacker could possibly use this flaw to manipulate LDAP queries performed by the LdapLoginModule class.
(CVE-2018-2588)

* It was discovered that the DNS client implementation in the JNDI component of OpenJDK did not use random source ports when sending out DNS queries. This could make it easier for a remote attacker to spoof responses to those queries. (CVE-2018-2599)

* It was discovered that the I18n component of OpenJDK could use an untrusted search path when loading resource bundle classes. A local attacker could possibly use this flaw to execute arbitrary code as another local user by making their Java application load an attacker controlled class file. (CVE-2018-2602)

* It was discovered that the Libraries component of OpenJDK failed to sufficiently limit the amount of memory allocated when reading DER encoded input. A remote attacker could possibly use this flaw to make a Java application use an excessive amount of memory if it parsed attacker supplied DER encoded input. (CVE-2018-2603)

* It was discovered that the key agreement implementations in the JCE component of OpenJDK did not guarantee sufficient strength of used keys to adequately protect generated shared secret. This could make it easier to break data encryption by attacking key agreement rather than the encryption using the negotiated secret. (CVE-2018-2618)

* It was discovered that the JGSS component of OpenJDK failed to properly handle GSS context in the native GSS library wrapper in certain cases. A remote attacker could possibly make a Java application using JGSS to use a previously freed context.
(CVE-2018-2629)

* It was discovered that multiple classes in the Libraries, AWT, and JNDI components of OpenJDK did not sufficiently validate input when creating object instances from the serialized form. A specially crafted input could cause a Java application to create objects with an inconsistent state or use an excessive amount of memory when deserialized. (CVE-2018-2663, CVE-2018-2677, CVE-2018-2678)

* It was discovered that multiple encryption key classes in the Libraries component of OpenJDK did not properly synchronize access to their internal data. This could possibly cause a multi-threaded Java application to apply weak encryption to data because of the use of a key that was zeroed out. (CVE-2018-2579)

Note: If the web browser plug-in provided by the icedtea-web package was installed, the issues exposed via Java applets could have been exploited without user interaction if a user visited a malicious website., last seen: 2019-02-21, modified: 2018-11-10, plugin id: 106122, published: 2018-01-18, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106122, title: RHEL 6 / 7 : java-1.8.0-openjdk (RHSA-2018:0095)}, {NASL family: Huawei Local Security Checks, NASL id: EULEROS_SA-2018-1028.NASL, description: According to the versions of the java-1.8.0-openjdk packages installed, the EulerOS installation on the remote host is affected by the following vulnerabilities :

  - Multiple flaws were found in the Hotspot and AWT     components of OpenJDK. An untrusted Java application or     applet could use these flaws to bypass certain Java     sandbox restrictions. (CVE-2018-2582, CVE-2018-2641)

  - It was discovered that the LDAPCertStore class in the     JNDI component of OpenJDK failed to securely handle     LDAP referrals. An attacker could possibly use this     flaw to make it fetch attacker controlled certificate     data. (CVE-2018-2633)

  - The JGSS component of OpenJDK ignores the value of the     javax.security.auth.useSubjectCredsOnly property when     using HTTP/SPNEGO authentication and always uses global     credentials. It was discovered that this could cause     global credentials to be unexpectedly used by an     untrusted Java application. (CVE-2018-2634)

  - It was discovered that the JMX component of OpenJDK     failed to properly set the deserialization filter for     the SingleEntryRegistry in certain cases. A remote     attacker could possibly use this flaw to bypass     intended deserialization restrictions. (CVE-2018-2637)

  - It was discovered that the LDAP component of OpenJDK     failed to properly encode special characters in user     names when adding them to an LDAP search query. A     remote attacker could possibly use this flaw to     manipulate LDAP queries performed by the     LdapLoginModule class. (CVE-2018-2588)

  - It was discovered that the DNS client implementation in     the JNDI component of OpenJDK did not use random source     ports when sending out DNS queries. This could make it     easier for a remote attacker to spoof responses to     those queries. (CVE-2018-2599)

  - It was discovered that the I18n component of OpenJDK     could use an untrusted search path when loading     resource bundle classes. A local attacker could     possibly use this flaw to execute arbitrary code as     another local user by making their Java application     load an attacker controlled class file. (CVE-2018-2602)

  - It was discovered that the Libraries component of     OpenJDK failed to sufficiently limit the amount of     memory allocated when reading DER encoded input. A     remote attacker could possibly use this flaw to make a     Java application use an excessive amount of memory if     it parsed attacker supplied DER encoded input.
    (CVE-2018-2603)

  - It was discovered that the key agreement     implementations in the JCE component of OpenJDK did not     guarantee sufficient strength of used keys to     adequately protect generated shared secret. This could     make it easier to break data encryption by attacking     key agreement rather than the encryption using the     negotiated secret. (CVE-2018-2618)

  - It was discovered that the JGSS component of OpenJDK     failed to properly handle GSS context in the native GSS     library wrapper in certain cases. A remote attacker     could possibly make a Java application using JGSS to     use a previously freed context. (CVE-2018-2629)

  - It was discovered that multiple classes in the     Libraries, AWT, and JNDI components of OpenJDK did not     sufficiently validate input when creating object     instances from the serialized form. A specially-crafted     input could cause a Java application to create objects     with an inconsistent state or use an excessive amount     of memory when deserialized. (CVE-2018-2663,     CVE-2018-2677, CVE-2018-2678)

  - It was discovered that multiple encryption key classes     in the Libraries component of OpenJDK did not properly     synchronize access to their internal data. This could     possibly cause a multi-threaded Java application to     apply weak encryption to data because of the use of a     key that was zeroed out. (CVE-2018-2579)

Note that Tenable Network Security has extracted the preceding description block directly from the EulerOS security advisory. Tenable has attempted to automatically clean and format it as much as possible without introducing additional issues., last seen: 2019-02-21, modified: 2019-02-19, plugin id: 106403, published: 2018-01-29, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=106403, title: EulerOS 2.0 SP2 : java-1.8.0-openjdk (EulerOS-SA-2018-1028)}, {NASL family: Oracle Linux Local Security Checks, NASL id: ORACLELINUX_ELSA-2018-0349.NASL, description: From Red Hat Security Advisory 2018:0349 :

An update for java-1.7.0-openjdk is now available for Red Hat Enterprise Linux 6 and Red Hat Enterprise Linux 7.

Red Hat Product Security has rated this update as having a security impact of Important. A Common Vulnerability Scoring System (CVSS) base score, which gives a detailed severity rating, is available for each vulnerability from the CVE link(s) in the References section.

The java-1.7.0-openjdk packages provide the OpenJDK 7 Java Runtime Environment and the OpenJDK 7 Java Software Development Kit.

Security Fix(es) :

* A flaw was found in the AWT component of OpenJDK. An untrusted Java application or applet could use this flaw to bypass certain Java sandbox restrictions. (CVE-2018-2641)

* It was discovered that the LDAPCertStore class in the JNDI component of OpenJDK failed to securely handle LDAP referrals. An attacker could possibly use this flaw to make it fetch attacker controlled certificate data. (CVE-2018-2633)

* The JGSS component of OpenJDK ignores the value of the javax.security.auth.useSubjectCredsOnly property when using HTTP/SPNEGO authentication and always uses global credentials. It was discovered that this could cause global credentials to be unexpectedly used by an untrusted Java application. (CVE-2018-2634)

* It was discovered that the JMX component of OpenJDK failed to properly set the deserialization filter for the SingleEntryRegistry in certain cases. A remote attacker could possibly use this flaw to bypass intended deserialization restrictions. (CVE-2018-2637)

* It was discovered that the LDAP component of OpenJDK failed to properly encode special characters in user names when adding them to an LDAP search query. A remote attacker could possibly use this flaw to manipulate LDAP queries performed by the LdapLoginModule class.
(CVE-2018-2588)

* It was discovered that the DNS client implementation in the JNDI component of OpenJDK did not use random source ports when sending out DNS queries. This could make it easier for a remote attacker to spoof responses to those queries. (CVE-2018-2599)

* It was discovered that the I18n component of OpenJDK could use an untrusted search path when loading resource bundle classes. A local attacker could possibly use this flaw to execute arbitrary code as another local user by making their Java application load an attacker controlled class file. (CVE-2018-2602)

* It was discovered that the Libraries component of OpenJDK failed to sufficiently limit the amount of memory allocated when reading DER encoded input. A remote attacker could possibly use this flaw to make a Java application use an excessive amount of memory if it parsed attacker supplied DER encoded input. (CVE-2018-2603)

* It was discovered that the key agreement implementations in the JCE component of OpenJDK did not guarantee sufficient strength of used keys to adequately protect generated shared secret. This could make it easier to break data encryption by attacking key agreement rather than the encryption using the negotiated secret. (CVE-2018-2618)

* It was discovered that the JGSS component of OpenJDK failed to properly handle GSS context in the native GSS library wrapper in certain cases. A remote attacker could possibly make a Java application using JGSS to use a previously freed context.
(CVE-2018-2629)

* It was discovered that multiple classes in the Libraries, AWT, and JNDI components of OpenJDK did not sufficiently validate input when creating object instances from the serialized form. A specially crafted input could cause a Java application to create objects with an inconsistent state or use an excessive amount of memory when deserialized. (CVE-2018-2663, CVE-2018-2677, CVE-2018-2678)

* It was discovered that multiple encryption key classes in the Libraries component of OpenJDK did not properly synchronize access to their internal data. This could possibly cause a multi-threaded Java application to apply weak encryption to data because of the use of a key that was zeroed out. (CVE-2018-2579), last seen: 2019-02-21, modified: 2018-02-27, plugin id: 107014, published: 2018-02-27, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=107014, title: Oracle Linux 6 / 7 : java-1.7.0-openjdk (ELSA-2018-0349)}], ranking: [[{circl: 3}]], redhat: {advisories: [{rhsa: {id: RHSA-2018:0095}}, {rhsa: {id: RHSA-2018:0099}}, {rhsa: {id: RHSA-2018:0100}}, {rhsa: {id: RHSA-2018:0115}}, {rhsa: {id: RHSA-2018:0349}}, {rhsa: {id: RHSA-2018:1463}}, {rhsa: {id: RHSA-2018:1812}}], rpms: [java-1.8.0-openjdk-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-debug-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-demo-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-demo-debug-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-devel-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-devel-debug-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-headless-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-headless-debug-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-javadoc-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-javadoc-debug-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-src-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-src-debug-1:1.8.0.161-3.b14.el6_9, java-1.8.0-openjdk-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-accessibility-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-accessibility-debug-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-debug-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-demo-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-demo-debug-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-devel-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-devel-debug-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-headless-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-headless-debug-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-javadoc-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-javadoc-debug-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-javadoc-zip-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-javadoc-zip-debug-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-src-1:1.8.0.161-0.b14.el7_4, java-1.8.0-openjdk-src-debug-1:1.8.0.161-0.b14.el7_4, java-1.7.0-openjdk-1:1.7.0.171-2.6.13.0.el6_9, java-1.7.0-openjdk-demo-1:1.7.0.171-2.6.13.0.el6_9, java-1.7.0-openjdk-devel-1:1.7.0.171-2.6.13.0.el6_9, java-1.7.0-openjdk-javadoc-1:1.7.0.171-2.6.13.0.el6_9, java-1.7.0-openjdk-src-1:1.7.0.171-2.6.13.0.el6_9, java-1.7.0-openjdk-1:1.7.0.171-2.6.13.0.el7_4, java-1.7.0-openjdk-accessibility-1:1.7.0.171-2.6.13.0.el7_4, java-1.7.0-openjdk-demo-1:1.7.0.171-2.6.13.0.el7_4, java-1.7.0-openjdk-devel-1:1.7.0.171-2.6.13.0.el7_4, java-1.7.0-openjdk-headless-1:1.7.0.171-2.6.13.0.el7_4, java-1.7.0-openjdk-javadoc-1:1.7.0.171-2.6.13.0.el7_4, java-1.7.0-openjdk-src-1:1.7.0.171-2.6.13.0.el7_4]}, references: [http://www.oracle.com/technetwork/security-advisory/cpujan2018-3236628.html, http://www.securityfocus.com/bid/102615, http://www.securitytracker.com/id/1040203, https://access.redhat.com/errata/RHSA-2018:0095, https://access.redhat.com/errata/RHSA-2018:0099, https://access.redhat.com/errata/RHSA-2018:0100, https://access.redhat.com/errata/RHSA-2018:0115, https://access.redhat.com/errata/RHSA-2018:0349, https://access.redhat.com/errata/RHSA-2018:1463, https://access.redhat.com/errata/RHSA-2018:1812, https://help.ecostruxureit.com/display/public/UADCE725/Security+fixes+in+StruxureWare+Data+Center+Expert+v7.6.0, https://lists.debian.org/debian-lts-announce/2018/04/msg00003.html, https://security.netapp.com/advisory/ntap-20180117-0001/, https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-hpesbst03911en_us, https://usn.ubuntu.com/3613-1/, https://usn.ubuntu.com/3614-1/, https://www.debian.org/security/2018/dsa-4144, https://www.debian.org/security/2018/dsa-4166], refmap: {bid: [102615], confirm: [http://www.oracle.com/technetwork/security-advisory/cpujan2018-3236628.html, https://help.ecostruxureit.com/display/public/UADCE725/Security+fixes+in+StruxureWare+Data+Center+Expert+v7.6.0, https://security.netapp.com/advisory/ntap-20180117-0001/, https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-hpesbst03911en_us], debian: [DSA-4144, DSA-4166], mlist: [[debian-lts-announce] 20180403 [SECURITY] [DLA 1339-1] openjdk-7 security update], sectrack: [1040203], ubuntu: [USN-3613-1, USN-3614-1]}, summary: Vulnerability in the Java SE, Java SE Embedded, JRockit component of Oracle Java SE (subcomponent: JGSS). Supported versions that are affected are Java SE: 6u171, 7u161, 8u152 and 9.0.1; Java SE Embedded: 8u151; JRockit: R28.3.16. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise Java SE, Java SE Embedded, JRockit. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized creation, deletion or modification access to critical data or all Java SE, Java SE Embedded, JRockit accessible data. Note: This vulnerability applies to client and server deployment of Java. This vulnerability can be exploited through sandboxed Java Web Start applications and sandboxed Java applets. It can also be exploited by supplying data to APIs in the specified Component without using sandboxed Java Web Start applications or sandboxed Java applets, such as through a web service. CVSS 3.0 Base Score 5.3 (Integrity impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:H/A:N)., vulnerable_configuration: [{id: cpe:2.3:a:oracle:jdk:1.6.0:update_171, title: cpe:2.3:a:oracle:jdk:1.6.0:update_171}, {id: cpe:2.3:a:oracle:jdk:1.7.0:update_161, title: cpe:2.3:a:oracle:jdk:1.7.0:update_161}, {id: cpe:2.3:a:oracle:jdk:1.8.0:update_152, title: cpe:2.3:a:oracle:jdk:1.8.0:update_152}, {id: cpe:2.3:a:oracle:jdk:1.9.0.1, title: cpe:2.3:a:oracle:jdk:1.9.0.1}, {id: cpe:2.3:a:oracle:jre:1.6.0:update_171, title: cpe:2.3:a:oracle:jre:1.6.0:update_171}, {id: cpe:2.3:a:oracle:jre:1.7.0:update_161, title: cpe:2.3:a:oracle:jre:1.7.0:update_161}, {id: cpe:2.3:a:oracle:jre:1.8.0:update_152, title: cpe:2.3:a:oracle:jre:1.8.0:update_152}, {id: cpe:2.3:a:oracle:jre:1.9.0.1, title: cpe:2.3:a:oracle:jre:1.9.0.1}, {id: cpe:2.3:a:oracle:jrockit:r28.3.16, title: cpe:2.3:a:oracle:jrockit:r28.3.16}, {id: cpe:2.3:a:redhat:satellite:5.6, title: Red Hat Satellite 5.6}, {id: cpe:2.3:a:redhat:satellite:5.7, title: Red Hat Satellite 5.7}, {id: cpe:2.3:a:redhat:satellite:5.8, title: Red Hat Satellite 5.8}, {id: cpe:2.3:o:redhat:enterprise_linux_desktop:6.0, title: Red Hat Enterprise Linux Desktop 6.0}, {id: cpe:2.3:o:redhat:enterprise_linux_desktop:7.0, title: RedHat Enterprise Linux Desktop 7.0}, {id: cpe:2.3:o:redhat:enterprise_linux_server:6.0, title: Red Hat Enterprise Linux Server 6.0}, {id: cpe:2.3:o:redhat:enterprise_linux_server:7.0, title: RedHat Enterprise Linux Server 7.0}, {id: cpe:2.3:o:redhat:enterprise_linux_server_aus:7.4, title: Red Hat Enterprise Linux Server Advanced mission critical Update Support (AUS) 7.4}, {id: cpe:2.3:o:redhat:enterprise_linux_server_aus:7.6, title: Red Hat Enterprise Linux Server Advanced mission critical Update Support (AUS) 7.6}, {id: cpe:2.3:o:redhat:enterprise_linux_server_eus:7.4, title: Red Hat Enterprise Linux Server Extended Update Support (EUS) 7.4}, {id: cpe:2.3:o:redhat:enterprise_linux_server_eus:7.5, title: Red Hat Enterprise Linux Server Extended Update Support (EUS) 7.5}, {id: cpe:2.3:o:redhat:enterprise_linux_server_eus:7.6, title: Red Hat Enterprise Linux Server Extended Update Support (EUS) 7.6}, {id: cpe:2.3:o:redhat:enterprise_linux_server_tus:7.4, title: cpe:2.3:o:redhat:enterprise_linux_server_tus:7.4}, {id: cpe:2.3:o:redhat:enterprise_linux_server_tus:7.6, title: Red Hat Enterprise Linux Server Telecommunications Update Service (TUS) 7.6}, {id: cpe:2.3:o:redhat:enterprise_linux_workstation:6.0, title: Red Hat Enterprise Linux Workstation 6.0}, {id: cpe:2.3:o:redhat:enterprise_linux_workstation:7.0, title: RedHat Enterprise Linux Workstation 7.0}, {id: cpe:2.3:o:debian:debian_linux:7.0, title: Debian Linux 7.0}, {id: cpe:2.3:o:debian:debian_linux:8.0, title: Debian Linux 8.0 (Jessie)}, {id: cpe:2.3:o:debian:debian_linux:9.0, title: Debian Linux 9.0}, {id: cpe:2.3:o:canonical:ubuntu_linux:14.04:-:-:-:lts, title: Canonical Ubuntu Linux  14.04 LTS (Long-Term Support)}, {id: cpe:2.3:o:canonical:ubuntu_linux:16.04:-:-:-:lts, title: Canonical Ubuntu Linux 16.04  LTS (Long-Term Support)}, {id: cpe:2.3:o:canonical:ubuntu_linux:17.10, title: Canonical Ubuntu Linux 17.10}], vulnerable_configuration_cpe_2_2: [cpe:/a:oracle:jdk:1.6.0:update_171, cpe:/a:oracle:jdk:1.7.0:update_161, cpe:/a:oracle:jdk:1.8.0:update_152, cpe:/a:oracle:jdk:1.9.0.1, cpe:/a:oracle:jre:1.6.0:update_171, cpe:/a:oracle:jre:1.7.0:update_161, cpe:/a:oracle:jre:1.8.0:update_152, cpe:/a:oracle:jre:1.9.0.1, cpe:/a:oracle:jrockit:r28.3.16, cpe:/a:redhat:satellite:5.6, cpe:/a:redhat:satellite:5.7, cpe:/a:redhat:satellite:5.8, cpe:/o:redhat:enterprise_linux_desktop:6.0, cpe:/o:redhat:enterprise_linux_desktop:7.0, cpe:/o:redhat:enterprise_linux_server:6.0, cpe:/o:redhat:enterprise_linux_server:7.0, cpe:/o:redhat:enterprise_linux_server_aus:7.4, cpe:/o:redhat:enterprise_linux_server_aus:7.6, cpe:/o:redhat:enterprise_linux_server_eus:7.4, cpe:/o:redhat:enterprise_linux_server_eus:7.5, cpe:/o:redhat:enterprise_linux_server_eus:7.6, cpe:/o:redhat:enterprise_linux_server_tus:7.4, cpe:/o:redhat:enterprise_linux_server_tus:7.6, cpe:/o:redhat:enterprise_linux_workstation:6.0, cpe:/o:redhat:enterprise_linux_workstation:7.0, cpe:/o:debian:debian_linux:7.0, cpe:/o:debian:debian_linux:8.0, cpe:/o:debian:debian_linux:9.0, cpe:/o:canonical:ubuntu_linux:14.04::~~lts~~~, cpe:/o:canonical:ubuntu_linux:16.04::~~lts~~~, cpe:/o:canonical:ubuntu_linux:17.10]}
