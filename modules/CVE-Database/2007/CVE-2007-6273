{Modified: 2011-03-07T22:02:18.597000, Published: 2007-12-07T06:46:00, access: {authentication: NONE, complexity: MEDIUM, vector: NETWORK}, capec: [{id: 135, name: Format String Injection, prerequisites: The target application must accept a strings as user input, fail to sanitize string formatting characters in the user input, and process this string using functions that interpret string formatting characters., related_weakness: [134, 20, 74, 133], solutions: Limit the usage of formatting string functions.
Strong input validation - All user-controllable input must be validated and filtered for illegal formatting characters., summary: An attacker includes formatting characters in a string input field on the target application. Most applications assume that users will provide static text and may respond unpredictably to the presence of formatting character. For example, in certain functions of the C programming languages such as printf, the formatting character %s will print the contents of a memory location expecting this location to identify a string and the formatting character %n prints the number of DWORD written in the memory. An attacker can use this to read or write to memory locations or files, or simply to manipulate the value of the resulting text in unexpected ways. Reading or writing memory may result in program crashes and writing memory could result in the execution of arbitrary code if the attacker can write to the program stack.}, {id: 67, name: String Format Overflow in syslog(), prerequisites: The format string argument of the Syslog function can be tainted with user supplied data., related_weakness: [120, 134, 74, 20, 680, 697], solutions: The following code shows a vulnerable usage of Syslog():, summary: This attack targets the format string vulnerabilities in the syslog() function. An attacker would typically inject malicious input in the format string parameter of the syslog function. This is a common problem, and many public vulnerabilities and associated exploits have been posted.}], cvss: 9.3, cvss-time: 2007-12-07T16:46:00, cwe: CWE-134, exploit-db: [{description: SonicWALL Global VPN Client 4.0.782 Remote Format String Vulnerability. CVE-2007-6273. Dos exploit for windows platform, id: EDB-ID:30840, last seen: 2016-02-03, modified: 2007-12-04, published: 2007-12-04, reporter: SEC Consult, source: https://www.exploit-db.com/download/30840/, title: SonicWALL Global VPN Client 4.0.782 - Remote Format String Vulnerability}], id: CVE-2007-6273, impact: {availability: COMPLETE, confidentiality: COMPLETE, integrity: COMPLETE}, nessus: [{NASL family: Windows, NASL id: SONICWALL_VPN_CLIENT_4_0_0_830.NASL, description: The version of the SonicWALL Global VPN Client software installed on the remote Windows host fails to sanitize the 'name' attribute of the 'Connection' tag and the content of the 'Hostname' tag in the configuration file of format strings.  If an attacker can trick a user on the affected host into importing a specially crafted configuration file, the attacker could leverage this issue to execute arbitrary code on the affected host subject to the user's privileges., last seen: 2019-02-21, modified: 2018-11-15, plugin id: 38929, published: 2009-05-27, reporter: Tenable, source: https://www.tenable.com/plugins/index.php?view=single&id=38929, title: SonicWALL Global VPN Client < 4.0.0.830 Format String Vulnerabilities}], ranking: [[{circl: 3}]], references: [http://marc.info/?l=bugtraq&m=119678272603064&w=2, http://www.sec-consult.com/305.html, http://www.securityfocus.com/bid/26689, http://www.securitytracker.com/id?1019038, http://www.vupen.com/english/advisories/2007/4094], refmap: {bid: [26689], bugtraq: [20071204 SEC Consult SA-20071204-0 :: SonicWALL Global VPN Client Format], misc: [http://www.sec-consult.com/305.html], sectrack: [1019038], secunia: [27917], vupen: [ADV-2007-4094]}, summary: Multiple format string vulnerabilities in the configuration file in SonicWALL GLobal VPN Client 3.1.556 and 4.0.0.810 allow user-assisted remote attackers to execute arbitrary code via format string specifiers in the (1) Hostname tag or the (2) name attribute in the Connection tag.  NOTE: there might not be any realistic circumstances in which this issue crosses privilege boundaries., vulnerable_configuration: [{id: cpe:2.3:a:sonicwall:global_vpn_client:3.1.556, title: cpe:2.3:a:sonicwall:global_vpn_client:3.1.556}, {id: cpe:2.3:a:sonicwall:global_vpn_client:4.0.0.810, title: cpe:2.3:a:sonicwall:global_vpn_client:4.0.0.810}], vulnerable_configuration_cpe_2_2: [cpe:/a:sonicwall:global_vpn_client:3.1.556, cpe:/a:sonicwall:global_vpn_client:4.0.0.810]}
